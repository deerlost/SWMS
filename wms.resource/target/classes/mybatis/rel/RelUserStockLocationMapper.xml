<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.inossem.wms.dao.rel.RelUserStockLocationMapper">
  <resultMap id="BaseResultMap" type="com.inossem.wms.model.rel.RelUserStockLocation">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="fty_id" jdbcType="INTEGER" property="ftyId" />
    <result column="location_id" jdbcType="INTEGER" property="locationId" />
    <result column="location_index" jdbcType="TINYINT" property="locationIndex" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, fty_id, location_id, location_index
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from rel_user_stock_location
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from rel_user_stock_location
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <!-- 删除表中user_id下旧的数据 -->
  <delete id="deleteLocationByUserId" parameterType="java.lang.String">
    delete from rel_user_stock_location
    where user_id = #{userId,jdbcType=VARCHAR}
  </delete >
  <insert id="insert" parameterType="com.inossem.wms.model.rel.RelUserStockLocation">
    insert into rel_user_stock_location (id, user_id, fty_id, 
      location_id, location_index)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=VARCHAR}, #{ftyId,jdbcType=INTEGER}, 
      #{locationId,jdbcType=INTEGER}, #{locationIndex,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.inossem.wms.model.rel.RelUserStockLocation">
    insert into rel_user_stock_location
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="ftyId != null">
        fty_id,
      </if>
      <if test="locationId != null">
        location_id,
      </if>
      <if test="locationIndex != null">
        location_index,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="ftyId != null">
        #{ftyId,jdbcType=INTEGER},
      </if>
      <if test="locationId != null">
        #{locationId,jdbcType=INTEGER},
      </if>
      <if test="locationIndex != null">
        #{locationIndex,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.inossem.wms.model.rel.RelUserStockLocation">
    update rel_user_stock_location
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="ftyId != null">
        fty_id = #{ftyId,jdbcType=INTEGER},
      </if>
      <if test="locationId != null">
        location_id = #{locationId,jdbcType=INTEGER},
      </if>
      <if test="locationIndex != null">
        location_index = #{locationIndex,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.inossem.wms.model.rel.RelUserStockLocation">
    update rel_user_stock_location
    set user_id = #{userId,jdbcType=VARCHAR},
      fty_id = #{ftyId,jdbcType=INTEGER},
      location_id = #{locationId,jdbcType=INTEGER},
      location_index = #{locationIndex,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectStockLocationForUser" parameterType="java.lang.String" resultType="com.inossem.wms.model.vo.RelUserStockLocationVo">
  	SELECT 
	  	r.user_id userId,
	  	f.fty_id ftyId,
	  	f.fty_code ftyCode,
	  	f.fty_name ftyName,
	  	f.fty_type ftyType,
	  	l.location_id locationId,
	  	l.location_code locationCode,
	  	l.location_name locationName,
	  	r.location_index locationIndex,
	  	w.wh_id whId,
	  	w.wh_code whCode,
	  	w.wh_name  whName,
	  	l.status,
	  	c.board_id boardId
	FROM rel_user_stock_location r 
	INNER JOIN dic_factory f
		ON r.fty_id = f.fty_id AND f.is_delete = 0
	INNER JOIN dic_stock_location l 
		ON r.location_id = l.location_id AND l.is_delete = 0		
		AND r.user_id = #{userId,jdbcType=VARCHAR}	
	INNER JOIN dic_corp c ON c.corp_id = f.corp_id AND f.is_delete = 0 AND c.is_delete =0 
	LEFT JOIN dic_warehouse w on w.wh_id = l.wh_id	AND w.is_delete = 0
	ORDER BY r.location_index,l.location_id
  </select>
  <select id="selectStockLocationForBoardId" parameterType="int" resultType="com.inossem.wms.model.vo.RelUserStockLocationVo">
  	SELECT 
	  	f.fty_id ftyId,
	  	f.fty_code ftyCode,
	  	f.fty_name ftyName,
	  	l.location_id locationId,
	  	l.location_code locationCode,
	  	l.location_name locationName,
	  	w.wh_id whId,
	  	w.wh_code whCode,
	  	w.wh_name  whName,
	  	l.status 
	FROM dic_factory f
	INNER JOIN dic_corp c ON c.corp_id = f.corp_id AND f.is_delete = 0 AND c.is_delete = 0 AND c.board_id = #{boardId}
	INNER JOIN dic_stock_location l ON f.fty_id = l.fty_id AND l.is_delete = 0 
	LEFT JOIN dic_warehouse w on w.wh_id = l.wh_id	AND w.is_delete = 0
	
  </select>
</mapper>