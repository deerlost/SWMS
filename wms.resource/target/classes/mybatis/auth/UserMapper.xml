<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd">
<mapper namespace="com.inossem.wms.dao.auth.UserMapper">
  <resultMap id="BaseResultMap" type="com.inossem.wms.model.auth.User">
    <id column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="sex" jdbcType="INTEGER" property="sex" />
    <result column="employer_number" jdbcType="VARCHAR" property="employerNumber" />
    <result column="card_number" jdbcType="VARCHAR" property="cardNumber" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="mail" jdbcType="VARCHAR" property="mail" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="user_type" jdbcType="VARCHAR" property="userType" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
    <result column="org_id" jdbcType="VARCHAR" property="orgId" />
    <result column="org_name" jdbcType="VARCHAR" property="orgName" />
    <result column="display_order" jdbcType="VARCHAR" property="displayOrder" />
    <result column="loginenable" jdbcType="VARCHAR" property="loginenable" />
    <result column="last_login" jdbcType="TIMESTAMP" property="lastLogin" />
    <result column="fail_attempts" jdbcType="INTEGER" property="failAttempts" />
    <result column="last_fail_attempt" jdbcType="TIMESTAMP" property="lastFailAttempt" />
    <result column="is_locked" jdbcType="BIT" property="isLocked" />
    <result column="corp_id" jdbcType="INTEGER" property="corpId" />
    <result column="corp_name" jdbcType="VARCHAR" property="corpName" />
    <result column="corp_code" jdbcType="VARCHAR" property="corpCode" />
    <result column="fty_id" jdbcType="INTEGER" property="ftyId" />
    <result column="fty_name" jdbcType="VARCHAR" property="ftyName" />
    <result column="fty_code" jdbcType="VARCHAR" property="ftyCode" />
    <result column="is_syn" jdbcType="INTEGER" property="isSyn" />
    <result column="role_id" jdbcType="INTEGER" property="roleId" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="department" jdbcType="INTEGER" property="department" />
    <result column="departmentName" jdbcType="VARCHAR" property="departmentName" />
    <result column="board_id" jdbcType="INTEGER" property="boardId" />
    
    
  </resultMap>
  <sql id="Base_Column_List">
    user_id, user_name, password, sex, employer_number, card_number, mobile, mail, title, 
    user_type, create_time, modify_time, org_id, org_name, display_order, loginenable, 
    last_login, fail_attempts, last_fail_attempt, is_locked,corp_id,fty_id,is_syn,department
  </sql>
  
  
  
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from wms_user
    where user_id = #{userId,jdbcType=VARCHAR}
  </select>
  
  <select id="selectByUserName" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from wms_user
    where user_name = #{userName,jdbcType=VARCHAR}
  </select>
  
  <select id="selectCurrentUserByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    SELECT 
	    user_id, user_name, ifnull(password,'') password, sex, employer_number, card_number, mobile, mail, title, 
	    user_type, u.create_time, u.modify_time, org_id, org_name, display_order, loginenable, 
	    last_login, fail_attempts, last_fail_attempt, is_locked,t.corp_code,t.corp_name,w.fty_code,w.fty_name,t.board_id,u.is_syn,
	    department,u.fty_id, u.corp_id
    FROM wms_user u 
    INNER JOIN dic_corp t ON u.corp_id = t.corp_id AND u.user_id = #{userId,jdbcType=VARCHAR}
    LEFT OUTER JOIN dic_factory w ON u.fty_id = w.fty_id
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from wms_user
    where user_id = #{userId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.inossem.wms.model.auth.User">
    insert into wms_user (user_id, user_name, password, 
      sex, employer_number, card_number, 
      mobile, mail, title, 
      user_type, create_time, modify_time, 
      org_id, org_name, display_order, 
      loginenable, last_login, fail_attempts, 
      last_fail_attempt, is_locked,corp_id,fty_id,is_syn)
    values (#{userId,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{sex,jdbcType=INTEGER}, #{employerNumber,jdbcType=VARCHAR}, #{cardNumber,jdbcType=VARCHAR}, 
      #{mobile,jdbcType=VARCHAR}, #{mail,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, 
      #{userType,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{modifyTime,jdbcType=TIMESTAMP}, 
      #{orgId,jdbcType=VARCHAR}, #{orgName,jdbcType=VARCHAR}, #{displayOrder,jdbcType=VARCHAR}, 
      #{loginenable,jdbcType=VARCHAR}, #{lastLogin,jdbcType=TIMESTAMP}, #{failAttempts,jdbcType=INTEGER}, 
      #{lastFailAttempt,jdbcType=TIMESTAMP}, #{isLocked,jdbcType=BIT},#{corpId,jdbcType=VARCHAR},#{ftyId,jdbcType=VARCHAR}
      , #{isSyn,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.inossem.wms.model.auth.User">
    insert into wms_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="employerNumber != null">
        employer_number,
      </if>
      <if test="cardNumber != null">
        card_number,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="mail != null">
        mail,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="userType != null">
        user_type,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="modifyTime != null">
        modify_time,
      </if>
      <if test="orgId != null">
        org_id,
      </if>
      <if test="orgName != null">
        org_name,
      </if>
      <if test="displayOrder != null">
        display_order,
      </if>
      <if test="loginenable != null">
        loginenable,
      </if>
      <if test="lastLogin != null">
        last_login,
      </if>
      <if test="failAttempts != null">
        fail_attempts,
      </if>
      <if test="lastFailAttempt != null">
        last_fail_attempt,
      </if>
      <if test="isLocked != null">
        is_locked,
      </if>
      <if test="corpId != null">
        corp_id,
      </if>
      <if test="ftyId != null">
        fty_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="employerNumber != null">
        #{employerNumber,jdbcType=VARCHAR},
      </if>
      <if test="cardNumber != null">
        #{cardNumber,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="mail != null">
        #{mail,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="userType != null">
        #{userType,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orgId != null">
        #{orgId,jdbcType=VARCHAR},
      </if>
      <if test="orgName != null">
        #{orgName,jdbcType=VARCHAR},
      </if>
      <if test="displayOrder != null">
        #{displayOrder,jdbcType=VARCHAR},
      </if>
      <if test="loginenable != null">
        #{loginenable,jdbcType=VARCHAR},
      </if>
      <if test="lastLogin != null">
        #{lastLogin,jdbcType=TIMESTAMP},
      </if>
      <if test="failAttempts != null">
        #{failAttempts,jdbcType=INTEGER},
      </if>
      <if test="lastFailAttempt != null">
        #{lastFailAttempt,jdbcType=TIMESTAMP},
      </if>
      <if test="isLocked != null">
        #{isLocked,jdbcType=BIT},
      </if>
      <if test="corpId != null">
        #{corpId,jdbcType=VARCHAR},
      </if>
      <if test="ftyId != null">
        #{ftyId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.inossem.wms.model.auth.User">
    update wms_user
    <set>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="employerNumber != null">
        employer_number = #{employerNumber,jdbcType=VARCHAR},
      </if>
      <if test="cardNumber != null">
        card_number = #{cardNumber,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="mail != null">
        mail = #{mail,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="userType != null">
        user_type = #{userType,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orgId != null">
        org_id = #{orgId,jdbcType=VARCHAR},
      </if>
      <if test="orgName != null">
        org_name = #{orgName,jdbcType=VARCHAR},
      </if>
      <if test="displayOrder != null">
        display_order = #{displayOrder,jdbcType=VARCHAR},
      </if>
      <if test="loginenable != null">
        loginenable = #{loginenable,jdbcType=VARCHAR},
      </if>
      <if test="lastLogin != null">
        last_login = #{lastLogin,jdbcType=TIMESTAMP},
      </if>
      <if test="failAttempts != null">
        fail_attempts = #{failAttempts,jdbcType=INTEGER},
      </if>
      <if test="lastFailAttempt != null">
        last_fail_attempt = #{lastFailAttempt,jdbcType=TIMESTAMP},
      </if>
      <if test="isLocked != null">
        is_locked = #{isLocked,jdbcType=BIT},
      </if>
      <if test="corpId != null">
        corp_id = #{corpId,jdbcType=VARCHAR},
      </if>
      <if test="ftyId != null">
        fty_id = #{ftyId,jdbcType=VARCHAR},
      </if>
      <if test="department >0">
        department = #{department,jdbcType=INTEGER},
      </if>
      
    </set>
    where user_id = #{userId,jdbcType=VARCHAR}
  </update>
  
  
  <update id="updateByPrimaryKey" parameterType="com.inossem.wms.model.auth.User">
    update wms_user
    set user_name = #{userName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=INTEGER},
      employer_number = #{employerNumber,jdbcType=VARCHAR},
      card_number = #{cardNumber,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      mail = #{mail,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      user_type = #{userType,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      org_id = #{orgId,jdbcType=VARCHAR},
      org_name = #{orgName,jdbcType=VARCHAR},
      display_order = #{displayOrder,jdbcType=VARCHAR},
      loginenable = #{loginenable,jdbcType=VARCHAR},
      last_login = #{lastLogin,jdbcType=TIMESTAMP},
      fail_attempts = #{failAttempts,jdbcType=INTEGER},
      last_fail_attempt = #{lastFailAttempt,jdbcType=TIMESTAMP},
      is_locked = #{isLocked,jdbcType=BIT},
      corp_id = #{corpId,jdbcType=VARCHAR},
      department = #{department,jdbcType=INTEGER},
      fty_id = #{ftyId,jdbcType=VARCHAR}
    where user_id = #{userId,jdbcType=VARCHAR}
  </update>
  <select id="selectUser" parameterType="com.inossem.wms.model.auth.User" resultMap="BaseResultMap">
    SELECT 
	    user_id, user_name, password, sex, employer_number, card_number, mobile, mail, title, 
	    user_type, u.create_time, u.modify_time, org_id, org_name, display_order, loginenable, 
	    last_login, fail_attempts, last_fail_attempt, is_locked,u.corp_id, t.corp_code,t.corp_name,w.fty_code,w.fty_name,
	    t.board_id,u.is_syn
    FROM wms_user u 
    LEFT OUTER JOIN dic_corp t ON u.corp_id = t.corp_id
    LEFT OUTER JOIN dic_factory w ON u.fty_id = w.fty_id
    WHERE 1=1
    <if test="sql != null">
       	AND ${sql} 
    </if>
  </select>
  
  <select id="selectJBRUser" parameterType="com.inossem.wms.model.auth.User" resultMap="BaseResultMap">
    SELECT 
	    u.user_id, user_name,  mobile, org_name ,t.corp_code,r.role_name,t.corp_name,r.role_id
    FROM wms_user u 
    LEFT OUTER JOIN dic_corp t ON u.corp_id = t.corp_id
    left OUTER join wms_user_role ur on ur.user_id = u.user_id
    left OUTER join wms_role r on r.role_id = ur.role_id
    WHERE 1=1
    <if test="sql != null">
       	AND ${sql} 
    </if>
  </select>
  
  <select id="selectUserForKCPD" parameterType="com.inossem.wms.model.auth.User" resultMap="BaseResultMap">
    SELECT user_id, user_name, org_id, org_name,u.corp_code,t.corp_name
    FROM wms_user u 
    INNER JOIN dic_corp t ON u.corp_id = t.corp_id     
    <if test="sql != null">
       	 AND ${sql} 
    </if>
    LEFT OUTER JOIN dic_factory w ON u.fty_id = w.fty_id   

  </select>
  <select id="selectLocationForUser" parameterType="java.lang.String" resultType="java.lang.String">
    select concat(c.fty_id ,'-',c.location_id ) 
	from rel_user_stock_location a
    INNER JOIN dic_factory b on a.fty_id = b.fty_id
    INNER JOIN dic_stock_location c on a.location_id = c.location_id
    WHERE 1=1
       	AND user_id = #{userId,jdbcType=VARCHAR}
    order by a.location_index ASC
  </select>
  <select id="selectInventoryLocationForUser" parameterType="java.lang.String" resultType="com.inossem.wms.model.vo.RelUserStockLocationVo">
    SELECT f.fty_code ftyCode,
    	   f.fty_name ftyName,
    	   c.location_code locationCode,
           c.location_name locationName,
           l.wh_code whCode,
           l.wh_name whName,
           l.address 
	FROM rel_user_stock_location r
    INNER JOIN dic_factory f on f.fty_id = r.fty_id AND r.user_id = #{userId,jdbcType=VARCHAR}
    INNER JOIN dic_stock_location c on r.location_id = c.location_id
    LEFT OUTER JOIN dic_warehouse l ON l.wh_id = c.wh_id
    ORDER BY r.location_index ASC
  </select>
  <select id="selectRoleForUser" parameterType="java.lang.String" resultType="java.lang.Integer">
    select m.role_id 
	from wms_user_role m
	inner join wms_user u on u.user_id = m.user_id
    where u.user_id = #{userId,jdbcType=VARCHAR}
  </select>
  
 
  <select id="selectLLDSPUserList" parameterType="java.util.HashMap" resultMap="BaseResultMap">
	SELECT u.user_id, u.user_name, u.password, u.sex, u.employer_number, u.card_number, u.mobile, u.mail, u.title, 
	    u.user_type, u.create_time, u.modify_time, u.org_id, u.org_name, u.display_order, u.loginenable, 
	    u.last_login, u.fail_attempts, u.last_fail_attempt, u.is_locked,u.corp_id,u.fty_id,u.is_syn
	FROM wms_user u
	INNER JOIN wms_user_role ur ON u.user_id = ur.user_id AND u.org_id = #{org_id}
	INNER JOIN wms_role r ON ur.role_id = r.role_id 
			AND role_name IN	
		<foreach item="item" index="index" collection="roleNames"
			open="(" separator="," close=")">
			#{item}
		</foreach>
	;
  </select>
  
   
  <!--查询所有用户  -->
  <select id="selectListOnPaging" parameterType="java.util.HashMap" resultType="map">
     SELECT 
     	IFNULL(u.user_id,'') user_id,
     	IFNULL(u.user_name,'') user_name,
     	IFNULL(g.org_name,'') org_name,
     	IFNULL(u.org_id,'') org_id,
     	DATE_FORMAT(u.create_time,'%Y-%m-%d') create_time,
		DATE_FORMAT(u.modify_time,'%Y-%m-%d') modify_time,
		IFNULL(u.is_locked,0) is_locked,
		IFNULL(c.corp_code,'') corp_code,
		IFNULL(c.corp_name,'') corp_name,
		IFNULL(f.fty_code,'') fty_code,
		IFNULL(f.fty_name,'') fty_name,
		IFNULL(u.department,0) department, 
		IFNULL(d.name,'') departmentName
	FROM wms_user u 
	LEFT OUTER JOIN wms_department d ON u.department = d.department_id 
	LEFT OUTER JOIN wms_org g ON u.org_id = g.org_id
    LEFT OUTER JOIN dic_corp c ON u.corp_id = c.corp_id
    LEFT OUTER JOIN dic_factory f ON u.fty_id = f.fty_id
    WHERE 1=1
    <if test="keyword != null">
   	 AND (c.corp_code LIKE CONCAT('%',#{keyword},'%' ) OR c.corp_name LIKE CONCAT('%',#{keyword},'%' ) 
	     OR f.fty_code LIKE CONCAT('%',#{keyword},'%' ) OR f.fty_name LIKE CONCAT('%',#{keyword},'%' )
	     OR u.user_id LIKE CONCAT('%',#{keyword},'%' ) OR u.user_name LIKE CONCAT('%',#{keyword},'%' )		   
	     OR d.name LIKE CONCAT('%',#{keyword},'%' )      
	     )
    </if>
    ORDER BY u.create_time DESC 		
  </select> 
    
  <!--查询所有用户总共行数  -->
  
  <select id="selectListCount" parameterType="java.util.HashMap" resultType="java.lang.Integer">
  		SELECT count(1)
		FROM wms_user u 
		LEFT OUTER JOIN wms_department d ON u.department = d.department_id 
		LEFT OUTER JOIN wms_org g ON u.org_id = g.org_id
    	LEFT OUTER JOIN dic_corp t ON u.corp_id = t.corp_id
    	LEFT OUTER JOIN dic_factory w ON u.fty_id = w.fty_id
    	where 1=1
  	<if test="keyword != null">
   	 	and (u.corp_code like CONCAT('%',#{keyword},'%' ) or t.corp_name like CONCAT('%',#{keyword},'%' ) 
		     or u.fty_code like CONCAT('%',#{keyword},'%' ) or w.fty_name like CONCAT('%',#{keyword},'%' )
		     or u.user_id like CONCAT('%',#{keyword},'%' ) or u.user_name like CONCAT('%',#{keyword},'%' )		   
		     or d.name like CONCAT('%',#{keyword},'%' )      
		     )
    </if>
  </select>
  <select id="selectFirstApproveUserByReceiptIDAndType" parameterType="java.util.HashMap" resultMap="BaseResultMap">
    SELECT 
        u.user_id, u.user_name
    FROM wms_user u
    INNER JOIN wf_receipt_user sra 
    	ON sra.receipt_id = #{receiptId,jdbcType=BIGINT} 
    	AND sra.receipt_type = #{receiptType,jdbcType=INTEGER} 
    	AND u.user_id = sra.user_id
    ORDER BY sra.id ASC
    LIMIT 1;
  </select>
  <select id="selectLastApproveUserByReceiptIDAndType" parameterType="java.util.HashMap" resultMap="BaseResultMap">
    SELECT 
        u.user_id, u.user_name
    FROM wms_user u
    INNER JOIN wf_receipt_user sra 
    	ON sra.receipt_id = #{receiptId,jdbcType=BIGINT} 
    	AND sra.receipt_type = #{receiptType,jdbcType=INTEGER} 
    	AND u.user_id = sra.user_id
    ORDER BY sra.id DESC
    LIMIT 1;
  </select>
  
  <select id="selectByPrimaryKeyForApprove" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    user_id
    from wms_user
    where user_id = #{userId,jdbcType=VARCHAR}
  </select>
  <select id="selectCurrentUserWarehouse" parameterType="java.lang.String" resultType="java.util.Map">
  	SELECT
		w.wh_name,
		w.wh_code,
		wa.area_code,
		wp.position_code
	FROM
		dic_warehouse w
	INNER JOIN dic_warehouse_area wa ON w.wh_id = wa.wh_id
	INNER JOIN dic_warehouse_position wp ON wa.area_id = wp.area_id
	INNER JOIN (
		SELECT DISTINCT
			sl.wh_id
		FROM
			rel_user_stock_location usl
		INNER JOIN dic_stock_location sl ON usl.location_id = sl.location_id
		WHERE
			usl.user_id = #{userId,jdbcType=VARCHAR}
	) t ON w.wh_id = t.wh_id
  </select>
  
  <update id="changePassword" parameterType="map">
  update  wms_user w 
  <set>
  <if test="password!=null">
    w.`password`=#{password}
  </if> 
  </set>
  <where>
  <if test="userId!=null">  
    w.user_id= #{userId}
  </if>  
  </where>  
  </update>  
  
  <select id="getPrinterList" resultType="map">
    select 
    printer_id,
    printer_name,
    printer_ip,
    type
    from dic_printer where is_delete=0
  </select>
  
  <select id="getPrinterListByUserId" resultType="map">
    select 
    printer_id,
    printer_name,
    printer_ip,
    type
    from dic_printer where is_delete=0 and printer_id in (select printer_id from rel_user_printer where user_id=#{userId} )
  </select>
</mapper>