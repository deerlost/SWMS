<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.inossem.wms.dao.biz.BufFactoryMatPriceMapper">
  <resultMap id="BaseResultMap" type="com.inossem.wms.model.biz.BufFactoryMatPrice">
    <id column="price_id" jdbcType="INTEGER" property="priceId" />
    <result column="fty_id" jdbcType="INTEGER" property="ftyId" />
    <result column="mat_id" jdbcType="INTEGER" property="matId" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
  </resultMap>
  <sql id="Base_Column_List">
    price_id, fty_id, mat_id, price, create_time, modify_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from buf_factory_mat_price
    where price_id = #{priceId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from buf_factory_mat_price
    where price_id = #{priceId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.inossem.wms.model.biz.BufFactoryMatPrice">
    insert into buf_factory_mat_price (price_id, fty_id, mat_id, 
      price, create_time, modify_time
      )
    values (#{priceId,jdbcType=INTEGER}, #{ftyId,jdbcType=INTEGER}, #{matId,jdbcType=INTEGER}, 
      #{price,jdbcType=DECIMAL}, #{createTime,jdbcType=TIMESTAMP}, #{modifyTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.inossem.wms.model.biz.BufFactoryMatPrice">
    insert into buf_factory_mat_price
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="priceId != null">
        price_id,
      </if>
      <if test="ftyId != null">
        fty_id,
      </if>
      <if test="matId != null">
        mat_id,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="modifyTime != null">
        modify_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="priceId != null">
        #{priceId,jdbcType=INTEGER},
      </if>
      <if test="ftyId != null">
        #{ftyId,jdbcType=INTEGER},
      </if>
      <if test="matId != null">
        #{matId,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.inossem.wms.model.biz.BufFactoryMatPrice">
    update buf_factory_mat_price
    <set>
      <if test="ftyId != null">
        fty_id = #{ftyId,jdbcType=INTEGER},
      </if>
      <if test="matId != null">
        mat_id = #{matId,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where price_id = #{priceId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.inossem.wms.model.biz.BufFactoryMatPrice">
    update buf_factory_mat_price
    set fty_id = #{ftyId,jdbcType=INTEGER},
      mat_id = #{matId,jdbcType=INTEGER},
      price = #{price,jdbcType=DECIMAL},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP}
    where price_id = #{priceId,jdbcType=INTEGER}
  </update>
  <insert id="insertOrUpdatePrices" parameterType="java.util.ArrayList">
    INSERT INTO buf_factory_mat_price (fty_id, mat_id, price)
    VALUES 
	<foreach collection="list" item="item" index="index" separator=","> 
        	(#{item.ftyId},#{item.matId},#{item.price}) 
    </foreach> 
    ON DUPLICATE KEY UPDATE price = VALUES(price)
  </insert>
</mapper>