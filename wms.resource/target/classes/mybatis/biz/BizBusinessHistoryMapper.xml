<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.inossem.wms.dao.biz.BizBusinessHistoryMapper">
  <resultMap id="BaseResultMap" type="com.inossem.wms.model.biz.BizBusinessHistory">
    <id column="business_history_id" jdbcType="INTEGER" property="businessHistoryId" />
    <result column="refer_receipt_id" jdbcType="INTEGER" property="referReceiptId" />
    <result column="refer_receipt_code" jdbcType="VARCHAR" property="referReceiptCode" />
    <result column="refer_receipt_rid" jdbcType="INTEGER" property="referReceiptRid" />
    <result column="refer_receipt_pid" jdbcType="INTEGER" property="referReceiptPid" />
    <result column="business_type" jdbcType="TINYINT" property="businessType" />
    <result column="receipt_type" jdbcType="TINYINT" property="receiptType" />
    <result column="mat_id" jdbcType="INTEGER" property="matId" />
    <result column="batch" jdbcType="BIGINT" property="batch" />
    <result column="fty_id" jdbcType="INTEGER" property="ftyId" />
    <result column="location_id" jdbcType="INTEGER" property="locationId" />
    <result column="area_id" jdbcType="INTEGER" property="areaId" />
    <result column="position_id" jdbcType="INTEGER" property="positionId" />
    <result column="pallet_id" jdbcType="INTEGER" property="palletId" />
    <result column="package_id" jdbcType="INTEGER" property="packageId" />
    <result column="qty" jdbcType="DECIMAL" property="qty" />
    <result column="debit_credit" jdbcType="VARCHAR" property="debitCredit" />
    <result column="syn_sap" jdbcType="BIT" property="synSap" />
    <result column="syn_mes" jdbcType="BIT" property="synMes" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="modify_user" jdbcType="VARCHAR" property="modifyUser" />
    <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
  </resultMap>
  <sql id="Base_Column_List">
    business_history_id, refer_receipt_id, refer_receipt_code, refer_receipt_rid, refer_receipt_pid, 
    business_type, receipt_type, mat_id, batch, fty_id, location_id, area_id, position_id, 
    pallet_id, package_id, qty, debit_credit, syn_sap, syn_mes, create_user, create_time, 
    modify_user, modify_time
  </sql>
  
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from biz_business_history
    where business_history_id = #{businessHistoryId,jdbcType=INTEGER}
  </select>
  <select id="countByPackageIds" parameterType="java.util.List" resultType="java.lang.Integer">
    select count(1) 
    
    from biz_business_history
    where package_id in 
    <foreach collection="list" item="item" index="index" open="(" close=")" separator=",">  		
			#{item}     			 
	</foreach> 
  </select>
  <select id="selectNewestByParams" parameterType="java.util.Map" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from biz_business_history
    where business_type = #{businessType}
    <if test="matId != null">
        and mat_id = #{matId}
    </if>
  	<if test="locationId != null">
        and location_id = #{locationId}
    </if>
    
    and package_id = #{packageId}
    order by create_time DESC
    limit 1
  </select>
  
  
  
  
  <insert id="insertSelective" parameterType="com.inossem.wms.model.biz.BizBusinessHistory">
    insert into biz_business_history
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="businessHistoryId != null">
        business_history_id,
      </if>
      <if test="referReceiptId != null">
        refer_receipt_id,
      </if>
      <if test="referReceiptCode != null">
        refer_receipt_code,
      </if>
      <if test="referReceiptRid != null">
        refer_receipt_rid,
      </if>
      <if test="referReceiptPid != null">
        refer_receipt_pid,
      </if>
      <if test="businessType != null">
        business_type,
      </if>
      <if test="receiptType != null">
        receipt_type,
      </if>
      <if test="matId != null">
        mat_id,
      </if>
      <if test="batch != null">
        batch,
      </if>
      <if test="ftyId != null">
        fty_id,
      </if>
      <if test="locationId != null">
        location_id,
      </if>
      <if test="areaId != null">
        area_id,
      </if>
      <if test="positionId != null">
        position_id,
      </if>
      <if test="palletId != null">
        pallet_id,
      </if>
      <if test="packageId != null">
        package_id,
      </if>
      <if test="qty != null">
        qty,
      </if>
      <if test="debitCredit != null">
        debit_credit,
      </if>
      <if test="synSap != null">
        syn_sap,
      </if>
      <if test="synMes != null">
        syn_mes,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="modifyUser != null">
        modify_user,
      </if>
      <if test="modifyTime != null">
        modify_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="businessHistoryId != null">
        #{businessHistoryId,jdbcType=INTEGER},
      </if>
      <if test="referReceiptId != null">
        #{referReceiptId,jdbcType=INTEGER},
      </if>
      <if test="referReceiptCode != null">
        #{referReceiptCode,jdbcType=VARCHAR},
      </if>
      <if test="referReceiptRid != null">
        #{referReceiptRid,jdbcType=INTEGER},
      </if>
      <if test="referReceiptPid != null">
        #{referReceiptPid,jdbcType=INTEGER},
      </if>
      <if test="businessType != null">
        #{businessType,jdbcType=TINYINT},
      </if>
      <if test="receiptType != null">
        #{receiptType,jdbcType=TINYINT},
      </if>
      <if test="matId != null">
        #{matId,jdbcType=INTEGER},
      </if>
      <if test="batch != null">
        #{batch,jdbcType=BIGINT},
      </if>
      <if test="ftyId != null">
        #{ftyId,jdbcType=INTEGER},
      </if>
      <if test="locationId != null">
        #{locationId,jdbcType=INTEGER},
      </if>
      <if test="areaId != null">
        #{areaId,jdbcType=INTEGER},
      </if>
      <if test="positionId != null">
        #{positionId,jdbcType=INTEGER},
      </if>
      <if test="palletId != null">
        #{palletId,jdbcType=INTEGER},
      </if>
      <if test="packageId != null">
        #{packageId,jdbcType=INTEGER},
      </if>
      <if test="qty != null">
        #{qty,jdbcType=DECIMAL},
      </if>
      <if test="debitCredit != null">
        #{debitCredit,jdbcType=VARCHAR},
      </if>
      <if test="synSap != null">
        #{synSap,jdbcType=BIT},
      </if>
      <if test="synMes != null">
        #{synMes,jdbcType=BIT},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyUser != null">
        #{modifyUser,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null">
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.inossem.wms.model.biz.BizBusinessHistory">
    update biz_business_history
    <set>
      <if test="referReceiptId != null">
        refer_receipt_id = #{referReceiptId,jdbcType=INTEGER},
      </if>
      <if test="referReceiptCode != null">
        refer_receipt_code = #{referReceiptCode,jdbcType=VARCHAR},
      </if>
      <if test="referReceiptRid != null">
        refer_receipt_rid = #{referReceiptRid,jdbcType=INTEGER},
      </if>
      <if test="referReceiptPid != null">
        refer_receipt_pid = #{referReceiptPid,jdbcType=INTEGER},
      </if>
      <if test="businessType != null">
        business_type = #{businessType,jdbcType=TINYINT},
      </if>
      <if test="receiptType != null">
        receipt_type = #{receiptType,jdbcType=TINYINT},
      </if>
      <if test="matId != null">
        mat_id = #{matId,jdbcType=INTEGER},
      </if>
      <if test="batch != null">
        batch = #{batch,jdbcType=BIGINT},
      </if>
      <if test="ftyId != null">
        fty_id = #{ftyId,jdbcType=INTEGER},
      </if>
      <if test="locationId != null">
        location_id = #{locationId,jdbcType=INTEGER},
      </if>
      <if test="areaId != null">
        area_id = #{areaId,jdbcType=INTEGER},
      </if>
      <if test="positionId != null">
        position_id = #{positionId,jdbcType=INTEGER},
      </if>
      <if test="palletId != null">
        pallet_id = #{palletId,jdbcType=INTEGER},
      </if>
      <if test="packageId != null">
        package_id = #{packageId,jdbcType=INTEGER},
      </if>
      <if test="qty != null">
        qty = #{qty,jdbcType=DECIMAL},
      </if>
      <if test="debitCredit != null">
        debit_credit = #{debitCredit,jdbcType=VARCHAR},
      </if>
      <if test="synSap != null">
        syn_sap = #{synSap,jdbcType=BIT},
      </if>
      <if test="synMes != null">
        syn_mes = #{synMes,jdbcType=BIT},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyUser != null">
        modify_user = #{modifyUser,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null">
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where business_history_id = #{businessHistoryId,jdbcType=INTEGER}
  </update>
  	
  <resultMap type="com.inossem.wms.model.vo.BizBusinessHistoryVo" id="MyMap">
	<result column="mat_id" jdbcType="INTEGER" property="matId" />
	<result column="mat_code" jdbcType="VARCHAR" property="matCode" />
	<result column="mat_name" jdbcType="VARCHAR" property="matName" />
	<result column="unit_id" jdbcType="INTEGER" property="unitId" />
	<result column="location_id" jdbcType="INTEGER" property="locationId" />
	<result column="location_code" jdbcType="VARCHAR" property="locationCode"/>
	<result column="location_name" jdbcType="VARCHAR" property="locationName"/>
	<result column="fty_id" jdbcType="INTEGER" property="ftyId" />
	<result column="fty_code" jdbcType="VARCHAR" property="ftyCode"/>
	<result column="fty_name" jdbcType="VARCHAR" property="ftyName"/>
	<result column="unit_code" jdbcType="VARCHAR" property="unitCode" />
	<result column="unit_name" jdbcType="VARCHAR" property="unitName" />
	<result column="begin_qty" jdbcType="DECIMAL" property="beginQty" />
	<result column="input_qty" jdbcType="DECIMAL" property="inputQty" />
	<result column="output_qty" jdbcType="DECIMAL" property="outputQty" />
	<result column="end_qty" jdbcType="DECIMAL" property="endQty" />
	<result column="erp_batch" jdbcType="VARCHAR" property="erpBatch" />
	<result column="package_type_id" jdbcType="INTEGER" property="packageTypeId" />
	<result column="package_standard" jdbcType="DECIMAL" property="packageStandard" />
	<result column="package_standard_ch" jdbcType="VARCHAR" property="packageStandardCh" />
	<result column="package_type_code" jdbcType="VARCHAR" property="packageTypeCode" />
	<result column="package_type_name" jdbcType="VARCHAR" property="packageTypeName" />
  </resultMap>		
  	
  <select id="selectHistoryListByDispatcherOnPaging" resultMap="MyMap" parameterType="map">
		SELECT
			after_stock.mat_id,
			mat.mat_code,
			mat.mat_name,
			unit.unit_code,
			unit.name_zh unit_name,
			after_stock.location_id,
			location.location_code,
			location.location_name,
			IFNULL(before_stock.begin_qty, 0) begin_qty,
			after_stock.input_qty,
			after_stock.output_qty,
			IFNULL(before_stock.begin_qty, 0) + after_stock.input_qty - after_stock.output_qty end_qty,
			bmat.erp_batch,
     		bmat.package_type_id,
			pack.package_type_name,
			pack.package_type_code,
			pack.package_standard /  (case when unit.unit_code = 'KG' then 1 else 1000 end) package_standard,
			pack.package_standard_ch,
			fty.fty_code,
			fty.fty_name
			FROM
				(
					SELECT
						mat_id,
						location_id,
						SUM( CASE debit_credit WHEN 'S' THEN qty ELSE 0 END ) AS input_qty,
						SUM( CASE debit_credit WHEN 'H' THEN qty ELSE 0 END ) AS output_qty,
						ANY_value(batch) batch
					FROM
						biz_business_history
					WHERE
						create_time &gt;= TIMESTAMP (#{createTimeStart})
					AND create_time &lt; TIMESTAMP (date_sub(#{createTimeEnd},INTERVAL - 1 DAY)) AND business_type in (1,2)
					<if test="ftyId != null">
                        AND fty_id=#{ftyId}
					</if>
		            <if test="locationId != null">
                        AND location_id=#{locationId}
					</if>
					GROUP BY mat_id,location_id
				) after_stock
			INNER JOIN dic_stock_location location ON location.location_id = after_stock.location_id
			INNER JOIN dic_material mat ON mat.mat_id = after_stock.mat_id
			INNER JOIN batch_material bmat ON bmat.batch=after_stock.batch 
				AND bmat.fty_id=location.fty_id AND bmat.mat_id=after_stock.mat_id
			INNER JOIN dic_factory fty ON fty.fty_id = bmat.fty_id 	
			INNER JOIN dic_package_type pack ON pack.package_type_id = bmat.package_type_id
			INNER JOIN dic_unit unit ON unit.unit_id = mat.unit_id
			<if test="whId != null">
      		  AND location.wh_id=#{whId}
       		</if>
			<if test="matCode != null and matCode != ''">
              and mat.mat_code=#{matCode}
            </if>
			LEFT JOIN (
				SELECT
					h.mat_id,
					h.location_id,
					IFNULL (ANY_VALUE(be.qty), 0) + SUM(CASE h.debit_credit WHEN 'S' THEN h.qty ELSE 0 END) 
					- SUM(CASE h.debit_credit WHEN 'H' THEN h.qty ELSE 0 END) begin_qty
				FROM
					biz_business_history h
				INNER JOIN stock_batch_begin be ON be.mat_id = h.mat_id
				AND be.location_id = h.location_id
				AND be.create_time = (SELECT MIN(create_time) FROM stock_batch_begin 
					WHERE create_time &gt;= TIMESTAMP (date_sub(#{createTimeStart},INTERVAL DAY (#{createTimeStart}) - 1 DAY))
					AND create_time &lt; TIMESTAMP (date_sub(#{createTimeStart},INTERVAL - 1 MONTH))
					AND mat_id = be.mat_id
					AND location_id = be.location_id
					AND business_type in (1,2)
                    <if test="ftyId != null">
                      AND fty_id=#{ftyId}
                    </if>
                    <if test="locationId != null">
                      AND location_id=#{locationId}
                    </if>
				)
				AND h.create_time &gt;= be.create_time
				AND h.create_time &lt; TIMESTAMP (#{createTimeStart})
				GROUP BY
					h.mat_id,
					h.location_id
			) before_stock ON after_stock.mat_id = before_stock.mat_id
			AND after_stock.location_id = before_stock.location_id
  </select>
  
  <select id="getPackageExpressInfo" resultType="map">
  		select 
  			a.receive_name,
  			a.shipping_type_name,
  			a.location_name
  		 from (select  
			ahead.receive_name,
			thead.shipping_type_name,
			location.location_name,
			history.create_time
			from biz_business_history history 
			INNER JOIN biz_stock_task_head_cw thead on history.refer_receipt_id=thead.stock_task_id
				AND history.receipt_type=34 AND thead.is_delete=0
				AND thead.refer_receipt_type=21
				AND history.package_id=#{packageId}
			INNER JOIN biz_allocate_cargo_head ahead ON ahead.allocate_cargo_id=thead.refer_receipt_id
			INNER JOIN dic_stock_location location ON location.location_id= history.location_id
			Union
				select  
				ahead.receive_name,
				thead.shipping_type_name,
				location.location_name,
				history.create_time
				from biz_business_history history 
				INNER JOIN biz_stock_task_head_cw thead on history.refer_receipt_id=thead.stock_task_id
					AND history.receipt_type=34 AND thead.is_delete=0
					AND thead.refer_receipt_type IN (22,26,27,28)
					AND history.package_id=#{packageId}
				INNER JOIN biz_allocate_cargo_head ahead ON ahead.allocate_cargo_id=thead.refer_receipt_id
				INNER JOIN dic_stock_location location ON location.location_id= history.location_id) a 
		ORDER BY a.create_time DESC LIMIT 1
  </select>
</mapper>