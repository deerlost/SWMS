<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.inossem.wms.dao.dic.DicWarehousePositionMapper">
  <resultMap id="BaseResultMap" type="com.inossem.wms.model.dic.DicWarehousePosition">
    <id column="position_id" jdbcType="INTEGER" property="positionId" />
    <result column="wh_id" jdbcType="INTEGER" property="whId" />
    <result column="area_id" jdbcType="INTEGER" property="areaId" />
    <result column="position_code" jdbcType="VARCHAR" property="positionCode" />
    <result column="position_index1" jdbcType="CHAR" property="positionIndex1" />
    <result column="position_index2" jdbcType="CHAR" property="positionIndex2" />
    <result column="position_index3" jdbcType="CHAR" property="positionIndex3" />
    <result column="freeze_stocktake" jdbcType="TINYINT" property="freezeStocktake" />
    <result column="freeze_input" jdbcType="TINYINT" property="freezeInput" />
    <result column="freeze_output" jdbcType="TINYINT" property="freezeOutput" />
    <result column="freeze_id" jdbcType="TINYINT" property="freezeId" />
    <result column="unit_weight" jdbcType="INTEGER" property="unitWeight" />
    <result column="unit_volume" jdbcType="INTEGER" property="unitVolume" />
    <result column="is_delete" jdbcType="TINYINT" property="isDelete" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
    <result column="wh_code" jdbcType="VARCHAR" property="whCode" />
    <result column="area_code" jdbcType="VARCHAR" property="areaCode" />
     <result column="wh_name" jdbcType="VARCHAR" property="whName" />
     <result column="area_name" jdbcType="VARCHAR" property="areaName" />
     
     <result column="storage_type_id" jdbcType="INTEGER" property="storageTypeId" />
     <result column="storage_type_code" jdbcType="VARCHAR" property="storageTypeCode" />
     <result column="storage_type_name" jdbcType="VARCHAR" property="storageTypeName" />
    <result column="is_default" jdbcType="TINYINT" property="isDefault" />
  </resultMap>
  <sql id="Base_Column_List">
    position_id, wh_id, area_id, position_code, position_index1, position_index2, position_index3, 
    freeze_stocktake, freeze_input, freeze_output, freeze_id, unit_weight, unit_volume, 
    is_delete, create_time, modify_time ,is_default
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from dic_warehouse_position
    where position_id = #{positionId,jdbcType=INTEGER}
  </select>
  <!-- 存储区打印仓位 -->
  <select id="selectPositionForPrint"  parameterType="map"  resultMap="BaseResultMap">
  	select 
    <include refid="Base_Column_List" />
    from dic_warehouse_position
    where area_id = #{areaId,jdbcType=INTEGER}
    and  position_code between #{minPositionCode} and  #{maxPositionCode}
    limit #{minCount} ,#{maxCount}
    
  </select>
  
  <select id="selectPositionForImport"  resultType="java.lang.String">
    SELECT DISTINCT
		CONCAT(
			w.wh_code,
			'-',
			wa.area_code,
			'-',
			wp.position_code
		)
	FROM
		dic_warehouse_position wp
	INNER JOIN dic_warehouse_area wa ON wp.area_id = wa.area_id
	INNER JOIN dic_warehouse w ON wa.wh_id = w.wh_id
  </select>
  
   <select id="selectPositionByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
   SELECT
	dp.position_id,
	dp.wh_id,
	dw.wh_code,
    dw.wh_name,
	dp.area_id,
	da.area_code,
    da.area_name,
	dp.position_code,
	dp.freeze_input,
	dp.freeze_output,
	dp.unit_weight,
	dp.unit_volume,
    ifnull(st.storage_type_id,'') storage_type_id ,
    ifnull(st.storage_type_code,'') storage_type_code,
    ifnull(st.storage_type_name,'') storage_type_name
    FROM
	dic_warehouse_position dp LEFT JOIN dic_warehouse dw ON dp.wh_id = dw.wh_id
	LEFT JOIN dic_warehouse_area da ON dp.area_id = da.area_id
	left join dic_storage_type st on dp.storage_type_id=st.storage_type_id
	    where position_id = #{positionId,jdbcType=INTEGER}	
  </select>
  
  
  <select id="selectDicWarehousePositionByKey" parameterType="map" resultMap="BaseResultMap"> 
  	select 
    <include refid="Base_Column_List" />    
    from dic_warehouse_position
    where wh_id = #{whId,jdbcType=INTEGER}
  	and   area_id = #{areaId,jdbcType=INTEGER}
  	and   position_code = #{positionCode,jdbcType=VARCHAR}
  </select>
  
   <select id="selectDicWarehousePositionByPositionIndex" parameterType="com.inossem.wms.model.dic.DicWarehousePosition" resultMap="BaseResultMap"> 
  	select 
    <include refid="Base_Column_List" />
    from dic_warehouse_position
    where area_id = #{areaId,jdbcType=INTEGER}
  	and   position_code = #{positionCode,jdbcType=VARCHAR}
  </select>
  
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from dic_warehouse_position
    where position_id = #{positionId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.inossem.wms.model.dic.DicWarehousePosition">
    insert into dic_warehouse_position (position_id, wh_id, area_id, 
      position_code, position_index1, position_index2, 
      position_index3, freeze_stocktake, freeze_input, 
      freeze_output, freeze_id, unit_weight, 
      unit_volume, is_delete, create_time, 
      modify_time)
    values (#{positionId,jdbcType=INTEGER}, #{whId,jdbcType=INTEGER}, #{areaId,jdbcType=INTEGER}, 
      #{positionCode,jdbcType=VARCHAR}, #{positionIndex1,jdbcType=CHAR}, #{positionIndex2,jdbcType=CHAR}, 
      #{positionIndex3,jdbcType=CHAR}, #{freezeStocktake,jdbcType=TINYINT}, #{freezeInput,jdbcType=TINYINT}, 
      #{freezeOutput,jdbcType=TINYINT}, #{freezeId,jdbcType=TINYINT}, #{unitWeight,jdbcType=INTEGER}, 
      #{unitVolume,jdbcType=INTEGER}, #{isDelete,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{modifyTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.inossem.wms.model.dic.DicWarehousePosition">
    insert into dic_warehouse_position
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="positionId != null">
        position_id,
      </if>
      <if test="whId != null">
        wh_id,
      </if>
      <if test="areaId != null">
        area_id,
      </if>
      <if test="positionCode != null">
        position_code,
      </if>
      <if test="positionIndex1 != null">
        position_index1,
      </if>
      <if test="positionIndex2 != null">
        position_index2,
      </if>
      <if test="positionIndex3 != null">
        position_index3,
      </if>
      <if test="freezeStocktake != null">
        freeze_stocktake,
      </if>
      <if test="freezeInput != null">
        freeze_input,
      </if>
      <if test="freezeOutput != null">
        freeze_output,
      </if>
      <if test="freezeId != null">
        freeze_id,
      </if>
      <if test="unitWeight != null">
        unit_weight,
      </if>
      <if test="unitVolume != null">
        unit_volume,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="modifyTime != null">
        modify_time,
      </if>
      <if test="storageTypeId != null">
        storage_type_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="positionId != null">
        #{positionId,jdbcType=INTEGER},
      </if>
      <if test="whId != null">
        #{whId,jdbcType=INTEGER},
      </if>
      <if test="areaId != null">
        #{areaId,jdbcType=INTEGER},
      </if>
      <if test="positionCode != null">
        #{positionCode,jdbcType=VARCHAR},
      </if>
      <if test="positionIndex1 != null">
        #{positionIndex1,jdbcType=CHAR},
      </if>
      <if test="positionIndex2 != null">
        #{positionIndex2,jdbcType=CHAR},
      </if>
      <if test="positionIndex3 != null">
        #{positionIndex3,jdbcType=CHAR},
      </if>
      <if test="freezeStocktake != null">
        #{freezeStocktake,jdbcType=TINYINT},
      </if>
      <if test="freezeInput != null">
        #{freezeInput,jdbcType=TINYINT},
      </if>
      <if test="freezeOutput != null">
        #{freezeOutput,jdbcType=TINYINT},
      </if>
      <if test="freezeId != null">
        #{freezeId,jdbcType=TINYINT},
      </if>
      <if test="unitWeight != null">
        #{unitWeight,jdbcType=INTEGER},
      </if>
      <if test="unitVolume != null">
        #{unitVolume,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>      
       <if test="storageTypeId != null">
        #{storageTypeId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.inossem.wms.model.dic.DicWarehousePosition">
    update dic_warehouse_position
    <set>
      <if test="whId != null">
        wh_id = #{whId,jdbcType=INTEGER},
      </if>
      <if test="areaId != null">
        area_id = #{areaId,jdbcType=INTEGER},
      </if>
      <if test="positionCode != null">
        position_code = #{positionCode,jdbcType=VARCHAR},
      </if>
      <if test="positionIndex1 != null">
        position_index1 = #{positionIndex1,jdbcType=CHAR},
      </if>
      <if test="positionIndex2 != null">
        position_index2 = #{positionIndex2,jdbcType=CHAR},
      </if>
      <if test="positionIndex3 != null">
        position_index3 = #{positionIndex3,jdbcType=CHAR},
      </if>
      <if test="freezeStocktake != null">
        freeze_stocktake = #{freezeStocktake,jdbcType=TINYINT},
      </if>
      <if test="freezeInput != null">
        freeze_input = #{freezeInput,jdbcType=TINYINT},
      </if>
      <if test="freezeOutput != null">
        freeze_output = #{freezeOutput,jdbcType=TINYINT},
      </if>
      <if test="freezeId != null">
        freeze_id = #{freezeId,jdbcType=TINYINT},
      </if>
      <if test="unitWeight != null">
        unit_weight = #{unitWeight,jdbcType=INTEGER},
      </if>
      <if test="unitVolume != null">
        unit_volume = #{unitVolume,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
       <if test="storageTypeId != null">
        storage_type_id= #{storageTypeId,jdbcType=INTEGER},
      </if>
    </set>
    where position_id = #{positionId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.inossem.wms.model.dic.DicWarehousePosition">
    update dic_warehouse_position
    set wh_id = #{whId,jdbcType=INTEGER},
      area_id = #{areaId,jdbcType=INTEGER},
      position_code = #{positionCode,jdbcType=VARCHAR},
      position_index1 = #{positionIndex1,jdbcType=CHAR},
      position_index2 = #{positionIndex2,jdbcType=CHAR},
      position_index3 = #{positionIndex3,jdbcType=CHAR},
      freeze_stocktake = #{freezeStocktake,jdbcType=TINYINT},
      freeze_input = #{freezeInput,jdbcType=TINYINT},
      freeze_output = #{freezeOutput,jdbcType=TINYINT},
      freeze_id = #{freezeId,jdbcType=TINYINT},
      unit_weight = #{unitWeight,jdbcType=INTEGER},
      unit_volume = #{unitVolume,jdbcType=INTEGER},
      is_delete = #{isDelete,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
     storage_type_id= #{storageTypeId,jdbcType=INTEGER}
    where position_id = #{positionId,jdbcType=INTEGER}
  </update>
  <select id="selectIdAndCodeBySql" parameterType="java.lang.String" resultType="com.inossem.wms.model.dic.DicWarehousePosition">
    ${value}
  </select>
  
  	<!-- 根据工厂，库存地点，查询存储区列表数据接口  -->
	<select id="findStorageAreaListByFactoryCodeAndInventoryAddressCode"
		parameterType="map" resultType="map">
		SELECT DISTINCT
			a.area_id,
			wa.area_code
		FROM
			dic_warehouse_position AS a
		JOIN dic_warehouse_area as wa on wa.area_id=a.area_id
		JOIN dic_stock_location AS b ON a.wh_id = b.wh_id
		AND b.fty_id = #{ftyId} and b.location_id =#{locationId}
	</select>
	
	<!-- 根据工厂编码和库存地址编码和存储区编码来查询仓位信息列表   -->
	<select id="findPositionListByFactoryCodeAndInventoryAddressCodeAndStorageArea"
		parameterType="map" resultType="map">
		SELECT
			a.position_id,
			a.position_code
		FROM
			dic_warehouse_position AS a
		JOIN dic_stock_location AS b ON a.wh_id = b.wh_id
		AND b.fty_id = #{ftyId} and b.location_id = #{locationId}
		<where>
			<if test="areaId !=null and areaId != ''">
				and a.area_id = #{areaId}
			</if>
			<if test="condition !=null and condition != ''">
				and
				(
					a.position_code like concat(concat('%', #{condition}),'%')
				)
			</if>
		</where>
	</select>
  
  <!-- 移动端-根据工厂编码和库存地址编码来查询 校验仓位信息列表 -->
  <select id="findPositionListByFactoryCodeAndInventoryAddressCode"
		parameterType="map" resultType="map">
		SELECT
			a.area_id,
			a.position_id,
			a.position_code
		FROM
			dic_warehouse_position AS a
		JOIN dic_stock_location AS b ON a.wh_id = b.wh_id
			and b.fty_id = #{ftyId} 
			and b.location_id = #{locationId}
		<where>
			<if test="condition !=null and condition != ''">
				and
				(
					a.position_code like concat(concat('%', #{condition}),'%')
				)
			</if>
		</where>
	</select>
	
	
	 <!-- 仓位主数据分页查询 刘宇 2018.02.27 -->
    <select id="selectWarehousePositionOnPaging" parameterType="java.util.Map" resultType="java.util.Map" >
		SELECT
			 dwp.position_id,
			 dwp.position_code,
			 dw.wh_id,
			 dw.wh_code,
			 dw.wh_name,
			 dwa.area_id,
			 dwa.area_code,
			 dwa.area_name,
			 dwp.freeze_output,
			 dwp.freeze_input,
			 dwp.freeze_id,
			 dwp.unit_weight,
			 du1.unit_code unit_code_weight,
			 du1.name_zh name_zh_weight,
			 dwp.unit_volume,
			 du2.unit_code unit_code_volume,
			 du2.name_zh name_zh_volume,
			 dwp.create_time createTime,
            st.storage_type_id,
             st.storage_type_code,
            st.storage_type_name
		FROM dic_warehouse_position dwp
		inner join dic_warehouse dw on dwp.wh_id = dw.wh_id	
		and dwp.is_delete = 0
		<if test="positionCode !=null and positionCode != ''">
				and dwp.position_code = #{positionCode,jdbcType=VARCHAR}
		</if>
		<if test="whId !=null and whId !=''">
				and dwp.wh_id = #{whId,jdbcType=INTEGER}
		</if>
		<if test="whCode !=null and whCode != ''">
				and dw.wh_code = #{whCode,jdbcType=VARCHAR}
		</if>
		<if test="isDefault !=null">
				and dwp.is_default = #{isDefault,jdbcType=TINYINT}
		</if>
		
		<!-- 仓库整理：ftyType = 1 生产工厂可以移动默认仓位   ftyType = 2 销售工厂不可以移动默认仓位 -->
		<if test="isDefaultWarehouse !=null">
				and dwp.is_default in  ${isDefaultWarehouse}
		</if>
		
		
		inner join dic_warehouse_area dwa on dwa.wh_id = dwp.wh_id and dwa.area_id = dwp.area_id
		<if test="areaCode !=null and areaCode != ''">
				and dwa.area_code = #{areaCode,jdbcType=VARCHAR}
		</if>
		left join dic_unit du1 on du1.unit_id = dwp.unit_weight
		left join dic_unit du2 on du2.unit_id = dwp.unit_volume	 
        left join dic_storage_type st on  dwp.storage_type_id=st.storage_type_id
        <where>
        <if test="storageTypeId !=null and storageTypeId != ''">
		    dwp.storage_type_id = #{storageTypeId,jdbcType=INTEGER}
		</if>
		<if test="ftyId!=null and ftyId!=''">
	   	and dwa.wh_id in    (select dwh.wh_id from dic_warehouse dwh inner join dic_stock_location sl on dwh.wh_id=sl.wh_id
			<where>
			and sl.fty_id=#{ftyId}
			<if test="locationId!=null and locationId!=''">
			and sl.location_id=#{locationId}
			</if>			
			</where>		
		)
		
		</if>
		
        </where>
		order by createTime DESC   
  </select>
  
   <select id="selectPositionIdByWhIdAndAreaIdAndPositionCode" parameterType="com.inossem.wms.model.dic.DicWarehousePosition" resultMap="BaseResultMap"> 
  	select 
  	position_id
    from dic_warehouse_position
    where wh_id = #{whId,jdbcType=INTEGER}
  	and   area_id = #{areaId,jdbcType=INTEGER}
  	and   position_code = #{positionCode,jdbcType=VARCHAR}
  	and   is_delete = 0
  </select>
  
  <!-- 查询仓位表所有数据列表 -->
	<select id="findLAGPList" resultType="com.inossem.wms.model.dic.DicWarehousePosition" parameterType="com.inossem.wms.model.dic.DicWarehousePosition">
		select wh_id as whId, area_id as areaId, position_id as positionId from dic_warehouse_position
		<where>
			<if test="freezeStocktake != null">
				and freeze_stocktake = #{freezeStocktake,jdbcType=TINYINT}
			</if>
		</where>
	</select>
	
	<!-- 批量根据仓库号，存储区，仓位，更新仓位的锁定状态  -->
	<update id="batchUpdatePdlock">
		<foreach collection="list" item="item" index="index" separator=";">
			update dic_warehouse_position
			set freeze_stocktake = #{item.freezeStocktake,jdbcType=VARCHAR}
			where wh_id = #{item.whId,jdbcType=INTEGER}
			  and area_id = #{item.areaId,jdbcType=INTEGER}
			  and position_id = #{item.positionId,jdbcType=INTEGER}
		</foreach>
	</update>
  <insert id="insertPositionBatch" parameterType="java.util.List">
    insert into dic_warehouse_position 
    ( wh_id, 
      area_id, 
      position_code, 
      position_index1, 
      position_index2, 
      position_index3, 
      freeze_input, 
      freeze_output, 
      unit_weight, 
      unit_volume)
    values 
    <foreach collection="list" item="obj" index="index" separator="," >
    ( #{obj.whId,jdbcType=INTEGER}, 
      #{obj.areaId,jdbcType=INTEGER}, 
      #{obj.positionCode,jdbcType=VARCHAR}, 
      #{obj.positionIndex1,jdbcType=CHAR},  
      #{obj.positionIndex2,jdbcType=CHAR}, 
      #{obj.positionIndex3,jdbcType=CHAR}, 
      #{obj.freezeInput,jdbcType=TINYINT}, 
      #{obj.freezeOutput,jdbcType=TINYINT},  
      #{obj.unitWeight,jdbcType=INTEGER}, 
      #{obj.unitVolume,jdbcType=INTEGER}
     )
    </foreach>
  </insert>
	<select id="selectAllStorageType" resultType="map">
	select t.storage_type_id,t.storage_type_code,t.storage_type_name from dic_storage_type t
	</select>	
	
</mapper>