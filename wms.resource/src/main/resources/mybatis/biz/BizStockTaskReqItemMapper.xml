<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.inossem.wms.dao.biz.BizStockTaskReqItemMapper">
  <resultMap id="BaseResultMap" type="com.inossem.wms.model.biz.BizStockTaskReqItem">
    <id column="item_id" jdbcType="INTEGER" property="itemId" />
    <result column="stock_task_req_id" jdbcType="INTEGER" property="stockTaskReqId" />
    <result column="stock_task_req_rid" jdbcType="INTEGER" property="stockTaskReqRid" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="wh_id" jdbcType="INTEGER" property="whId" />
    <result column="mat_id" jdbcType="INTEGER" property="matId" />
    <result column="fty_id" jdbcType="INTEGER" property="ftyId" />
    <result column="location_id" jdbcType="INTEGER" property="locationId" />
    <result column="batch" jdbcType="BIGINT" property="batch" />
    <result column="spec_stock" jdbcType="VARCHAR" property="specStock" />
    <result column="spec_stock_code" jdbcType="VARCHAR" property="specStockCode" />
    <result column="spec_stock_name" jdbcType="VARCHAR" property="specStockName" />
    <result column="qty" jdbcType="DECIMAL" property="qty" />
    <result column="unit_id" jdbcType="INTEGER" property="unitId" />
    <result column="mat_doc_id" jdbcType="INTEGER" property="matDocId" />
    <result column="mat_doc_rid" jdbcType="INTEGER" property="matDocRid" />
    <result column="take_delivery_date" jdbcType="TIMESTAMP" property="takeDeliveryDate" />
    <result column="weight" jdbcType="DECIMAL" property="weight" />
    <result column="unit_weight" jdbcType="TINYINT" property="unitWeight" />
    <result column="stock_task_qty" jdbcType="DECIMAL" property="stockTaskQty" />
    <result column="validity_time" jdbcType="TIMESTAMP" property="validityTime" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
    <result column="is_delete" jdbcType="TINYINT" property="isDelete" />
    
    <result column="package_type_id" jdbcType="INTEGER" property="packageTypeId" />
    <result column="package_standard" jdbcType="DECIMAL" property="packageStandard" />
    <result column="package_standard_ch" jdbcType="VARCHAR" property="packageStandardCh" />
    
    <result column="mat_store_type" jdbcType="TINYINT" property="matStoreType" />
    <result column="package_type_code" jdbcType="VARCHAR" property="packageTypeCode" />
    <result column="package_type_name" jdbcType="VARCHAR" property="packageTypeName" />
    
    <result column="refer_receipt_rid" jdbcType="INTEGER" property="referReceiptRid" />
    <result column="refer_receipt_id" jdbcType="INTEGER" property="referReceiptId" />
    <result column="refer_receipt_code" jdbcType="VARCHAR" property="referReceiptCode" />
    <result column="refer_receipt_type" jdbcType="TINYINT" property="referReceiptType" />
    
    <result column="production_batch" jdbcType="VARCHAR" property="productionBatch" />
    <result column="erp_batch" jdbcType="VARCHAR" property="erpBatch" />
    <result column="quality_batch" jdbcType="VARCHAR" property="qualityBatch" />
    
  </resultMap>
  <sql id="Base_Column_List">
    item_id, stock_task_req_id, stock_task_req_rid, status, wh_id, mat_id, fty_id, location_id, 
    batch, spec_stock, spec_stock_code, spec_stock_name, qty, unit_id, mat_doc_id, mat_doc_rid, 
    take_delivery_date, weight, unit_weight, stock_task_qty, validity_time, create_time, 
    modify_time, is_delete
  </sql>
  

  
  
  <select id="selectMinStatus" parameterType="java.lang.Integer" resultType="java.lang.Byte">
  	select min(status) minstatus from biz_stock_task_req_item where is_delete = 0 and  stock_task_req_id= #{stockTaskReqId,jdbcType=INTEGER}
  </select>

  <select id="getReqItemsByTaskReqId"  parameterType="java.lang.Integer" resultType="com.inossem.wms.model.vo.BizStockTaskReqItemVo">
   SELECT
   		st.item_id itemId,
		st.stock_task_req_id stockTaskReqId,st.stock_task_req_rid stockTaskReqRid,		
		st.status,
		st.mat_id matId,ml.mat_code matCode,ml.mat_name matName,
        st.unit_id unitId,ut.name_zh nameZh,ut.decimal_place decimalPlace,
        st.fty_id ftyId,st.batch,st.location_id locationId,sl.location_code locationCode,sl.location_name locationName,st.spec_stock specStock,
		st.spec_stock_code specStockCode,st.spec_stock_name specStockName, st.qty,st.stock_task_qty stockTaskQty,
		st.mat_doc_id matDocId,st.mat_doc_rid matDocRid,
		st.production_batch productionBatch,st.package_type_id packageTypeId,
		st.erp_batch erpBatch , st.quality_batch qualityBatch,
		pt.package_type_code packageTypeCode,pt.package_type_name packageTypeName,
		pt.package_standard / (case when ut.unit_code = 'KG' then 1 else 1000 end) packageStandard,
		pt.package_standard_ch packageStandardCh,
		pt.sn_used matStoreType, st.remark,
		st.refer_receipt_id referReceiptId,
		st.refer_receipt_code referReceiptCode,
		st.refer_receipt_type referReceiptType,
		st.refer_receipt_rid referReceiptRid
	FROM
		biz_stock_task_req_item st
    left join dic_material ml on st.mat_id = ml.mat_id 
	LEFT JOIN dic_unit ut ON st.unit_id = ut.unit_id
	LEFT JOIN dic_stock_location sl ON st.location_id = sl.location_id
	LEFT JOIN dic_package_type pt ON st.package_type_id=pt.package_type_id
	where st.stock_task_req_id = #{stockTaskReqId,jdbcType=INTEGER}
  </select>
  <select id="selectItemsByParams"  parameterType="java.util.Map" resultType="com.inossem.wms.model.vo.BizStockTaskReqItemVo">
	  SELECT
		st.item_id itemId,
		st.stock_task_req_id stockTaskReqId,
		st.stock_task_req_rid stockTaskReqRid,
		st.status,
		st.mat_id matId,
		ml.mat_code matCode,
		ml.mat_name matName,
		st.unit_id unitId,
		ut.name_zh nameZh,
		ut.decimal_place decimalPlace,
		st.fty_id ftyId,
		st.batch,
		st.location_id locationId,
		sl.location_code locationCode,
		sl.location_name locationName,
		st.spec_stock specStock,
		st.spec_stock_code specStockCode,
		st.spec_stock_name specStockName,
		st.qty,
		st.stock_task_qty stockTaskQty,
		(st.qty - st.stock_task_qty) unStockTaskQty ,
		st.production_batch productionBatch,
		st.package_type_id packageTypeId,
		st.erp_batch erpBatch,
		st.quality_batch qualityBatch,
		pt.package_type_code packageTypeCode,
		pt.package_type_name packageTypeName,
		pt.sn_used matStoreType,
		rh.stock_task_req_code stockTaskReqCode,
		st.refer_receipt_code referReceiptCode,
		st.refer_receipt_type referReceiptType,
		st.refer_receipt_id referReceiptId,
		rt.receipt_type_name referReceiptTypeName
	FROM
		biz_stock_task_req_item st
	INNER JOIN biz_stock_task_req_head rh ON st.stock_task_req_id = rh.stock_task_req_id
	INNER JOIN dic_receipt_type rt on st.refer_receipt_type = rt.receipt_type
	LEFT JOIN dic_material ml ON st.mat_id = ml.mat_id
	LEFT JOIN dic_unit ut ON st.unit_id = ut.unit_id
	LEFT JOIN dic_stock_location sl ON st.location_id = sl.location_id
	LEFT JOIN dic_package_type pt ON st.package_type_id = pt.package_type_id
	where st.is_delete = 0 
	<if test="locationId != null">
        and st.location_id = #{locationId,jdbcType=INTEGER}
    </if>
	<if test="matCondition != null and matCondition!='' ">
        and (ml.`mat_code` LIKE CONCAT('%',#{matCondition},'%')   or  ml.`mat_name` LIKE CONCAT('%',#{matCondition},'%') )
    </if>
    <if test="productionBatch != null and productionBatch!= ''">
        and st.production_batch = #{productionBatch,jdbcType=INTEGER}
    </if>
    <if test="referReceiptCode != null and referReceiptCode!=''">
        and st.refer_receipt_code = #{referReceiptCode,jdbcType=INTEGER}
    </if>
    <if test="referReceiptType != null">
        and st.refer_receipt_type = #{referReceiptType,jdbcType=TINYINT}
    </if>
    <if test="stockTaskReqCode != null and stockTaskReqCode!=''">
        and rh.stock_task_req_code = #{stockTaskReqCode,jdbcType=INTEGER}
    </if>
    <if test="code != null and code !=''">
        and (rh.stock_task_req_code = #{code,jdbcType=INTEGER}   or  st.refer_receipt_code = #{code,jdbcType=INTEGER} )
    </if>
    <if test="status != null">
        and st.status = #{status,jdbcType=TINYINT}
    </if>
    <if test="referReceiptTypeList != null and referReceiptTypeList.size()>0">
        and st.refer_receipt_type in 
        <foreach collection="referReceiptTypeList" item="item" index="index" open="(" close=")" separator=",">  		
    			#{item}
  		</foreach>
    </if>
  </select>
  
  
  <select id="selectItemById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
	    ri.item_id, ri.stock_task_req_id, ri.stock_task_req_rid, ri.status, ri.wh_id, ri.mat_id, ri.fty_id, ri.location_id, 
	    ri.batch, ri.spec_stock, ri.spec_stock_code, ri.spec_stock_name, ri.qty, ri.unit_id, ri.mat_doc_id, ri.mat_doc_rid, 
	    ri.take_delivery_date, ri.weight, ri.unit_weight, ri.stock_task_qty,ri.validity_time, ri.create_time, 
	    ri.modify_time, ri.is_delete,ri.package_type_id , 
	    pt.package_standard / (case when u2.unit_code = 'KG' then 1 else 1000 end) package_standard,
	    pt.package_standard_ch ,pt.sn_used mat_store_type,
	    pt.package_type_name,
	    pt.package_type_code,
	    ri.refer_receipt_code,
		ri.refer_receipt_id,
		ri.refer_receipt_rid,
		ri.refer_receipt_type,
		ri.production_batch,
		ri.erp_batch,
		ri.quality_batch
	FROM biz_stock_task_req_item ri 
	INNER JOIN dic_unit u2 ON ri.unit_id = u2.unit_id	
	INNER JOIN dic_package_type pt on pt.package_type_id = ri.package_type_id 
	    where ri.stock_task_req_id = #{stockTaskReqId,jdbcType=INTEGER}
  </select>
  
  <select id="selectItemByItemIds" parameterType="java.util.List" resultMap="BaseResultMap">
    select 
	    ri.item_id, ri.stock_task_req_id, ri.stock_task_req_rid, ri.status, ri.wh_id, ri.mat_id, ri.fty_id, ri.location_id, 
	    ri.batch, ri.spec_stock, ri.spec_stock_code, ri.spec_stock_name, ri.qty, ri.unit_id, ri.mat_doc_id, ri.mat_doc_rid, 
	    ri.take_delivery_date, ri.weight, ri.unit_weight, ri.stock_task_qty,ri.validity_time, ri.create_time, 
	    ri.modify_time, ri.is_delete,ri.package_type_id , 
	    pt.package_standard / (case when u2.unit_code = 'KG' then 1 else 1000 end) package_standard,
	    pt.package_standard_ch ,pt.sn_used mat_store_type,
	    pt.package_type_name,
	    pt.package_type_code,
	    ri.refer_receipt_code,
		ri.refer_receipt_id,
		ri.refer_receipt_rid,
		ri.refer_receipt_type,
		ri.production_batch,
		ri.erp_batch,
		ri.quality_batch
	FROM biz_stock_task_req_item ri 
	INNER JOIN dic_unit u2 ON ri.unit_id = u2.unit_id
	INNER JOIN dic_package_type pt on pt.package_type_id = ri.package_type_id 
	    where ri.item_id in 
	    <foreach collection="list" item="item" index="index" open="(" close=")" separator=",">  		
    			#{item}
  		</foreach>
  </select>
  
  
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from biz_stock_task_req_item
    where item_id = #{itemId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from biz_stock_task_req_item
    where item_id = #{itemId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteReqItemsByTaskReqIdAndRid">
  	delete from biz_stock_task_req_item
  	where stock_task_req_id = #{stockTaskReqId,jdbcType=INTEGER} 
  	and stock_task_req_rid = #{stockTaskReqRid,jdbcType=INTEGER} 
  </delete>
  
  
  
  <insert id="insert" parameterType="com.inossem.wms.model.biz.BizStockTaskReqItem">
    insert into biz_stock_task_req_item (item_id, stock_task_req_id, stock_task_req_rid, 
      status, wh_id, mat_id, 
      fty_id, location_id, batch, 
      spec_stock, spec_stock_code, spec_stock_name, 
      qty, unit_id, mat_doc_id, 
      mat_doc_rid, take_delivery_date, weight, 
      unit_weight, stock_task_qty, validity_time, 
      create_time, modify_time, is_delete
      )
    values (#{itemId,jdbcType=INTEGER}, #{stockTaskReqId,jdbcType=INTEGER}, #{stockTaskReqRid,jdbcType=INTEGER}, 
      #{status,jdbcType=TINYINT}, #{whId,jdbcType=INTEGER}, #{matId,jdbcType=INTEGER}, 
      #{ftyId,jdbcType=INTEGER}, #{locationId,jdbcType=INTEGER}, #{batch,jdbcType=BIGINT}, 
      #{specStock,jdbcType=VARCHAR}, #{specStockCode,jdbcType=VARCHAR}, #{specStockName,jdbcType=VARCHAR}, 
      #{qty,jdbcType=DECIMAL}, #{unitId,jdbcType=INTEGER}, #{matDocId,jdbcType=INTEGER}, 
      #{matDocRid,jdbcType=INTEGER}, #{takeDeliveryDate,jdbcType=TIMESTAMP}, #{weight,jdbcType=DECIMAL}, 
      #{unitWeight,jdbcType=TINYINT}, #{stockTaskQty,jdbcType=DECIMAL}, #{validityTime,jdbcType=TIMESTAMP}, 
      #{createTime,jdbcType=TIMESTAMP}, #{modifyTime,jdbcType=TIMESTAMP}, #{isDelete,jdbcType=TINYINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.inossem.wms.model.biz.BizStockTaskReqItem">
    insert into biz_stock_task_req_item
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="itemId != null">
        item_id,
      </if>
      <if test="stockTaskReqId != null">
        stock_task_req_id,
      </if>
      <if test="stockTaskReqRid != null">
        stock_task_req_rid,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="whId != null">
        wh_id,
      </if>
      <if test="matId != null">
        mat_id,
      </if>
      <if test="ftyId != null">
        fty_id,
      </if>
      <if test="locationId != null">
        location_id,
      </if>
      <if test="batch != null">
        batch,
      </if>
      <if test="specStock != null">
        spec_stock,
      </if>
      <if test="specStockCode != null">
        spec_stock_code,
      </if>
      <if test="specStockName != null">
        spec_stock_name,
      </if>
      <if test="qty != null">
        qty,
      </if>
      <if test="unitId != null">
        unit_id,
      </if>
      <if test="matDocId != null">
        mat_doc_id,
      </if>
      <if test="matDocRid != null">
        mat_doc_rid,
      </if>
      <if test="takeDeliveryDate != null">
        take_delivery_date,
      </if>
      <if test="weight != null">
        weight,
      </if>
      <if test="unitWeight != null">
        unit_weight,
      </if>
      <if test="stockTaskQty != null">
        stock_task_qty,
      </if>
      <if test="validityTime != null">
        validity_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="modifyTime != null">
        modify_time,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
      
      
      <if test="packageTypeId != null">
      	package_type_id,
      </if>
      <if test="productionBatch != null">
      	production_batch,
      </if>
      <if test="erpBatch != null">
      	erp_batch,
      </if>
      <if test="qualityBatch != null">
      	quality_batch,
      </if>
      <if test="referReceiptType != null">
      	refer_receipt_type,
      </if>
      <if test="referReceiptId != null">
      	refer_receipt_id,
      </if>
      <if test="referReceiptCode != null">
      	refer_receipt_code,
      </if>
      <if test="referReceiptRid != null">
      	refer_receipt_rid,
      </if>
      <if test="remark != null">
      	remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="itemId != null">
        #{itemId,jdbcType=INTEGER},
      </if>
      <if test="stockTaskReqId != null">
        #{stockTaskReqId,jdbcType=INTEGER},
      </if>
      <if test="stockTaskReqRid != null">
        #{stockTaskReqRid,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="whId != null">
        #{whId,jdbcType=INTEGER},
      </if>
      <if test="matId != null">
        #{matId,jdbcType=INTEGER},
      </if>
      <if test="ftyId != null">
        #{ftyId,jdbcType=INTEGER},
      </if>
      <if test="locationId != null">
        #{locationId,jdbcType=INTEGER},
      </if>
      <if test="batch != null">
        #{batch,jdbcType=BIGINT},
      </if>
      <if test="specStock != null">
        #{specStock,jdbcType=VARCHAR},
      </if>
      <if test="specStockCode != null">
        #{specStockCode,jdbcType=VARCHAR},
      </if>
      <if test="specStockName != null">
        #{specStockName,jdbcType=VARCHAR},
      </if>
      <if test="qty != null">
        #{qty,jdbcType=DECIMAL},
      </if>
      <if test="unitId != null">
        #{unitId,jdbcType=INTEGER},
      </if>
      <if test="matDocId != null">
        #{matDocId,jdbcType=INTEGER},
      </if>
      <if test="matDocRid != null">
        #{matDocRid,jdbcType=INTEGER},
      </if>
      <if test="takeDeliveryDate != null">
        #{takeDeliveryDate,jdbcType=TIMESTAMP},
      </if>
      <if test="weight != null">
        #{weight,jdbcType=DECIMAL},
      </if>
      <if test="unitWeight != null">
        #{unitWeight,jdbcType=TINYINT},
      </if>
      <if test="stockTaskQty != null">
        #{stockTaskQty,jdbcType=DECIMAL},
      </if>
      <if test="validityTime != null">
        #{validityTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=TINYINT},
      </if>
      
      <if test="packageTypeId != null">
       	#{packageTypeId,jdbcType=INTEGER},
      </if>
      <if test="productionBatch != null">
      	#{productionBatch,jdbcType=VARCHAR},
      </if>
      <if test="erpBatch != null">
      	#{erpBatch,jdbcType=VARCHAR},
      </if>
      <if test="qualityBatch != null">
      	#{qualityBatch,jdbcType=VARCHAR},
      </if>
      <if test="referReceiptType != null">
     	#{referReceiptType,jdbcType=TINYINT},
      </if>
      <if test="referReceiptId != null">
       	#{referReceiptId,jdbcType=INTEGER},
      </if>
      <if test="referReceiptCode != null">
      	#{referReceiptCode,jdbcType=VARCHAR},
      </if>
      <if test="referReceiptRid != null">
      	#{referReceiptRid,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
      	#{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.inossem.wms.model.biz.BizStockTaskReqItem">
    update biz_stock_task_req_item
    <set>
      <if test="stockTaskReqId != null">
        stock_task_req_id = #{stockTaskReqId,jdbcType=INTEGER},
      </if>
      <if test="stockTaskReqRid != null">
        stock_task_req_rid = #{stockTaskReqRid,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="whId != null">
        wh_id = #{whId,jdbcType=INTEGER},
      </if>
      <if test="matId != null">
        mat_id = #{matId,jdbcType=INTEGER},
      </if>
      <if test="ftyId != null">
        fty_id = #{ftyId,jdbcType=INTEGER},
      </if>
      <if test="locationId != null">
        location_id = #{locationId,jdbcType=INTEGER},
      </if>
      <if test="batch != null">
        batch = #{batch,jdbcType=BIGINT},
      </if>
      <if test="specStock != null">
        spec_stock = #{specStock,jdbcType=VARCHAR},
      </if>
      <if test="specStockCode != null">
        spec_stock_code = #{specStockCode,jdbcType=VARCHAR},
      </if>
      <if test="specStockName != null">
        spec_stock_name = #{specStockName,jdbcType=VARCHAR},
      </if>
      <if test="qty != null">
        qty = #{qty,jdbcType=DECIMAL},
      </if>
      <if test="unitId != null">
        unit_id = #{unitId,jdbcType=INTEGER},
      </if>
      <if test="matDocId != null">
        mat_doc_id = #{matDocId,jdbcType=INTEGER},
      </if>
      <if test="matDocRid != null">
        mat_doc_rid = #{matDocRid,jdbcType=INTEGER},
      </if>
      <if test="takeDeliveryDate != null">
        take_delivery_date = #{takeDeliveryDate,jdbcType=TIMESTAMP},
      </if>
      <if test="weight != null">
        weight = #{weight,jdbcType=DECIMAL},
      </if>
      <if test="unitWeight != null">
        unit_weight = #{unitWeight,jdbcType=TINYINT},
      </if>
      <if test="stockTaskQty != null">
        stock_task_qty = #{stockTaskQty,jdbcType=DECIMAL},
      </if>
      <if test="validityTime != null">
        validity_time = #{validityTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=TINYINT},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where item_id = #{itemId,jdbcType=INTEGER}
  </update>
  
  <!-- 上架之后更新数量 -->
  <update id="updateItemQty" parameterType="com.inossem.wms.model.biz.BizStockTaskReqItem">
    update biz_stock_task_req_item
    <set>
      <if test="stockTaskReqId != null">
        stock_task_req_id = #{stockTaskReqId,jdbcType=INTEGER},
      </if>
      <if test="stockTaskReqRid != null">
        stock_task_req_rid = #{stockTaskReqRid,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="whId != null">
        wh_id = #{whId,jdbcType=INTEGER},
      </if>
      <if test="matId != null">
        mat_id = #{matId,jdbcType=INTEGER},
      </if>
      <if test="ftyId != null">
        fty_id = #{ftyId,jdbcType=INTEGER},
      </if>
      <if test="locationId != null">
        location_id = #{locationId,jdbcType=INTEGER},
      </if>
      <if test="batch != null">
        batch = #{batch,jdbcType=BIGINT},
      </if>
      <if test="specStock != null">
        spec_stock = #{specStock,jdbcType=VARCHAR},
      </if>
      <if test="specStockCode != null">
        spec_stock_code = #{specStockCode,jdbcType=VARCHAR},
      </if>
      <if test="specStockName != null">
        spec_stock_name = #{specStockName,jdbcType=VARCHAR},
      </if>
      <if test="qty != null">
        qty = #{qty,jdbcType=DECIMAL},
      </if>
      <if test="unitId != null">
        unit_id = #{unitId,jdbcType=INTEGER},
      </if>
      <if test="matDocId != null">
        mat_doc_id = #{matDocId,jdbcType=INTEGER},
      </if>
      <if test="matDocRid != null">
        mat_doc_rid = #{matDocRid,jdbcType=INTEGER},
      </if>
      <if test="takeDeliveryDate != null">
        take_delivery_date = #{takeDeliveryDate,jdbcType=TIMESTAMP},
      </if>
      <if test="weight != null">
        weight = #{weight,jdbcType=DECIMAL},
      </if>
      <if test="unitWeight != null">
        unit_weight = #{unitWeight,jdbcType=TINYINT},
      </if>
      <if test="stockTaskQty != null">
        stock_task_qty = #{stockTaskQty,jdbcType=DECIMAL},
      </if>
      <if test="validityTime != null">
        validity_time = #{validityTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=TINYINT},
      </if>
    </set>
    where stock_task_req_id = #{stockTaskReqId,jdbcType=INTEGER} and stock_task_req_rid = #{stockTaskReqRid,jdbcType=INTEGER}
  </update>
  
  <update id="updateItemQtyByDelete" parameterType="java.lang.Integer">
    update biz_stock_task_req_item ri inner join  biz_stock_task_item_cw i on ri.stock_task_req_id = i.stock_task_req_id and ri.stock_task_req_rid = i.stock_task_req_rid
    inner join biz_stock_task_req_head rh on ri.stock_task_req_id = rh.stock_task_req_id
    set
   
        ri.stock_task_qty = ri.stock_task_qty - i.qty,
   		ri.status = 0,
    	rh.status = 0
    where i.stock_task_id = #{stockTaskId,jdbcType=INTEGER} 
  </update>
  <update id="updateByPrimaryKey" parameterType="com.inossem.wms.model.biz.BizStockTaskReqItem">
    update biz_stock_task_req_item
    set stock_task_req_id = #{stockTaskReqId,jdbcType=INTEGER},
      stock_task_req_rid = #{stockTaskReqRid,jdbcType=INTEGER},
      status = #{status,jdbcType=TINYINT},
      wh_id = #{whId,jdbcType=INTEGER},
      mat_id = #{matId,jdbcType=INTEGER},
      fty_id = #{ftyId,jdbcType=INTEGER},
      location_id = #{locationId,jdbcType=INTEGER},
      batch = #{batch,jdbcType=BIGINT},
      spec_stock = #{specStock,jdbcType=VARCHAR},
      spec_stock_code = #{specStockCode,jdbcType=VARCHAR},
      spec_stock_name = #{specStockName,jdbcType=VARCHAR},
      qty = #{qty,jdbcType=DECIMAL},
      unit_id = #{unitId,jdbcType=INTEGER},
      mat_doc_id = #{matDocId,jdbcType=INTEGER},
      mat_doc_rid = #{matDocRid,jdbcType=INTEGER},
      take_delivery_date = #{takeDeliveryDate,jdbcType=TIMESTAMP},
      weight = #{weight,jdbcType=DECIMAL},
      unit_weight = #{unitWeight,jdbcType=TINYINT},
      stock_task_qty = #{stockTaskQty,jdbcType=DECIMAL},
      validity_time = #{validityTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      is_delete = #{isDelete,jdbcType=TINYINT}
    where item_id = #{itemId,jdbcType=INTEGER}
  </update>
  
  
  <insert id="insertReqItems" parameterType="java.util.List">
    insert into biz_stock_task_req_item (stock_task_req_id, stock_task_req_rid, 
      wh_id, mat_id, 
      fty_id, location_id, batch, 
      qty, unit_id, 
      package_type_id,
      production_batch, erp_batch, quality_batch,
      refer_receipt_type,refer_receipt_id,refer_receipt_code,
      refer_receipt_rid,status,stock_task_qty,remark
      )
    values 
    <foreach collection="list" item="item" index="index" separator=",">
    (#{item.stockTaskReqId,jdbcType=INTEGER}, #{item.stockTaskReqRid,jdbcType=INTEGER}, 
     #{item.whId,jdbcType=INTEGER}, #{item.matId,jdbcType=INTEGER}, 
      #{item.ftyId,jdbcType=INTEGER}, #{item.locationId,jdbcType=INTEGER}, #{item.batch,jdbcType=BIGINT}, 
      #{item.qty,jdbcType=DECIMAL}, #{item.unitId,jdbcType=INTEGER},
      #{item.packageTypeId,jdbcType=INTEGER},
      #{item.productionBatch,jdbcType=VARCHAR}, #{item.erpBatch,jdbcType=VARCHAR}, #{item.qualityBatch,jdbcType=VARCHAR},
      #{item.referReceiptType,jdbcType=TINYINT},#{item.referReceiptId,jdbcType=INTEGER},#{item.referReceiptCode,jdbcType=VARCHAR},
      #{item.referReceiptRid,jdbcType=INTEGER}
      <if test="item.status == null">
        , 0
      </if>
      <if test="item.status != null">
        ,#{item.status,jdbcType=TINYINT}
      </if>
      <if test="item.stockTaskQty == null">
        , 0
      </if>
      <if test="item.stockTaskQty != null">
        ,#{item.stockTaskQty,jdbcType=DECIMAL}
      </if>
      <if test="item.remark == null">
        , ''
      </if>
      <if test="item.remark != null">
        ,#{item.remark,jdbcType=VARCHAR}
      </if>
      )
    </foreach>
    
    
  </insert>
  
  <update id="deleteItemByStockInputItemIds" parameterType="java.util.List">
    UPDATE biz_stock_task_req_item ri
	INNER JOIN biz_stock_input_item si ON ri.fty_id = si.fty_id
	AND ri.batch = si.batch
	AND ri.location_id = si.location_id
	AND ri.mat_id = si.mat_id
	SET ri.is_delete = 1
	WHERE
		si.item_id IN 
	<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
				#{item}
	</foreach>
  </update>
  <select id="selectByUniqueKey" parameterType="java.util.Map" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from biz_stock_task_req_item
    where 
    is_delete = 0
    and mat_id = #{matId,jdbcType=INTEGER}
    and batch = #{batch,jdbcType=BIGINT}
    and fty_id = #{ftyId,jdbcType=INTEGER}
    and location_id = #{locationId,jdbcType=INTEGER}
  </select>
  
  <select id="getBizStockTaskReqItemListByReferReipt" resultMap="BaseResultMap" parameterType="map">
  	select item.* , 
  		pt.sn_used mat_store_type ,
  		pt.package_standard / (case when u2.unit_code = 'KG' then 1 else 1000 end) package_standard,
  		pt.package_standard_ch ,
  		pt.sn_used mat_store_type,
	    pt.package_type_name,
	    pt.package_type_code
  		from biz_stock_task_req_item item
  		INNER JOIN dic_unit u2 ON item.unit_id = u2.unit_id
  		inner join biz_stock_task_req_head head on item.stock_task_req_id=head.stock_task_req_id
  		inner join dic_package_type pt on pt.package_type_id = item.package_type_id
  		where item.refer_receipt_id=#{referReceiptId}
  		and item.refer_receipt_code=#{referReceiptCode}
  		and item.refer_receipt_type=#{referReceiptType}	
  		and head.receipt_type=#{receiptType}
  </select>
  <update id="updateDeleteByReferReceiptIdAndType" parameterType="java.util.Map">
    update biz_stock_task_req_head rh inner join biz_stock_task_req_item ri on rh.stock_task_req_id = ri.stock_task_req_id
    set 
      ri.is_delete = #{isDelete,jdbcType=TINYINT}
    where  ri.refer_receipt_id = #{referReceiptId,jdbcType=INTEGER} And
       ri.refer_receipt_type = #{referReceiptType,jdbcType=TINYINT}
      <if test="receiptType != null">
        AND  rh.receipt_type = #{receiptType,jdbcType=TINYINT}
    </if>
    <if test="removeTaskId != null">
        AND rh.remove_task_id = #{removeTaskId,jdbcType=INTEGER}
    </if>
  </update>
</mapper>