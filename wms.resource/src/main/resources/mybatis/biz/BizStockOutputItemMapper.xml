<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.inossem.wms.dao.biz.BizStockOutputItemMapper">
  <resultMap id="BaseResultMap" type="com.inossem.wms.model.biz.BizStockOutputItem">
    <id column="item_id" jdbcType="INTEGER" property="itemId" />
    <result column="stock_output_id" jdbcType="INTEGER" property="stockOutputId" />
    <result column="stock_output_rid" jdbcType="INTEGER" property="stockOutputRid" />
    <result column="fty_id" jdbcType="INTEGER" property="ftyId" />
    <result column="mat_id" jdbcType="INTEGER" property="matId" />
    <result column="unit_id" jdbcType="INTEGER" property="unitId" />
    <result column="decimal_place" jdbcType="TINYINT" property="decimalPlace" />
    <result column="send_qty" jdbcType="DECIMAL" property="sendQty" />
    <result column="output_qty" jdbcType="DECIMAL" property="outputQty" />
    <result column="return_qty" jdbcType="DECIMAL" property="returnQty" />
    <result column="stock_qty" jdbcType="DECIMAL" property="stockQty" />
    <result column="location_id" jdbcType="INTEGER" property="locationId" />
    <result column="move_type_id" jdbcType="INTEGER" property="moveTypeId" />
    <result column="refer_receipt_code" jdbcType="VARCHAR" property="referReceiptCode" />
    <result column="refer_receipt_rid" jdbcType="VARCHAR" property="referReceiptRid" />
    <result column="refer_price" jdbcType="DECIMAL" property="referPrice" />
    <result column="mat_doc_id" jdbcType="INTEGER" property="matDocId" />
    <result column="mat_doc_year" jdbcType="INTEGER" property="matDocYear" />
    <result column="mat_doc_rid" jdbcType="INTEGER" property="matDocRid" />
    <result column="mat_doc_code" jdbcType="VARCHAR" property="matDocCode" />
    <result column="mes_doc_code" jdbcType="VARCHAR" property="mesDocCode" />
    <result column="reserve_id" jdbcType="VARCHAR" property="reserveId" />
    <result column="reserve_rid" jdbcType="VARCHAR" property="reserveRid" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="is_delete" jdbcType="TINYINT" property="isDelete" />
    <result column="write_off" jdbcType="TINYINT" property="writeOff" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="modify_user" jdbcType="VARCHAR" property="modifyUser" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
    <result column="batch" jdbcType="BIGINT" property="batch" />
    <result column="wh_id" jdbcType="INTEGER" property="whId" />
    <result column="erp_batch" jdbcType="VARCHAR" property="erpBatch" />
    <result column="product_batch" jdbcType="VARCHAR" property="productBatch" />
    <result column="quality_batch" jdbcType="VARCHAR" property="qualityBatch" />
    <result column="package_type_id" jdbcType="INTEGER" property="packageTypeId" />
    <result column="mes_write_off_code" jdbcType="VARCHAR" property="mesWriteOffCode" />
    <result column="mat_write_off_code" jdbcType="VARCHAR" property="matWriteOffCode"/> 
  </resultMap>
  <resultMap id="BaseResultMapVO" type="com.inossem.wms.model.vo.BizStockOutputItemVo" extends="BaseResultMap" >
	    <result column="stock_output_code" jdbcType="VARCHAR" property="stockOutputCode" />
	    <result column="fty_code" jdbcType="VARCHAR" property="ftyCode" />
	    <result column="fty_name" jdbcType="VARCHAR" property="ftyName" />
	    <result column="location_code" jdbcType="VARCHAR" property="locationCode" />
	    <result column="location_name" jdbcType="VARCHAR" property="locationName" />
	    <result column="mat_code" jdbcType="VARCHAR" property="matCode" />
	    <result column="mat_name" jdbcType="VARCHAR" property="matName" />
	    <result column="unit_code" jdbcType="VARCHAR" property="unitCode" />
	    <result column="unit_name" jdbcType="VARCHAR" property="unitName" />
	    <result column="move_type_code" jdbcType="VARCHAR" property="moveTypeCode" />
	    <result column="move_type_name" jdbcType="VARCHAR" property="moveTypeName" />
	    <result column="write_off_name" jdbcType="VARCHAR" property="writeOffName" />
	    <result column="is_focus_batch" jdbcType="VARCHAR" property="isFocusBatch" />
	    <result column="package_type_code" jdbcType="VARCHAR" property="packageTypeCode" />
	    <result column="package_type_name" jdbcType="VARCHAR" property="packageTypeName" />
	    <result column="package_standard_ch" jdbcType="VARCHAR" property="packageStandardCh" />
	    <result column="package_standard" jdbcType="DECIMAL" property="packageStandard" />
	    <result column="node_code" jdbcType="VARCHAR" property="mesLocationCode"/>
	    <result column="samp_name" jdbcType="VARCHAR" property="sampName"/> 
    	<result column="specification" jdbcType="VARCHAR" property="specification"/>
    	<result column="standard" jdbcType="VARCHAR" property="standard"/>
  </resultMap>
  
  <sql id="Base_Column_List">
    item.item_id, item.stock_output_id, item.stock_output_rid, 
    item.fty_id, item.mat_id, item.unit_id, 
    item.decimal_place, item.send_qty, item.output_qty, 
    item.return_qty, item.stock_qty, item.location_id, 
    item.move_type_id,item.refer_receipt_code, item.refer_receipt_rid, 
    item.refer_price, item.mat_doc_id, item.mat_doc_year, 
    item.mat_doc_rid, item.reserve_id, item.reserve_rid, 
    item.remark, item.is_delete, item.write_off, 
    item.create_user, item.modify_user, item.create_time, item.modify_time,item.batch,
    item.wh_id,item.erp_batch,item.product_batch,item.quality_batch,item.package_type_id,
    item.mat_doc_code,item.mes_doc_code,item.mes_write_off_code,item.mat_write_off_code
  </sql>
  
  <select id="selectByPrimaryKey" parameterType="map" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" />
    from biz_stock_output_item item
    where item.is_delete = 0
    <if test="itemId != null" >
	 and item.item_id = #{itemId,jdbcType=INTEGER}
	</if>
    <if test="stockOutputId != null" >
	 and item.stock_output_id = #{stockOutputId,jdbcType=INTEGER}
	</if>
	<if test="stockOutputRid != null" >
	 and item.stock_output_rid = #{stockOutputRid,jdbcType=INTEGER}
	</if>
  </select>


  <update id="updateByOutPutId" parameterType="map" >
    UPDATE
      biz_stock_output_item
    <set>
      <if test="mat_doc_year != null">
        mat_doc_year = #{mat_doc_year},
      </if>
      <if test="mat_doc_code != null">
        mat_doc_code = #{mat_doc_code},
      </if>
      <if test="mes_doc_code != null">
        mes_doc_code = #{mes_doc_code},
      </if>
      <if test="mat_write_off_code !=null">
      	mat_write_off_code =#{mat_write_off_code},
      </if>
      <if test="mes_write_off_code !=null">
      	mes_write_off_code =#{mes_write_off_code},
      </if>
    </set>
    WHERE stock_output_id=#{stock_output_id}
  </update>

  <!-- 查询销售出库对应下架作业单 -->
  <select id="getOutputItemList" parameterType="java.util.Map"  resultType="java.util.Map">
  SELECT 
  	ANY_VALUE(res.stock_output_id)stock_output_id,  -- 出库单id
  	ANY_VALUE(res.item_id)item_id,  -- 出库单行项目主键
    ANY_VALUE(cwp.item_position_id)item_position_id, -- 下架作业单仓位主键
    SUM(cwp.qty)qty,
    MAX(DATE_FORMAT( cwp.create_time,'%Y-%m-%d %H:%i:%s')) AS create_time,
    ANY_VALUE(cwi.refer_receipt_id)refer_receipt_id,
    ANY_VALUE(cwi.refer_receipt_code)refer_receipt_code,
    ANY_VALUE(cwi.refer_receipt_rid)refer_receipt_rid,
    cwp.batch,
    cwi.production_batch,
    cwi.erp_batch,
    cwi.quality_batch,
    cwi.package_type_id,
    pack.package_type_code,
    pack.package_type_name,
    pack.package_standard / (case when u2.unit_code = 'KG' then 1 else 1000 end) package_standard ,
    pack.package_standard_ch,
    pack.sn_used 
FROM
    biz_stock_task_position_cw cwp
        INNER JOIN
    biz_stock_task_item_cw cwi ON cwp.stock_task_id = cwi.stock_task_id
        AND cwp.stock_task_rid = cwi.stock_task_rid
        AND cwi.refer_receipt_type = #{referReceiptType}
        AND cwp.is_delete = 0
        AND cwi.is_delete = 0
        AND cwi.fty_id = #{ftyId}
        AND cwi.location_id = #{locationId}
    INNER JOIN dic_unit u2 ON cwi.unit_id = u2.unit_id 
        INNER JOIN
    biz_allocate_cargo_item aci ON aci.allocate_cargo_id = cwi.refer_receipt_id
        AND aci.allocate_cargo_rid = cwi.refer_receipt_rid
        AND aci.is_delete = 0
        INNER JOIN
    biz_allocate_cargo_head ach ON aci.allocate_cargo_id = ach.allocate_cargo_id
        AND ach.is_delete = 0
        INNER JOIN
    (SELECT 
    	head.stock_output_id,
    	item.item_id,
        item.fty_id,
            item.location_id,
            item.mat_id,
            item.erp_batch,
            item.refer_receipt_code,
            item.refer_receipt_rid
    FROM
        biz_stock_output_item item
    INNER JOIN biz_stock_output_head head ON head.stock_output_id = item.stock_output_id
        AND head.is_delete = 0
        AND head.status = 10
        AND head.receipt_type IN ${receiptType}
        AND item.fty_id = #{ftyId}
        AND item.location_id = #{locationId}
        AND item.mat_id = #{matId}
        AND item.erp_batch = #{erpbatch}) res ON res.refer_receipt_code = ach.refer_receipt_code
        AND res.refer_receipt_rid = aci.refer_receipt_rid
        LEFT JOIN
    dic_package_type pack ON pack.package_type_id = cwi.package_type_id
    GROUP BY  
	    cwp.batch,
	    cwi.production_batch,
	    cwi.erp_batch,
	    cwi.quality_batch,
	    cwi.package_type_id,
	    pack.package_type_code,
	    pack.package_type_name,
	    pack.package_standard,u2.unit_code,
	    pack.package_standard_ch        
  
  
  </select>
  
  <!-- 查询扩展 -->
  <select id="selectItemByOrderId" parameterType="map" resultMap="BaseResultMapVO" flushCache="true">
    select <include refid="Base_Column_List" />
    	,head.stock_output_code
    	,factory.fty_code
	    ,factory.fty_name
	    ,location.location_code
	    ,location.location_name
	    ,location.node_code
	    ,material.mat_code
	    ,material.mat_name
	    ,material.samp_name
	    ,material.specification
	    ,material.standard
	    ,unit.unit_code
	    ,unit.name_zh unit_name
	    ,move.move_type_code
	    ,move.move_type_name
	    ,IFNULL(w.plan_output,'0') is_focus_batch
	    ,case when item.write_off = '0' then '未冲销' 
	          when item.write_off = '1' then '已冲销' end write_off_name
	    ,pkg.package_type_code
	    ,pkg.package_type_name
	    ,pkg.package_standard_ch
	    ,pkg.package_standard  / (case when unit.unit_code = 'KG' then 1 else 1000 end) package_standard   
    from biz_stock_output_item item
   inner join biz_stock_output_head head on head.stock_output_id = item.stock_output_id
   inner join dic_factory factory on factory.fty_id = item.fty_id
   inner join dic_stock_location location on location.location_id = item.location_id
   inner join dic_material material on material.mat_id = item.mat_id
   inner join dic_unit unit on unit.unit_id = item.unit_id
   inner join dic_warehouse w on w.wh_id = location.wh_id AND w.is_delete = 0
   left join dic_package_type pkg on pkg.package_type_id = item.package_type_id 
   left join dic_move_type move on move.move_type_id = item.move_type_id
    where item.is_delete = 0
    <if test="itemId != null" >
	 and item.item_id = #{itemId,jdbcType=INTEGER}
	</if>
    <if test="stockOutputId != null" >
	 and item.stock_output_id = #{stockOutputId,jdbcType=INTEGER}
	</if>
	<if test="stockOutputRid != null" >
	 and item.stock_output_rid = #{stockOutputRid,jdbcType=INTEGER}
	</if>
  </select>
  
  <insert id="insertSelective" parameterType="com.inossem.wms.model.biz.BizStockOutputItem">
    insert into biz_stock_output_item
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="itemId != null">
        item_id,
      </if>
      <if test="stockOutputId != null">
        stock_output_id,
      </if>
      <if test="stockOutputRid != null">
        stock_output_rid,
      </if>
      <if test="ftyId != null">
        fty_id,
      </if>
      <if test="matId != null">
        mat_id,
      </if>
      <if test="unitId != null">
        unit_id,
      </if>
      <if test="decimalPlace != null">
        decimal_place,
      </if>
      <if test="sendQty != null">
        send_qty,
      </if>
      <if test="outputQty != null">
        output_qty,
      </if>
      <if test="returnQty != null">
        return_qty,
      </if>
      <if test="stockQty != null">
        stock_qty,
      </if>
      <if test="locationId != null">
        location_id,
      </if>
      <if test="moveTypeId != null">
        move_type_id,
      </if>
      <if test="referReceiptCode != null">
        refer_receipt_code,
      </if>
      <if test="referReceiptRid != null">
        refer_receipt_rid,
      </if>
      <if test="referPrice != null">
        refer_price,
      </if>
      <if test="matDocId != null">
        mat_doc_id,
      </if>
      <if test="matDocYear != null">
        mat_doc_year,
      </if>
      <if test="matDocRid != null">
        mat_doc_rid,
      </if>
      <if test="reserveId != null">
        reserve_id,
      </if>
      <if test="reserveRid != null">
        reserve_rid,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
      <if test="writeOff != null">
        write_off,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="modifyUser != null">
        modify_user,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="modifyTime != null">
        modify_time,
      </if>
      <if test="batch != null">
        batch,
      </if>
      <if test="whId != null">
        wh_id,
      </if>
      <if test="erpBatch != null">
        erp_batch,
      </if>
      <if test="productBatch != null">
        product_batch,
      </if>
      <if test="qualityBatch != null">
        quality_batch,
      </if>
      <if test="packageTypeId != null">
        package_type_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="itemId != null">
        #{itemId,jdbcType=INTEGER},
      </if>
      <if test="stockOutputId != null">
        #{stockOutputId,jdbcType=INTEGER},
      </if>
      <if test="stockOutputRid != null">
        #{stockOutputRid,jdbcType=INTEGER},
      </if>
      <if test="ftyId != null">
        #{ftyId,jdbcType=INTEGER},
      </if>
      <if test="matId != null">
        #{matId,jdbcType=INTEGER},
      </if>
      <if test="unitId != null">
        #{unitId,jdbcType=INTEGER},
      </if>
      <if test="decimalPlace != null">
        #{decimalPlace,jdbcType=TINYINT},
      </if>
      <if test="sendQty != null">
        #{sendQty,jdbcType=DECIMAL},
      </if>
      <if test="outputQty != null">
        #{outputQty,jdbcType=DECIMAL},
      </if>
      <if test="returnQty != null">
        #{returnQty,jdbcType=DECIMAL},
      </if>
      <if test="stockQty != null">
        #{stockQty,jdbcType=DECIMAL},
      </if>
      <if test="locationId != null">
        #{locationId,jdbcType=INTEGER},
      </if>
      <if test="moveTypeId != null">
        #{moveTypeId,jdbcType=INTEGER},
      </if>
      <if test="referReceiptCode != null">
        #{referReceiptCode,jdbcType=VARCHAR},
      </if>
      <if test="referReceiptRid != null">
        #{referReceiptRid,jdbcType=VARCHAR},
      </if>
      <if test="referPrice != null">
        #{referPrice,jdbcType=DECIMAL},
      </if>
      <if test="matDocId != null">
        #{matDocId,jdbcType=INTEGER},
      </if>
      <if test="matDocYear != null">
        #{matDocYear,jdbcType=INTEGER},
      </if>
      <if test="matDocRid != null">
        #{matDocRid,jdbcType=INTEGER},
      </if>
      <if test="reserveId != null">
        #{reserveId,jdbcType=VARCHAR},
      </if>
      <if test="reserveRid != null">
        #{reserveRid,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=TINYINT},
      </if>
      <if test="writeOff != null">
        #{writeOff,jdbcType=TINYINT},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="modifyUser != null">
        #{modifyUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="batch != null">
        #{batch,jdbcType=BIGINT},
      </if>
      <if test="whId != null">
        #{whId,jdbcType=INTEGER},
      </if>
      <if test="erpBatch != null">
         #{erpBatch,jdbcType=VARCHAR},
      </if>
      <if test="productBatch != null">
        #{productBatch,jdbcType=VARCHAR},
      </if>
      <if test="qualityBatch != null">
        #{qualityBatch,jdbcType=VARCHAR},
      </if>
      <if test="packageTypeId != null">
         #{packageTypeId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  
  <update id="updateByPrimaryKeySelective" parameterType="com.inossem.wms.model.biz.BizStockOutputItem">
    update biz_stock_output_item
    <set>
      modify_time = SYSDATE(),
      <if test="stockOutputId != null">
        stock_output_id = #{stockOutputId,jdbcType=INTEGER},
      </if>
      <if test="stockOutputRid != null">
        stock_output_rid = #{stockOutputRid,jdbcType=INTEGER},
      </if>
      <if test="ftyId != null">
        fty_id = #{ftyId,jdbcType=INTEGER},
      </if>
      <if test="matId != null">
        mat_id = #{matId,jdbcType=INTEGER},
      </if>
      <if test="unitId != null">
        unit_id = #{unitId,jdbcType=INTEGER},
      </if>
      <if test="decimalPlace != null">
        decimal_place = #{decimalPlace,jdbcType=TINYINT},
      </if>
      <if test="sendQty != null">
        send_qty = #{sendQty,jdbcType=DECIMAL},
      </if>
      <if test="outputQty != null">
        output_qty = #{outputQty,jdbcType=DECIMAL},
      </if>
      <if test="returnQty != null">
        return_qty = #{returnQty,jdbcType=DECIMAL},
      </if>
      <if test="stockQty != null">
        stock_qty = #{stockQty,jdbcType=DECIMAL},
      </if>
      <if test="locationId != null">
        location_id = #{locationId,jdbcType=INTEGER},
      </if>
      <if test="moveTypeId != null">
        move_type_id = #{moveTypeId,jdbcType=INTEGER},
      </if>
      <if test="referReceiptCode != null">
        refer_receipt_code = #{referReceiptCode,jdbcType=VARCHAR},
      </if>
      <if test="referReceiptRid != null">
        refer_receipt_rid = #{referReceiptRid,jdbcType=VARCHAR},
      </if>
      <if test="referPrice != null">
        refer_price = #{referPrice,jdbcType=DECIMAL},
      </if>
      <if test="matDocId != null">
        mat_doc_id = #{matDocId,jdbcType=INTEGER},
      </if>
      <if test="matDocYear != null">
        mat_doc_year = #{matDocYear,jdbcType=INTEGER},
      </if>
      <if test="matDocRid != null">
        mat_doc_rid = #{matDocRid,jdbcType=INTEGER},
      </if>
      <if test="reserveId != null">
        reserve_id = #{reserveId,jdbcType=VARCHAR},
      </if>
      <if test="reserveRid != null">
        reserve_rid = #{reserveRid,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=TINYINT},
      </if>
      <if test="writeOff != null">
        write_off = #{writeOff,jdbcType=TINYINT},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="modifyUser != null">
        modify_user = #{modifyUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where is_delete = 0
    <if test="itemId != null" >
	 and item_id = #{itemId,jdbcType=INTEGER}
	</if>
    <if test="stockOutputId != null and stockOutputRid != null" >
	 and stock_output_id = #{stockOutputId,jdbcType=INTEGER}
	 and stock_output_rid = #{stockOutputRid,jdbcType=INTEGER}
	</if>
  </update>
  
  <!-- 根据出库单号逻辑删除出库单明细 -->
  <update id="deleteItemByOrderId" parameterType="map">
  	update biz_stock_output_item 
       set is_delete = 1,
  	       modify_time = SYSDATE(),
  	       modify_user = #{modifyUser,jdbcType=VARCHAR}
  	 where is_delete = 0
  	<if test="itemId != null" >
	 and item_id = #{itemId,jdbcType=INTEGER}
	</if>
    <if test="stockOutputId != null" >
	 and stock_output_id = #{stockOutputId,jdbcType=INTEGER}
	</if>
	<if test="stockOutputRid != null" >
	 and stock_output_rid = #{stockOutputRid,jdbcType=INTEGER}
	</if>
  </update>
  
  <select id="queryOutputStockOutAndInOnPaging" parameterType="java.util.Map" resultType="java.util.Map">
  SELECT DISTINCT
				move.move_type_code,
				mat.mat_id,
				mat.mat_code,
				mat.mat_name,
				fty.fty_name as fty_output_name,
				fty.fty_code as fty_output_code,
				loc.location_name as location_output_name,
				loc.location_code as location_output_code,
				position.batch,
				item.mat_doc_rid,
				item.mat_doc_code,
				position.stock_output_id AS refer_receipt_id,
				item.stock_output_rid AS refer_receipt_rid,
				head.stock_output_code AS refer_receipt_code,
				unit.name_zh,
				position.stock_qty AS qty,
				position.product_batch,
				DATE_FORMAT(
					position.create_time,
					'%Y-%m-%d'
				) create_time,
				head.doc_time,
				head.posting_date,
				head.receipt_type,
				u.user_name,
				head.remark AS headremark,
				item.remark AS itemremark,
				CASE
			WHEN head.`status` = '0' THEN
				'未完成'
			WHEN head.`status` = '10' THEN
				'已完成'
			WHEN head.`status` = '2' THEN
				'已提交'
			WHEN head.`status` = '3' THEN
				'已作业'
			WHEN head.`status` = '4' THEN
				'已关联'
			WHEN head.`status` = '5' THEN
				'已转储'
			WHEN head.`status` = '6' THEN
				'已拣货'
			WHEN head.`status` = '7' THEN
				'待出库'
			WHEN head.`status` = '20' THEN
				'已冲销'
			END status_name
			FROM
				biz_stock_output_position position
			INNER JOIN biz_stock_output_head head ON head.stock_output_id = position.stock_output_id
			INNER JOIN biz_stock_output_item item ON item.stock_output_id = position.stock_output_id
			AND item.stock_output_rid = position.stock_output_rid
			LEFT JOIN dic_move_type move ON move.move_type_id = item.move_type_id
			INNER JOIN dic_factory fty ON fty.fty_id = item.fty_id
			INNER JOIN dic_stock_location loc ON loc.location_id = item.location_id
			LEFT JOIN dic_unit unit ON unit.unit_id = item.unit_id
			INNER JOIN dic_material mat ON mat.mat_id = item.mat_id
			INNER JOIN wms_user u ON u.user_id = head.create_user
			WHERE
				item.is_delete = 0
		<if test="ftyOutputId != null and ftyOutputId !=''">
			AND item.fty_id= #{ftyOutputId,jdbcType=VARCHAR}
		</if>
		<if test="locationOutputId != null and locationOutputId !=''">
			AND item.location_id = #{locationOutputId,jdbcType=VARCHAR}
		</if>
		<if test="createTimeBegin != null">
			AND item.create_time <![CDATA[>=]]>
			#{createTimeBegin,jdbcType=TIMESTAMP}
		</if>
		<if test="createTimeEnd != null">
			AND item.create_time <![CDATA[<=]]>
			#{createTimeEnd,jdbcType=TIMESTAMP}
		</if>
		<if test="referReceiptCode != null and referReceiptCode !=''">
			AND  head.stock_output_code = #{referReceiptCode,jdbcType=VARCHAR}
		</if>

		<if test="moveTypeCode != null and moveTypeCode !=''">
			AND move.move_type_code = #{moveTypeCode,jdbcType=VARCHAR}
		</if>
		<if test="matCode != null and matCode !=''">
			AND (			
			<foreach collection="utilMatCodes" item="item" index="index" separator="or">     	
	    		  	(mat.mat_code BETWEEN #{item.begin} AND #{item.end} 
	    		  	AND CHAR_LENGTH(mat.mat_code) IN (CHAR_LENGTH(#{item.begin}),CHAR_LENGTH(#{item.end})))   	
	  		</foreach> 		   
	  			 OR	mat.mat_code IN   				 
	   		<foreach collection="utilMatCodes.get(0).strings" item="string" index="index" open="(" close=")" separator=",">  		
	    			#{string}     			 
	  		</foreach> 
				)	
		</if>
<if test="matName != null and matName !=''">
			AND mat.mat_name LIKE CONCAT('%',#{matName,jdbcType=VARCHAR},'%')
		</if>	
<if test="userName != null and userName !=''">
			AND u.user_name LIKE CONCAT('%',#{userName,jdbcType=VARCHAR},'%')
		</if>
		
			<if test="productBatch !=null and productBatch!=''">
		AND position.product_batch=#{productBatch}
		</if>
		
		<if test="matDocCode !=null and matDocCode !=''">
			AND item.mat_doc_code=#{matDocCode}
		</if>
		ORDER BY create_time DESC
	</select>
  
  <select id="getOutputAmount" parameterType="map" resultType="map">
      select 

		ANY_VALUE(t.mat_group_id) mat_group_id ,ANY_VALUE(t.mat_group_code) mat_group_code,ANY_VALUE(t.mat_group_name) mat_group_name
		, sum(t.outputAmount ) outputAmount 
			<if test="groupWh!=null ">
			,ANY_VALUE(t.wh_id) wh_id,ANY_VALUE(t.wh_code) wh_code,ANY_VALUE(t.wh_name) wh_name
			</if>
			,sum(ifnull(t.qty,0)) qty 
	<if test="groupMat!=null ">
			, t.mat_id,t.mat_code,t.mat_name
	 		</if>
				
		from (		
		select 
			m.mat_group_id ,g.mat_group_code,g.mat_group_name
			,sum(ifnull(op.stock_qty,0) * ifnull(p.price,0)/10000) as outputAmount 
			<if test="groupWh!=null ">
			,wh.wh_id,wh.wh_code,wh.wh_name
			</if>
			,sum(ifnull(op.stock_qty*(case when u.unit_code = 'KG' then 1 else 1000 end),0)) qty 
			<if test="groupMat!=null ">
			, m.mat_id,m.mat_code,m.mat_name
			</if>
			 from biz_stock_output_item o
			inner join biz_stock_output_head h on o.stock_output_id=h.stock_output_id and h.is_delete=0 and o.is_delete=0
			inner join biz_stock_output_position op on op.stock_output_id = o.stock_output_id and o.stock_output_rid = op.stock_output_rid and op.is_delete =0
			left join buf_factory_mat_price p on o.mat_id=p.mat_id and p.fty_id=o.fty_id
			inner join dic_material m on o.mat_id=m.mat_id
			inner join dic_unit u on m.unit_id = u.unit_id
			inner join dic_factory f on f.fty_id=o.fty_id
			inner join dic_corp cp on cp.corp_id=f.corp_id
			inner join dic_stock_location l on l.location_id=o.location_id
			inner join dic_material_group g on g.mat_group_id=m.mat_group_id
		
			inner join dic_warehouse wh on wh.wh_id=l.wh_id
			 where 1=1  and h.status=10 and  h.receipt_type != 28
				<if test="timeFr!=null and timeFr !=''">
				 and o.create_time <![CDATA[>=]]>#{timeFr,jdbcType=VARCHAR} 
				</if>
				<if test="timeTo!=null and timeTo !=''">
				  and o.create_time <![CDATA[<=]]> #{timeTo,jdbcType=VARCHAR} 
				</if>	
				<if test="ftyId!=null and ftyId !=''">
				  and f.fty_id = #{ftyId,jdbcType=INTEGER}
			  	</if>
			  	<if test="boardId!=null and boardId !=''">
				  and cp.board_id= #{boardId,jdbcType=INTEGER}
			  	</if>
				<if test="locationId!=null and locationId !=''">
				  and l.location_id = #{locationId,jdbcType=INTEGER}
			  </if>
			   <if test="whId!=null and whId!=''">
			   and wh.wh_id=#{whId,jdbcType=INTEGER}
			   </if>
			  	<if test="matGroupId!=null and matGroupId !=''">
				  and g.mat_group_id = #{matGroupId,jdbcType=INTEGER}
			  	</if>	 
			  GROUP BY 
			  <if test="groupWh!=null ">
			  wh.wh_id,
			  </if>
			  m.mat_group_id
		 	 <if test="groupMat!=null ">
			  , m.mat_id,m.mat_code,m.mat_name
			 </if>
			 
		union all	 
		select 
			m.mat_group_id ,g.mat_group_code,g.mat_group_name
			,sum(ifnull(op.stock_qty,0) * ifnull(p.price,0)/10000) as outputAmount 
			<if test="groupWh!=null ">
			,wh.wh_id,wh.wh_code,wh.wh_name
			</if>
			,sum(ifnull(op.stock_qty*(case when u.unit_code = 'KG' then 1 else 1000 end),0)) qty 
			<if test="groupMat!=null ">
			, m.mat_id,m.mat_code,m.mat_name
			</if>
			 from biz_stock_output_item o
			inner join biz_stock_output_head h on o.stock_output_id=h.stock_output_id and h.is_delete=0 and o.is_delete=0
			inner join biz_stock_output_position op on op.stock_output_id = o.stock_output_id and o.stock_output_rid = op.stock_output_rid and op.is_delete =0
			left join buf_factory_mat_price p on o.mat_id=p.mat_id and p.fty_id=op.fty_id
			inner join dic_material m on o.mat_id=m.mat_id
			inner join dic_unit u on m.unit_id = u.unit_id
			inner join dic_factory f on f.fty_id=op.fty_id
			inner join dic_corp cp on cp.corp_id=f.corp_id
			inner join dic_stock_location l on l.location_id=op.location_id
			inner join dic_material_group g on g.mat_group_id=m.mat_group_id
		
			inner join dic_warehouse wh on wh.wh_id=l.wh_id
			 where 1=1  and h.status=10 and  h.receipt_type = 25
				<if test="timeFr!=null and timeFr !=''">
				 and o.create_time <![CDATA[>=]]>#{timeFr,jdbcType=VARCHAR} 
				</if>
				<if test="timeTo!=null and timeTo !=''">
				  and o.create_time <![CDATA[<=]]> #{timeTo,jdbcType=VARCHAR} 
				</if>	
				<if test="ftyId!=null and ftyId !=''">
				  and f.fty_id = #{ftyId,jdbcType=INTEGER}
			  	</if>
			  	<if test="boardId!=null and boardId !=''">
				  and cp.board_id= #{boardId,jdbcType=INTEGER}
			  	</if>
				<if test="locationId!=null and locationId !=''">
				  and l.location_id = #{locationId,jdbcType=INTEGER}
			  </if>
			   <if test="whId!=null and whId!=''">
			   and wh.wh_id=#{whId,jdbcType=INTEGER}
			   </if>
			  	<if test="matGroupId!=null and matGroupId !=''">
				  and g.mat_group_id = #{matGroupId,jdbcType=INTEGER}
			  	</if>	 
			  GROUP BY 
			  <if test="groupWh!=null ">
			  wh.wh_id,
			  </if>
			  m.mat_group_id
		 	 <if test="groupMat!=null ">
			  , m.mat_id,m.mat_code,m.mat_name
			 </if>
			 
		union all
		    select 
	
		    m.mat_group_id ,g.mat_group_code,g.mat_group_name
		    ,sum(ifnull(ti.transport_qty,0) * ifnull(p.price,0)/10000) as outputAmount 
		    <if test="groupWh!=null ">
			,wh.wh_id,wh.wh_code,wh.wh_name
			</if>
			,sum(ifnull(ti.transport_qty*(case when u.unit_code = 'KG' then 1 else 1000 end) ,0)) qty 
			<if test="groupMat!=null ">
			, m.mat_id,m.mat_code,m.mat_name
			</if>
		 from biz_stock_input_transport_item ti  
		inner join biz_stock_input_transport_head th on ti.stock_transport_id=th.stock_transport_id and th.is_delete=0 and ti.is_delete=0
		left join buf_factory_mat_price p on ti.mat_id=p.mat_id and p.fty_id=ti.fty_output_id
		inner join dic_material m on ti.mat_id=m.mat_id
		inner join dic_unit u on m.unit_id = u.unit_id
		inner join dic_factory f on f.fty_id=ti.fty_output_id
		inner join dic_corp cp on cp.corp_id=f.corp_id
		inner join dic_stock_location l on l.location_id=ti.location_output_id
		inner join dic_material_group g on g.mat_group_id=m.mat_group_id

		inner join dic_warehouse wh on l.wh_id=wh.wh_id
		 where 1=1 and th.status=10
		<if test="timeFr!=null and timeFr !=''">
		 and ti.create_time <![CDATA[>=]]>#{timeFr,jdbcType=VARCHAR} 
		</if>
		<if test="timeTo!=null and timeTo !=''">
		  and ti.create_time <![CDATA[<=]]> #{timeTo,jdbcType=VARCHAR} 
		</if>	
		<if test="ftyId!=null and ftyId !=''">
		  and f.fty_id = #{ftyId,jdbcType=INTEGER}
	  	</if>
	  	<if test="boardId!=null and boardId !=''">
		  and cp.board_id= #{boardId,jdbcType=INTEGER}
	  	</if>
		<if test="locationId!=null and locationId !=''">
		  and l.location_id = #{locationId,jdbcType=INTEGER}
	  </if>
	    <if test="whId!=null and whId!=''">
	    and wh.wh_id=#{whId,jdbcType=INTEGER}
	    </if>
	  	<if test="matGroupId!=null and matGroupId !=''">
		  and g.mat_group_id = #{matGroupId,jdbcType=INTEGER}
	  	</if>	 
	 GROUP BY 
	 <if test="groupWh!=null ">
	 wh.wh_id,
	 </if>
	 m.mat_group_id
	<if test="groupMat!=null ">
	, m.mat_id,m.mat_code,m.mat_name
	</if>
		) t
	GROUP BY 
	<if test="groupWh!=null ">
	t.wh_id,
	</if>
	t.mat_group_id
	<if test="groupMat!=null ">
	, t.mat_id,t.mat_code,t.mat_name
	</if>
  
  </select>
  
  <select id="getAllOutput" parameterType="map" resultType="map">
      select 

		
			    sum(t.outputAmount ) outputAmount 
			,t.wh_id,t.wh_code,t.wh_name,
			sum(ifnull(t.qty,0)) qty 
			<if test="groupMat!=null ">
			, t.mat_id,t.mat_code,t.mat_name
	 		</if>
				
		from (		
		select 
			   
			    sum(ifnull(op.stock_qty,0) * ifnull(p.price,0)/10000) as outputAmount 
			,wh.wh_id,wh.wh_code,wh.wh_name
			,sum(ifnull(op.stock_qty*(case when u.unit_code = 'KG' then 1 else 1000 end),0)) qty 
			<if test="groupMat!=null ">
			, m.mat_id,m.mat_code,m.mat_name
			</if>
			
			 from biz_stock_output_item o
			inner join biz_stock_output_head h on o.stock_output_id=h.stock_output_id and h.is_delete=0 and o.is_delete=0
				inner join biz_stock_output_position op on op.stock_output_id = o.stock_output_id and o.stock_output_rid = op.stock_output_rid and op.is_delete =0
			left join buf_factory_mat_price p on o.mat_id=p.mat_id and p.fty_id=o.fty_id
			inner join dic_material m on o.mat_id=m.mat_id
			inner join dic_unit u on m.unit_id = u.unit_id
			inner join dic_factory f on f.fty_id=o.fty_id
			inner join dic_corp cp on cp.corp_id=f.corp_id
			inner join dic_stock_location l on l.location_id=o.location_id
			inner join dic_material_group g on g.mat_group_id=m.mat_group_id
		
			inner join dic_warehouse wh on wh.wh_id=l.wh_id
			 where 1=1  and h.status=10 and h.receipt_type != 28
				<if test="timeFr!=null and timeFr !=''">
				 and o.create_time <![CDATA[>=]]>#{timeFr,jdbcType=VARCHAR} 
				</if>
				<if test="timeTo!=null and timeTo !=''">
				  and o.create_time <![CDATA[<]]> #{timeTo,jdbcType=VARCHAR} 
				</if>	
				<if test="ftyId!=null and ftyId !=''">
				  and f.fty_id = #{ftyId,jdbcType=INTEGER}
			  	</if>
			  	<if test="boardId!=null and boardId !=''">
				  and cp.board_id= #{boardId,jdbcType=INTEGER}
			  	</if>
			  	<if test="coryId!=null and corpId !=''">
		  			and cp.corp_id= #{corpId,jdbcType=INTEGER}
	  			</if>
				<if test="locationId!=null and locationId !=''">
				  and l.location_id = #{locationId,jdbcType=INTEGER}
			  </if>
			   <if test="whId!=null and whId!=''">
			   and wh.wh_id=#{whId,jdbcType=INTEGER}
			   </if>
			  	<if test="matGroupId!=null and matGroupId !=''">
				  and g.mat_group_id = #{matGroupId,jdbcType=INTEGER}
			  	</if>	 
			  GROUP BY wh.wh_id ,wh.wh_code,wh.wh_name
			  <if test="groupMat!=null ">
			  , m.mat_id,m.mat_code,m.mat_name
			 </if>
			 union all
			 select 
			   
			    sum(ifnull(op.stock_qty,0) * ifnull(p.price,0)/10000) as outputAmount 
			,wh.wh_id,wh.wh_code,wh.wh_name
			,sum(ifnull(op.stock_qty*(case when u.unit_code = 'KG' then 1 else 1000 end),0)) qty 
			<if test="groupMat!=null ">
			, m.mat_id,m.mat_code,m.mat_name
			</if>
			
			 from biz_stock_output_item o
			inner join biz_stock_output_head h on o.stock_output_id=h.stock_output_id and h.is_delete=0 and o.is_delete=0
				inner join biz_stock_output_position op on op.stock_output_id = o.stock_output_id and o.stock_output_rid = op.stock_output_rid and op.is_delete =0
			left join buf_factory_mat_price p on o.mat_id=p.mat_id and p.fty_id=op.fty_id
			inner join dic_material m on o.mat_id=m.mat_id
			inner join dic_unit u on m.unit_id = u.unit_id
			inner join dic_factory f on f.fty_id=op.fty_id
			inner join dic_corp cp on cp.corp_id=f.corp_id
			inner join dic_stock_location l on l.location_id=op.location_id
			inner join dic_material_group g on g.mat_group_id=m.mat_group_id
		
			inner join dic_warehouse wh on wh.wh_id=l.wh_id
			 where 1=1  and h.status=10 and h.receipt_type = 25
				<if test="timeFr!=null and timeFr !=''">
				 and o.create_time <![CDATA[>=]]>#{timeFr,jdbcType=VARCHAR} 
				</if>
				<if test="timeTo!=null and timeTo !=''">
				  and o.create_time <![CDATA[<]]> #{timeTo,jdbcType=VARCHAR} 
				</if>	
				<if test="ftyId!=null and ftyId !=''">
				  and f.fty_id = #{ftyId,jdbcType=INTEGER}
			  	</if>
			  	<if test="boardId!=null and boardId !=''">
				  and cp.board_id= #{boardId,jdbcType=INTEGER}
			  	</if>
			  	<if test="coryId!=null and corpId !=''">
		  			and cp.corp_id= #{corpId,jdbcType=INTEGER}
	  			</if>
				<if test="locationId!=null and locationId !=''">
				  and l.location_id = #{locationId,jdbcType=INTEGER}
			  </if>
			   <if test="whId!=null and whId!=''">
			   and wh.wh_id=#{whId,jdbcType=INTEGER}
			   </if>
			  	<if test="matGroupId!=null and matGroupId !=''">
				  and g.mat_group_id = #{matGroupId,jdbcType=INTEGER}
			  	</if>	 
			  GROUP BY wh.wh_id ,wh.wh_code,wh.wh_name
			  <if test="groupMat!=null ">
			  , m.mat_id,m.mat_code,m.mat_name
			 </if>
			 
			 
		union all
		    select 
	
		 
			    sum(ifnull(ti.transport_qty,0) * ifnull(p.price,0)/10000) as outputAmount 
			,wh.wh_id ,wh.wh_code,wh.wh_name
			,sum(ifnull(ti.transport_qty*(case when u.unit_code = 'KG' then 1 else 1000 end) ,0)) qty 
			<if test="groupMat!=null ">
			, m.mat_id,m.mat_code,m.mat_name
			</if>
			
	
		 from biz_stock_input_transport_item ti  
		inner join biz_stock_input_transport_head th on ti.stock_transport_id=th.stock_transport_id and th.is_delete=0 and ti.is_delete=0
		left join buf_factory_mat_price p on ti.mat_id=p.mat_id and p.fty_id=ti.fty_output_id
		inner join dic_material m on ti.mat_id=m.mat_id
		inner join dic_unit u on m.unit_id = u.unit_id
		inner join dic_factory f on f.fty_id=ti.fty_output_id
		inner join dic_corp cp on cp.corp_id=f.corp_id
		inner join dic_stock_location l on l.location_id=ti.location_output_id
		inner join dic_material_group g on g.mat_group_id=m.mat_group_id

		inner join dic_warehouse wh on l.wh_id=wh.wh_id
		 where 1=1 and th.status=10
		<if test="timeFr!=null and timeFr !=''">
		 and ti.create_time <![CDATA[>=]]>#{timeFr,jdbcType=VARCHAR} 
		</if>
		<if test="timeTo!=null and timeTo !=''">
		  and ti.create_time <![CDATA[<]]> #{timeTo,jdbcType=VARCHAR} 
		</if>	
		<if test="ftyId!=null and ftyId !=''">
		  and f.fty_id = #{ftyId,jdbcType=INTEGER}
	  	</if>
	  	<if test="boardId!=null and boardId !=''">
		  and cp.board_id= #{boardId,jdbcType=INTEGER}
	  	</if>
	  	<if test="coryId!=null and corpId !=''">
		  and cp.corp_id= #{corpId,jdbcType=INTEGER}
	  	</if>
		<if test="locationId!=null and locationId !=''">
		  and l.location_id = #{locationId,jdbcType=INTEGER}
	  </if>
	    <if test="whId!=null and whId!=''">
	    and wh.wh_id=#{whId,jdbcType=INTEGER}
	    </if>
	  	<if test="matGroupId!=null and matGroupId !=''">
		  and g.mat_group_id = #{matGroupId,jdbcType=INTEGER}
	  	</if>	 
	 GROUP BY wh.wh_id,wh.wh_code,wh.wh_name
	 <if test="groupMat!=null ">
	, m.mat_id,m.mat_code,m.mat_name
	</if>
		) t
	GROUP BY t.wh_id,t.wh_code,t.wh_name
	<if test="groupMat!=null ">
	, t.mat_id,t.mat_code,t.mat_name
	</if>
	<if test="type!=null and type ==1 ">
		  order by outputAmount Desc
	</if>	 
	<if test="type!=null and type ==2 ">
		  order by qty Desc
	</if>
	
  </select>
  
  
  
  
</mapper>