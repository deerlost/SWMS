<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.inossem.wms.dao.biz.BizStockInputTransportItemMapper">
	<resultMap id="BaseResultMap"
		type="com.inossem.wms.model.biz.BizStockInputTransportItem">
		<id column="item_id" jdbcType="INTEGER" property="itemId" />
		<result column="stock_transport_id" jdbcType="INTEGER"
			property="stockTransportId" />
		<result column="stock_transport_rid" jdbcType="INTEGER"
			property="stockTransportRid" />

		<result column="mat_id" jdbcType="INTEGER" property="matId" />
		<result column="fty_id" jdbcType="INTEGER" property="ftyId" />
		<result column="fty_output_id" jdbcType="INTEGER" property="ftyOutputId" />
		<result column="location_id" jdbcType="INTEGER" property="locationId" />
		<result column="location_output_id" jdbcType="INTEGER"
			property="locationOutputId" />
		<result column="batch" jdbcType="BIGINT" property="batch" />
		<result column="wh_id" jdbcType="INTEGER" property="whId" />
		<result column="area_id" jdbcType="INTEGER" property="areaId" />

		<result column="transport_qty" jdbcType="DECIMAL" property="transportQty" />
		<result column="fty_input" jdbcType="INTEGER" property="ftyInput" />
		<result column="location_input" jdbcType="INTEGER" property="locationInput" />
		<result column="mat_input" jdbcType="INTEGER" property="matInput" />
		<result column="mat_year" jdbcType="VARCHAR" property="matYear" />
		<result column="mat_input_rid" jdbcType="INTEGER" property="matInputRid" />

		<result column="unit_id" jdbcType="INTEGER" property="unitId" />
		<result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
		<result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
		<result column="is_delete" jdbcType="TINYINT" property="isDelete" />
		<result column="refer_receipt_code" jdbcType="VARCHAR"
			property="referReceiptCode" />
		<result column="refer_receipt_rid" jdbcType="INTEGER" property="referReceiptRid" />
		<result column="business_type" jdbcType="INTEGER" property="businessType" />
		<result column="remark" jdbcType="VARCHAR" property="remark" />
		<result column="mes_fail_code" jdbcType="VARCHAR" property="mesFailCode" />
		<result column="mes_doc_code" jdbcType="VARCHAR" property="mesDocCode" />
	</resultMap>
	<sql id="Base_Column_List">
		item_id, stock_transport_id, stock_transport_rid,
		mat_id,
		fty_id,
		mat_year,mat_input_rid,
		fty_output_id, location_id,
		location_output_id, batch, wh_id, area_id,
		transport_qty,
		fty_input,
		location_input, mat_input, unit_id, create_time,
		modify_time,
		is_delete,
		refer_receipt_code, refer_receipt_rid,mes_fail_code,mes_doc_code,
		business_type, remark
	</sql>
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from biz_stock_input_transport_item
		where item_id =
		#{itemId,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		biz_stock_input_transport_item
		where item_id =
		#{itemId,jdbcType=INTEGER}
	</delete>
	<insert id="insert"
		parameterType="com.inossem.wms.model.biz.BizStockInputTransportItem">
		insert into biz_stock_input_transport_item (item_id,
		stock_transport_id,
		stock_transport_rid,
		mat_id,
		fty_id,
		fty_output_id,
		location_id, location_output_id,
		batch, wh_id,
		area_id,
		transport_qty,
		fty_input,
		location_input,
		mat_input,
		unit_id, create_time,
		modify_time,
		is_delete, refer_receipt_code,
		refer_receipt_rid,
		business_type, remark
		)
		values
		(#{itemId,jdbcType=INTEGER},
		#{stockTransportId,jdbcType=INTEGER},
		#{stockTransportRid,jdbcType=INTEGER},
		#{matId,jdbcType=INTEGER},
		#{ftyId,jdbcType=INTEGER},
		#{ftyOutputId,jdbcType=INTEGER},
		#{locationId,jdbcType=INTEGER}, #{locationOutputId,jdbcType=INTEGER},
		#{batch,jdbcType=BIGINT}, #{whId,jdbcType=INTEGER},
		#{areaId,jdbcType=INTEGER},

		#{transportQty,jdbcType=DECIMAL},
		#{ftyInput,jdbcType=INTEGER},
		#{locationInput,jdbcType=INTEGER},
		#{matInput,jdbcType=INTEGER},

		#{createTime,jdbcType=TIMESTAMP},
		#{modifyTime,jdbcType=TIMESTAMP},
		#{isDelete,jdbcType=TINYINT},
		#{referReceiptCode,jdbcType=VARCHAR},
		#{referReceiptRid,jdbcType=INTEGER}, #{businessType,jdbcType=INTEGER},
		#{remark,jdbcType=VARCHAR}
		)
	</insert>
	<insert id="insertSelective"
		parameterType="com.inossem.wms.model.biz.BizStockInputTransportItem"
		useGeneratedKeys="true" keyProperty="itemId">
		insert into biz_stock_input_transport_item
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="itemId != null">
				item_id,
			</if>
			<if test="stockTransportId != null">
				stock_transport_id,
			</if>
			<if test="stockTransportRid != null">
				stock_transport_rid,
			</if>
			<if test="matId != null">
				mat_id,
			</if>
			<if test="ftyId != null">
				fty_id,
			</if>
			<if test="ftyOutputId != null">
				fty_output_id,
			</if>
			<if test="locationId != null">
				location_id,
			</if>
			<if test="locationOutputId != null">
				location_output_id,
			</if>
			<if test="batch != null">
				batch,
			</if>
			<if test="whId != null">
				wh_id,
			</if>
			<if test="areaId != null">
				area_id,
			</if>

			<if test="transportQty != null">
				transport_qty,
			</if>
			<if test="ftyInput != null">
				fty_input,
			</if>
			<if test="locationInput != null">
				location_input,
			</if>
			<if test="matInput != null">
				mat_input,
			</if>
			<if test="matYear != null">
				mat_year,
			</if>
			<if test="matInputRid != null">
				mat_input_rid,
			</if>
			<if test="unitId != null">
				unit_id,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="modifyTime != null">
				modify_time,
			</if>
			<if test="isDelete != null">
				is_delete,
			</if>
			<if test="referReceiptCode != null">
				refer_receipt_code,
			</if>
			<if test="referReceiptRid != null">
				refer_receipt_rid,
			</if>
			<if test="referReceiptId != null">
				refer_receipt_id,
			</if>
			<if test="businessType != null">
				business_type,
			</if>
			<if test="remark != null">
				remark,
			</if>

			<if test="erpBatch != null">
				erp_batch,
			</if>
			<if test="productionBatch != null">
				production_batch,
			</if>
			<if test="packageTypeId != null">
				package_type_id,
			</if>
			<if test="stockQty != null">
				stock_qty,
			</if>


		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="itemId != null">
				#{itemId,jdbcType=INTEGER},
			</if>
			<if test="stockTransportId != null">
				#{stockTransportId,jdbcType=INTEGER},
			</if>
			<if test="stockTransportRid != null">
				#{stockTransportRid,jdbcType=INTEGER},
			</if>
			<if test="matId != null">
				#{matId,jdbcType=INTEGER},
			</if>
			<if test="ftyId != null">
				#{ftyId,jdbcType=INTEGER},
			</if>
			<if test="ftyOutputId != null">
				#{ftyOutputId,jdbcType=INTEGER},
			</if>
			<if test="locationId != null">
				#{locationId,jdbcType=INTEGER},
			</if>
			<if test="locationOutputId != null">
				#{locationOutputId,jdbcType=INTEGER},
			</if>
			<if test="batch != null">
				#{batch,jdbcType=BIGINT},
			</if>
			<if test="whId != null">
				#{whId,jdbcType=INTEGER},
			</if>
			<if test="areaId != null">
				#{areaId,jdbcType=INTEGER},
			</if>
			<if test="transportQty != null">
				#{transportQty,jdbcType=DECIMAL},
			</if>
			<if test="ftyInput != null">
				#{ftyInput,jdbcType=INTEGER},
			</if>
			<if test="locationInput != null">
				#{locationInput,jdbcType=INTEGER},
			</if>
			<if test="matInput != null">
				#{matInput,jdbcType=INTEGER},
			</if>
			<if test="matYear != null">
				#{matYear,jdbcType=VARCHAR},
			</if>
			<if test="matInputRid != null">
				#{matInputRid,jdbcType=INTEGER},
			</if>

			<if test="unitId != null">
				#{unitId,jdbcType=INTEGER},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="modifyTime != null">
				#{modifyTime,jdbcType=TIMESTAMP},
			</if>
			<if test="isDelete != null">
				#{isDelete,jdbcType=TINYINT},
			</if>
			<if test="referReceiptCode != null">
				#{referReceiptCode,jdbcType=VARCHAR},
			</if>
			<if test="referReceiptRid != null">
				#{referReceiptRid,jdbcType=INTEGER},
			</if>
			<if test="referReceiptId != null">
				#{referReceiptId,jdbcType=INTEGER},
			</if>
			<if test="businessType != null">
				#{businessType,jdbcType=INTEGER},
			</if>
			<if test="remark != null">
				#{remark,jdbcType=VARCHAR},
			</if>

			<if test="erpBatch != null">
				#{erpBatch,jdbcType=VARCHAR},

			</if>
			<if test="productionBatch != null">
				#{productionBatch,jdbcType=VARCHAR},

			</if>
			<if test="packageTypeId != null">
				#{packageTypeId,jdbcType=INTEGER},
			</if>

			<if test="stockQty != null">
				#{stockQty,jdbcType=DECIMAL},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective"
		parameterType="com.inossem.wms.model.biz.BizStockInputTransportItem">
		update biz_stock_input_transport_item
		<set>
			<if test="stockTransportId != null">
				stock_transport_id =
				#{stockTransportId,jdbcType=INTEGER},
			</if>
			<if test="stockTransportRid != null">
				stock_transport_rid =
				#{stockTransportRid,jdbcType=INTEGER},
			</if>

			<if test="matId != null">
				mat_id = #{matId,jdbcType=INTEGER},
			</if>
			<if test="ftyId != null">
				fty_id = #{ftyId,jdbcType=INTEGER},
			</if>
			<if test="ftyOutputId != null">
				fty_output_id = #{ftyOutputId,jdbcType=INTEGER},
			</if>
			<if test="locationId != null">
				location_id = #{locationId,jdbcType=INTEGER},
			</if>
			<if test="locationOutputId != null">
				location_output_id =
				#{locationOutputId,jdbcType=INTEGER},
			</if>
			<if test="batch != null">
				batch = #{batch,jdbcType=BIGINT},
			</if>
			<if test="whId != null">
				wh_id = #{whId,jdbcType=INTEGER},
			</if>
			<if test="areaId != null">
				area_id = #{areaId,jdbcType=INTEGER},
			</if>

			<if test="transportQty != null">
				transport_qty = #{transportQty,jdbcType=DECIMAL},
			</if>
			<if test="ftyInput != null">
				fty_input = #{ftyInput,jdbcType=INTEGER},
			</if>
			<if test="locationInput != null">
				location_input = #{locationInput,jdbcType=INTEGER},
			</if>
			<if test="matInput != null">
				mat_input = #{matInput,jdbcType=INTEGER},
			</if>
			<if test="matYear != null">
				mat_year = #{matYear,jdbcType=VARCHAR},
			</if>
			<if test="matInputRid != null">
				mat_input_rid = #{matInputRid,jdbcType=INTEGER},
			</if>


			<if test="unitId != null">
				unit_id = #{unitId,jdbcType=INTEGER},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="modifyTime != null">
				modify_time = #{modifyTime,jdbcType=TIMESTAMP},
			</if>
			<if test="isDelete != null">
				is_delete = #{isDelete,jdbcType=TINYINT},
			</if>
			<if test="referReceiptCode != null">
				refer_receipt_code =
				#{referReceiptCode,jdbcType=VARCHAR},
			</if>
			<if test="referReceiptRid != null">
				refer_receipt_rid = #{referReceiptRid,jdbcType=INTEGER},
			</if>
			<if test="businessType != null">
				business_type = #{businessType,jdbcType=INTEGER},
			</if>
			<if test="remark != null">
				remark = #{remark,jdbcType=VARCHAR},
			</if>
			<if test="mesDocCode != null">
				mes_doc_code = #{mesDocCode,jdbcType=VARCHAR},
			</if>

			<if test="matDocCode != null">
				mat_doc_code = #{matDocCode,jdbcType=VARCHAR},
			</if>
			<if test="matOffCode != null">
				mat_off_code = #{matOffCode,jdbcType=VARCHAR},
			</if>
			<if test="matDocYear != null">
				mat_doc_year = #{matDocYear,jdbcType=VARCHAR},
			</if>
			<if test="matDocRid != null">
				mat_doc_rid = #{matDocRid,jdbcType=INTEGER},
			</if>
			<if test="matDocId != null">
				mat_doc_id = #{matDocId,jdbcType=INTEGER},
			</if>
			<if test="mesFailCode != null">
				mes_fail_code = #{mesFailCode,jdbcType=VARCHAR},
			</if>


		</set>
		where item_id = #{itemId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="com.inossem.wms.model.biz.BizStockInputTransportItem">
		update biz_stock_input_transport_item
		set
		stock_transport_id = #{stockTransportId,jdbcType=INTEGER},
		stock_transport_rid = #{stockTransportRid,jdbcType=INTEGER},

		mat_id =
		#{matId,jdbcType=INTEGER},
		fty_id = #{ftyId,jdbcType=INTEGER},
		fty_output_id = #{ftyOutputId,jdbcType=INTEGER},
		location_id =
		#{locationId,jdbcType=INTEGER},
		location_output_id =
		#{locationOutputId,jdbcType=INTEGER},
		batch = #{batch,jdbcType=BIGINT},
		wh_id = #{whId,jdbcType=INTEGER},
		area_id = #{areaId,jdbcType=INTEGER},

		transport_qty =
		#{transportQty,jdbcType=DECIMAL},
		fty_input =
		#{ftyInput,jdbcType=INTEGER},
		location_input =
		#{locationInput,jdbcType=INTEGER},
		mat_input =
		#{matInput,jdbcType=INTEGER},

		unit_id =
		#{unitId,jdbcType=INTEGER},
		create_time =
		#{createTime,jdbcType=TIMESTAMP},
		modify_time =
		#{modifyTime,jdbcType=TIMESTAMP},
		is_delete =
		#{isDelete,jdbcType=TINYINT},
		refer_receipt_code =
		#{referReceiptCode,jdbcType=VARCHAR},
		refer_receipt_rid =
		#{referReceiptRid,jdbcType=INTEGER},
		business_type =
		#{businessType,jdbcType=INTEGER},
		remark = #{remark,jdbcType=VARCHAR}
		where item_id = #{itemId,jdbcType=INTEGER}
	</update>

	<select id="selectByStockTransportId" parameterType="int"
		resultType="map">
		SELECT
		bi.mat_id,
		bi.item_id,
		dm.mat_name,
		dm.mat_code,
		du.name_zh,
		dm.unit_id,
		bi.transport_qty as qty,
		bi.batch tran_batch,
		biz_stock_task_item_cw.batch,
		f.fty_id,
		f.fty_name,
		l.location_name,
		l.location_code,
		l.location_id,
		fo.fty_name fty_output_name,
		lo.location_name output_location_name,
		bi.production_batch,
		bi.package_type_id package_type_id,
		pdt.sn_used,
		bi.fty_input,
		bi.location_input,
		bi.mat_input,
		bi.fty_output_id,
		bi.location_output_id,
		bi.erp_batch,
		bi.refer_receipt_code,
		bi.refer_receipt_rid as refer_receipt_id,
		bi.refer_receipt_id as refer_id,
		bi.stock_transport_rid,
		biz_stock_task_item_cw.refer_receipt_type,
		bi.business_type,
		bi.remark
		FROM
		biz_stock_input_transport_item bi 
		inner join dic_package_type pdt on bi.package_type_id = pdt.package_type_id
		left
		JOIN dic_material dm ON
		dm.mat_id = bi.mat_id
		left JOIN dic_unit du ON
		dm.unit_id = du.unit_id
		left JOIN dic_factory f ON bi.fty_id = f.fty_id
		left JOIN
		dic_stock_location l ON bi.location_id = l.location_id
		left
		JOIN
		dic_factory fo ON bi.fty_id = fo.fty_id
		left JOIN
		dic_stock_location lo
		ON bi.location_id = lo.location_id
		LEFT JOIN
		biz_stock_task_item_cw ON biz_stock_task_item_cw.stock_task_id =
		bi.refer_receipt_id AND biz_stock_task_item_cw.stock_task_rid =
		bi.refer_receipt_rid


		where bi.stock_transport_id=#{stockInputId}
	</select>
	<select id="selectByStockInputTransportId" parameterType="java.lang.Integer"
		resultType="java.util.Map">
		SELECT
		item.transport_qty,
		item.mes_fail_code,
		item.mat_off_code,
		item.item_id,
		item.stock_transport_rid,
		item.location_input AS location_input_id,
		item.fty_input AS fty_input_id,
		item.fty_output_id,
		item.location_output_id,
		p.package_type_code,
		p.package_type_name,
		p.package_standard_ch,
		p.package_standard / (case when unit2.unit_code = 'KG' then 1 else 1000 end) package_standard ,
		item.transport_qty,
		item.production_batch,
		item.erp_batch,
		item.batch,
		item.package_type_id,
		item.mat_id,
		item.mes_doc_code,
		item.mat_doc_code,
		fty.fty_name AS fty_output_name,
		fty.fty_code AS fty_output_code,
		loc.location_code AS location_output_code,
		loc.location_name AS location_output_name,
		fac.fty_name AS fty_input_name,
		fac.fty_code AS fty_input_code,
		lo.location_code AS location_input_code,
		lo.location_name AS location_input_name,
		item.remark,
		mat.mat_code,
		mat.mat_name,
		unit2.unit_code,
		item.stock_qty,
		unit2.name_zh AS unit_name
		FROM
		biz_stock_input_transport_item item
		
		LEFT JOIN dic_factory fty ON fty.fty_id = item.fty_output_id
		LEFT JOIN dic_factory fac ON fac.fty_id = item.fty_input
		LEFT JOIN dic_stock_location loc ON loc.location_id =
		item.location_output_id
		LEFT JOIN dic_stock_location lo ON lo.location_id = item.location_input
		INNER JOIN dic_package_type p ON p.package_type_id =
		item.package_type_id
		INNER JOIN dic_material mat ON mat.mat_id = item.mat_id
		LEFT JOIN dic_unit unit2 ON unit2.unit_id = mat.unit_id
		WHERE
		item.is_delete = 0
		<if test="stockTransportId !=null">
			AND item.stock_transport_id=#{stockTransportId}
		</if>
	</select>

	<!-- <select id="selectStockTransportHeadbyID" parameterType="java.lang.Integer" 
		resultType="java.util.Map"> SELECT head.stock_input_id, head.stock_input_code, 
		head.stock_transport_code, head.move_type_id, u.user_name, fty.fty_code as 
		fty_input_code, fty.fty_name as fty_input_name, loc.location_code as location_input_code, 
		loc.location_name as location_input_name, class.class_name, syn.syn_type, 
		syn.syn_type_name, date_format(h.create_time,'%Y-%m-%d') as head.create_time, 
		head.status, case head.status when 0 then'未完成' when 10 then'已完成' when20 then'已冲销' 
		end head.status, head.remark from biz_stock_input_head head </select> -->

	<select id="queryTransStockOutAndInOnPaging" parameterType="java.util.Map"
		resultType="java.util.Map">

		SELECT distinct
				move.biz_type,
				move.move_type_code,
				mat.mat_id,
				mat.mat_code,
				mat.mat_name,
				fty.fty_name AS fty_output_name,
				fty.fty_code AS fty_output_code,
				ftyin.fty_name AS fty_input_name,
				ftyin.fty_code AS fty_input_code,
				loc.location_name as location_output_name,
				loc.location_code as location_output_code,
				locin.location_name as location_input_name,
				locin.location_code as location_input_code,
				item.batch,
				item.stock_transport_id AS refer_receipt_id,
				item.stock_transport_rid AS refer_receipt_rid,
				item.production_batch AS product_batch,
				item.mat_doc_code,
				head.stock_transport_code AS refer_receipt_code,
				unit.name_zh,
				item.transport_qty AS qty,
				DATE_FORMAT(
					item.create_time,
					'%Y-%m-%d'
				) create_time,
				head.doc_time,
				head.posting_date,
				head.receipt_type,
				u.user_name,
				head.remark AS headremark,
				item.remark AS itemremark,
				CASE
			WHEN head.`status` = '0' THEN
				'未完成'
			WHEN head.`status` = '10' THEN
				'已完成'
			WHEN head.`status` = '2' THEN
				'已提交'
			WHEN head.`status` = '3' THEN
				'已作业'
			WHEN head.`status` = '4' THEN
				'已关联'
			WHEN head.`status` = '5' THEN
				'已转储'
			WHEN head.`status` = '6' THEN
				'已拣货'
			WHEN head.`status` = '7' THEN
				'待出库'
			WHEN head.`status` = '20' THEN
				'已冲销'
			END status_name
			FROM
				biz_stock_input_transport_item item
			INNER JOIN biz_stock_input_transport_head head ON head.stock_transport_id = item.stock_transport_id
			LEFT JOIN dic_move_type move ON move.move_type_id = head.move_type_id
			INNER JOIN dic_factory fty ON fty.fty_id = item.fty_output_id
			INNER JOIN dic_factory ftyin ON ftyin.fty_id = item.fty_input
			INNER JOIN dic_stock_location loc ON loc.location_id = item.location_output_id
			INNER JOIN dic_stock_location locin ON locin.location_id = item.location_input
			LEFT JOIN dic_unit unit ON unit.unit_id = item.unit_id
			INNER JOIN dic_material mat ON mat.mat_id = item.mat_id
			INNER JOIN wms_user u ON u.user_id = head.create_user
			WHERE
				item.is_delete = 0
		<if test="ftyOutputId != null and ftyOutputId !=''">
			AND item.fty_output_id= #{ftyOutputId,jdbcType=VARCHAR}
		</if>
		<if test="locationOutputId != null and locationOutputId !=''">
			AND item.location_output_id = #{locationOutputId,jdbcType=VARCHAR}
		</if>
		<if test="ftyInputId != null and ftyInputId !=''">
			AND item.fty_input= #{ftyInputId,jdbcType=VARCHAR}
		</if>
		<if test="locationInputId != null and locationInputId !=''">
			AND item.location_input = #{locationInputId,jdbcType=VARCHAR}
		</if>
		<if test="createTimeBegin != null" >
			AND item.create_time <![CDATA[>=]]>
			#{createTimeBegin,jdbcType=TIMESTAMP}
		</if>
		<if test="createTimeEnd != null">
			AND item.create_time <![CDATA[<=]]>
			#{createTimeEnd,jdbcType=TIMESTAMP}
		</if>
		<if test="referReceiptCode != null and referReceiptCode !=''">
			AND head.stock_transport_code =
			#{referReceiptCode,jdbcType=VARCHAR}
		</if>

		<if test="moveTypeCode != null and moveTypeCode !=''">
			AND move.move_type_code = #{moveTypeCode,jdbcType=VARCHAR}
		</if>
		<if test="matCode != null and matCode !=''">
			AND (
			<foreach collection="utilMatCodes" item="item" index="index"
				separator="or">
				(mat.mat_code BETWEEN #{item.begin} AND #{item.end}
				AND CHAR_LENGTH(mat.mat_code) IN
				(CHAR_LENGTH(#{item.begin}),CHAR_LENGTH(#{item.end})) )
			</foreach>
			OR mat.mat_code IN
			<foreach collection="utilMatCodes.get(0).strings" item="string"
				index="index" open="(" close=")" separator=",">
				#{string}
			</foreach>
			)
		</if>
		<if test="matName != null and matName !=''">
			AND mat.mat_name LIKE
			CONCAT('%',#{matName,jdbcType=VARCHAR},'%')
		</if>
		<if test="userName != null and userName !=''">
			AND u.user_name LIKE
			CONCAT('%',#{userName,jdbcType=VARCHAR},'%')
		</if>


		<if test="productBatch !=null and productBatch!='' ">
			AND item.production_batch = #{productBatch}
		</if>
		<if test="matDocCode !=null and matDocCode !=''">
			AND item.mat_doc_code=#{matDocCode}
		</if>

	</select>

	<select id="queryPrice" parameterType="java.util.Map"
		resultType="java.util.Map">

		select
		fmp.price
		from buf_factory_mat_price fmp
		where fmp.mat_id=#{matId} AND fmp.fty_id=#{ftyId}

	</select>


</mapper>