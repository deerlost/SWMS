<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.inossem.wms.dao.biz.BizStockTaskItemCwMapper">
  <resultMap id="BaseResultMap" type="com.inossem.wms.model.biz.BizStockTaskItemCw">
    <id column="item_id" jdbcType="INTEGER" property="itemId" />
    <result column="stock_task_id" jdbcType="INTEGER" property="stockTaskId" />
    <result column="stock_task_rid" jdbcType="INTEGER" property="stockTaskRid" />
    <result column="stock_task_req_id" jdbcType="INTEGER" property="stockTaskReqId" />
    <result column="stock_task_req_rid" jdbcType="INTEGER" property="stockTaskReqRid" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="wh_id" jdbcType="INTEGER" property="whId" />
    <result column="fty_id" jdbcType="INTEGER" property="ftyId" />
    <result column="location_id" jdbcType="INTEGER" property="locationId" />
    <result column="mat_id" jdbcType="INTEGER" property="matId" />
    <result column="unit_id" jdbcType="INTEGER" property="unitId" />
    <result column="batch" jdbcType="BIGINT" property="batch" />
    <result column="stock_task_qty" jdbcType="DECIMAL" property="stockTaskQty" />
    <result column="qty" jdbcType="DECIMAL" property="qty" />
    <result column="is_delete" jdbcType="TINYINT" property="isDelete" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
    <result column="mat_doc_id" jdbcType="INTEGER" property="matDocId" />
    <result column="mat_doc_rid" jdbcType="INTEGER" property="matDocRid" />
    <result column="take_delivery_date" jdbcType="TIMESTAMP" property="takeDeliveryDate" />
    <result column="validity_time" jdbcType="TIMESTAMP" property="validityTime" />
    <result column="weight" jdbcType="DECIMAL" property="weight" />
    <result column="unit_weight" jdbcType="TINYINT" property="unitWeight" />
    <result column="spec_stock" jdbcType="VARCHAR" property="specStock" />
    <result column="spec_stock_code" jdbcType="VARCHAR" property="specStockCode" />
    <result column="spec_stock_name" jdbcType="VARCHAR" property="specStockName" />
    
    <result column="package_type_id" jdbcType="INTEGER" property="packageTypeId" />
    <result column="mat_store_type" jdbcType="TINYINT" property="matStoreType" />
    <result column="refer_receipt_rid" jdbcType="INTEGER" property="referReceiptRid" />
    <result column="refer_receipt_id" jdbcType="INTEGER" property="referReceiptId" />
    <result column="refer_receipt_code" jdbcType="VARCHAR" property="referReceiptCode" />
    <result column="refer_receipt_type" jdbcType="TINYINT" property="referReceiptType" />
    <result column="receipt_type" jdbcType="TINYINT" property="receiptType" />
    <result column="before_task_id" jdbcType="INTEGER" property="beforeTaskId" />
  </resultMap>
  <sql id="Base_Column_List">
    item_id, stock_task_id, stock_task_rid, stock_task_req_id, stock_task_req_rid, status, 
    wh_id, fty_id, location_id, mat_id, unit_id, batch, stock_task_qty, qty, is_delete, 
    create_time, modify_time, mat_doc_id, mat_doc_rid, take_delivery_date, validity_time, 
    weight, unit_weight, spec_stock, spec_stock_code, spec_stock_name
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from biz_stock_task_item_cw
    where item_id = #{itemId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from biz_stock_task_item_cw
    where item_id = #{itemId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByStockTaskId" parameterType="java.lang.Integer">
    delete from biz_stock_task_item_cw
    where stock_task_id = #{stockTaskId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.inossem.wms.model.biz.BizStockTaskItemCw">
    insert into biz_stock_task_item_cw (item_id, stock_task_id, stock_task_rid, 
      stock_task_req_id, stock_task_req_rid, status, 
      wh_id, fty_id, location_id, 
      mat_id, unit_id, batch, 
      stock_task_qty, qty, is_delete, 
      create_time, modify_time, mat_doc_id, 
      mat_doc_rid, take_delivery_date, validity_time, 
      weight, unit_weight, spec_stock, 
      spec_stock_code, spec_stock_name)
    values (#{itemId,jdbcType=INTEGER}, #{stockTaskId,jdbcType=INTEGER}, #{stockTaskRid,jdbcType=INTEGER}, 
      #{stockTaskReqId,jdbcType=INTEGER}, #{stockTaskReqRid,jdbcType=INTEGER}, #{status,jdbcType=TINYINT}, 
      #{whId,jdbcType=INTEGER}, #{ftyId,jdbcType=INTEGER}, #{locationId,jdbcType=INTEGER}, 
      #{matId,jdbcType=INTEGER}, #{unitId,jdbcType=INTEGER}, #{batch,jdbcType=BIGINT}, 
      #{stockTaskQty,jdbcType=DECIMAL}, #{qty,jdbcType=DECIMAL}, #{isDelete,jdbcType=TINYINT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{modifyTime,jdbcType=TIMESTAMP}, #{matDocId,jdbcType=INTEGER}, 
      #{matDocRid,jdbcType=INTEGER}, #{takeDeliveryDate,jdbcType=TIMESTAMP}, #{validityTime,jdbcType=TIMESTAMP}, 
      #{weight,jdbcType=DECIMAL}, #{unitWeight,jdbcType=TINYINT}, #{specStock,jdbcType=VARCHAR}, 
      #{specStockCode,jdbcType=VARCHAR}, #{specStockName,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.inossem.wms.model.biz.BizStockTaskItemCw" useGeneratedKeys="true" keyProperty="itemId">
    insert into biz_stock_task_item_cw
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="itemId != null">
        item_id,
      </if>
      <if test="stockTaskId != null">
        stock_task_id,
      </if>
      <if test="stockTaskRid != null">
        stock_task_rid,
      </if>
      <if test="stockTaskReqId != null">
        stock_task_req_id,
      </if>
      <if test="stockTaskReqRid != null">
        stock_task_req_rid,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="whId != null">
        wh_id,
      </if>
      <if test="ftyId != null">
        fty_id,
      </if>
      <if test="locationId != null">
        location_id,
      </if>
      <if test="matId != null">
        mat_id,
      </if>
      <if test="unitId != null">
        unit_id,
      </if>
      <if test="batch != null">
        batch,
      </if>
      <if test="stockTaskQty != null">
        stock_task_qty,
      </if>
      <if test="qty != null">
        qty,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="modifyTime != null">
        modify_time,
      </if>
      <if test="matDocId != null">
        mat_doc_id,
      </if>
      <if test="matDocRid != null">
        mat_doc_rid,
      </if>
      <if test="takeDeliveryDate != null">
        take_delivery_date,
      </if>
      <if test="validityTime != null">
        validity_time,
      </if>
      <if test="weight != null">
        weight,
      </if>
      <if test="unitWeight != null">
        unit_weight,
      </if>
      <if test="specStock != null">
        spec_stock,
      </if>
      <if test="specStockCode != null">
        spec_stock_code,
      </if>
      <if test="specStockName != null">
        spec_stock_name,
      </if>
      <if test="packageTypeId != null">
        package_type_id,
      </if>
      <if test="referReceiptId != null">
        refer_receipt_id,
      </if>
      <if test="referReceiptCode != null">
        refer_receipt_code,
      </if>
      <if test="referReceiptType != null">
        refer_receipt_type,
      </if>
      <if test="referReceiptRid != null">
        refer_receipt_rid,
      </if>
      <if test="workModel != null">
        work_model,
      </if>
      <if test="productionBatch != null">
        production_batch,
      </if>
      <if test="erpBatch != null">
        erp_batch,
      </if>
      <if test="qualityBatch != null">
        quality_batch,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="itemId != null">
        #{itemId,jdbcType=INTEGER},
      </if>
      <if test="stockTaskId != null">
        #{stockTaskId,jdbcType=INTEGER},
      </if>
      <if test="stockTaskRid != null">
        #{stockTaskRid,jdbcType=INTEGER},
      </if>
      <if test="stockTaskReqId != null">
        #{stockTaskReqId,jdbcType=INTEGER},
      </if>
      <if test="stockTaskReqRid != null">
        #{stockTaskReqRid,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="whId != null">
        #{whId,jdbcType=INTEGER},
      </if>
      <if test="ftyId != null">
        #{ftyId,jdbcType=INTEGER},
      </if>
      <if test="locationId != null">
        #{locationId,jdbcType=INTEGER},
      </if>
      <if test="matId != null">
        #{matId,jdbcType=INTEGER},
      </if>
      <if test="unitId != null">
        #{unitId,jdbcType=INTEGER},
      </if>
      <if test="batch != null">
        #{batch,jdbcType=BIGINT},
      </if>
      <if test="stockTaskQty != null">
        #{stockTaskQty,jdbcType=DECIMAL},
      </if>
      <if test="qty != null">
        #{qty,jdbcType=DECIMAL},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="matDocId != null">
        #{matDocId,jdbcType=INTEGER},
      </if>
      <if test="matDocRid != null">
        #{matDocRid,jdbcType=INTEGER},
      </if>
      <if test="takeDeliveryDate != null">
        #{takeDeliveryDate,jdbcType=TIMESTAMP},
      </if>
      <if test="validityTime != null">
        #{validityTime,jdbcType=TIMESTAMP},
      </if>
      <if test="weight != null">
        #{weight,jdbcType=DECIMAL},
      </if>
      <if test="unitWeight != null">
        #{unitWeight,jdbcType=TINYINT},
      </if>
      <if test="specStock != null">
        #{specStock,jdbcType=VARCHAR},
      </if>
      <if test="specStockCode != null">
        #{specStockCode,jdbcType=VARCHAR},
      </if>
      <if test="specStockName != null">
        #{specStockName,jdbcType=VARCHAR},
      </if>
      <if test="packageTypeId != null">
       	#{packageTypeId,jdbcType=INTEGER},
      </if>
      <if test="referReceiptId != null">
        #{referReceiptId,jdbcType=INTEGER},
      </if>
      <if test="referReceiptCode != null">
        #{referReceiptCode,jdbcType=VARCHAR},
      </if>
      <if test="referReceiptType != null">
        #{referReceiptType,jdbcType=TINYINT},
      </if>
      <if test="referReceiptRid != null">
        #{referReceiptRid,jdbcType=INTEGER},
      </if>
      <if test="workModel != null">
        #{workModel,jdbcType=TINYINT},
      </if>
      <if test="productionBatch != null">
        #{productionBatch,jdbcType=VARCHAR},
      </if>
      <if test="erpBatch != null">
        #{erpBatch,jdbcType=VARCHAR},
      </if>
      <if test="qualityBatch != null">
        #{qualityBatch,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.inossem.wms.model.biz.BizStockTaskItemCw">
    update biz_stock_task_item_cw
    <set>
      <if test="stockTaskId != null">
        stock_task_id = #{stockTaskId,jdbcType=INTEGER},
      </if>
      <if test="stockTaskRid != null">
        stock_task_rid = #{stockTaskRid,jdbcType=INTEGER},
      </if>
      <if test="stockTaskReqId != null">
        stock_task_req_id = #{stockTaskReqId,jdbcType=INTEGER},
      </if>
      <if test="stockTaskReqRid != null">
        stock_task_req_rid = #{stockTaskReqRid,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="whId != null">
        wh_id = #{whId,jdbcType=INTEGER},
      </if>
      <if test="ftyId != null">
        fty_id = #{ftyId,jdbcType=INTEGER},
      </if>
      <if test="locationId != null">
        location_id = #{locationId,jdbcType=INTEGER},
      </if>
      <if test="matId != null">
        mat_id = #{matId,jdbcType=INTEGER},
      </if>
      <if test="unitId != null">
        unit_id = #{unitId,jdbcType=INTEGER},
      </if>
      <if test="batch != null">
        batch = #{batch,jdbcType=BIGINT},
      </if>
      <if test="stockTaskQty != null">
        stock_task_qty = #{stockTaskQty,jdbcType=DECIMAL},
      </if>
      <if test="qty != null">
        qty = #{qty,jdbcType=DECIMAL},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="matDocId != null">
        mat_doc_id = #{matDocId,jdbcType=INTEGER},
      </if>
      <if test="matDocRid != null">
        mat_doc_rid = #{matDocRid,jdbcType=INTEGER},
      </if>
      <if test="takeDeliveryDate != null">
        take_delivery_date = #{takeDeliveryDate,jdbcType=TIMESTAMP},
      </if>
      <if test="validityTime != null">
        validity_time = #{validityTime,jdbcType=TIMESTAMP},
      </if>
      <if test="weight != null">
        weight = #{weight,jdbcType=DECIMAL},
      </if>
      <if test="unitWeight != null">
        unit_weight = #{unitWeight,jdbcType=TINYINT},
      </if>
      <if test="specStock != null">
        spec_stock = #{specStock,jdbcType=VARCHAR},
      </if>
      <if test="specStockCode != null">
        spec_stock_code = #{specStockCode,jdbcType=VARCHAR},
      </if>
      <if test="specStockName != null">
        spec_stock_name = #{specStockName,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="workModel != null">
        work_model = #{workModel,jdbcType=TINYINT},
      </if>
    </set>
    where item_id = #{itemId,jdbcType=INTEGER}
  </update>
  <update id="updateByStockTaskId" parameterType="com.inossem.wms.model.biz.BizStockTaskItemCw">
    update biz_stock_task_item_cw set
        stock_task_id = stock_task_id
        <if test="status != null">
        ,status = #{status,jdbcType=TINYINT}
      </if>
      <if test="isDelete != null">
        ,is_delete = #{isDelete,jdbcType=TINYINT}
      </if>
    where stock_task_id = #{stockTaskId,jdbcType=INTEGER}
  </update>
  
  <update id="updateByPrimaryKey" parameterType="com.inossem.wms.model.biz.BizStockTaskItemCw">
    update biz_stock_task_item_cw
    set stock_task_id = #{stockTaskId,jdbcType=INTEGER},
      stock_task_rid = #{stockTaskRid,jdbcType=INTEGER},
      stock_task_req_id = #{stockTaskReqId,jdbcType=INTEGER},
      stock_task_req_rid = #{stockTaskReqRid,jdbcType=INTEGER},
      status = #{status,jdbcType=TINYINT},
      wh_id = #{whId,jdbcType=INTEGER},
      fty_id = #{ftyId,jdbcType=INTEGER},
      location_id = #{locationId,jdbcType=INTEGER},
      mat_id = #{matId,jdbcType=INTEGER},
      unit_id = #{unitId,jdbcType=INTEGER},
      batch = #{batch,jdbcType=BIGINT},
      stock_task_qty = #{stockTaskQty,jdbcType=DECIMAL},
      qty = #{qty,jdbcType=DECIMAL},
      is_delete = #{isDelete,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      mat_doc_id = #{matDocId,jdbcType=INTEGER},
      mat_doc_rid = #{matDocRid,jdbcType=INTEGER},
      take_delivery_date = #{takeDeliveryDate,jdbcType=TIMESTAMP},
      validity_time = #{validityTime,jdbcType=TIMESTAMP},
      weight = #{weight,jdbcType=DECIMAL},
      unit_weight = #{unitWeight,jdbcType=TINYINT},
      spec_stock = #{specStock,jdbcType=VARCHAR},
      spec_stock_code = #{specStockCode,jdbcType=VARCHAR},
      spec_stock_name = #{specStockName,jdbcType=VARCHAR}
    where item_id = #{itemId,jdbcType=INTEGER}
  </update>
  <select id="selectByReferReceiptIdAndType" parameterType="com.inossem.wms.model.biz.BizStockTaskItemCw" resultMap="BaseResultMap">
    select 
	    ri.item_id, ri.stock_task_id, ri.stock_task_rid, ri.stock_task_req_id, ri.stock_task_req_rid, ri.status, 
	    ri.wh_id, ri.fty_id, ri.location_id, ri.mat_id, ri.unit_id, ri.batch, ri.stock_task_qty, ri.qty, ri.is_delete, 
	    ri.create_time, ri.modify_time, ri.mat_doc_id, ri.mat_doc_rid, ri.take_delivery_date, ri.validity_time, 
	    ri.weight, ri.unit_weight, ri.spec_stock, ri.spec_stock_code, ri.spec_stock_name,pt.sn_used mat_store_type,ri.before_task_id,ri.package_type_id,
		rh.receipt_type,ri.refer_receipt_code,ri.refer_receipt_id,ri.refer_receipt_rid,ri.refer_receipt_type
    from biz_stock_task_item_cw ri
    
    INNER JOIN dic_package_type pt on pt.package_type_id = ri.package_type_id 
    INNER  JOIN biz_stock_task_head_cw rh on ri.stock_task_id = rh.stock_task_id
    where ri.is_delete = 0 and rh.is_delete = 0
    <if test="referReceiptId != null">
       and ri.refer_receipt_id = #{referReceiptId,jdbcType=INTEGER}
    </if>
     <if test="referReceiptCode != null">
       and ri.refer_receipt_code = #{referReceiptCode,jdbcType=INTEGER}
    </if>
    <if test="referReceiptType != null">
       and ri.refer_receipt_type = #{referReceiptType,jdbcType=TINYINT}
    </if>
    <if test="referReceiptRid != null">
       and ri.refer_receipt_rid = #{referReceiptRid,jdbcType=INTEGER}
    </if>
     <if test="stockTaskId != null">
       and ri.stock_task_id = #{stockTaskId,jdbcType=INTEGER}
    </if>
    <if test="receiptType != null">
        AND rh.receipt_type = #{receiptType,jdbcType=TINYINT}
    </if>
  </select>
  
   <select id="getItemsByStockTaskId" parameterType="java.lang.Integer" resultType="com.inossem.wms.model.vo.BizStockTaskItemVo">	
	select   
		t.item_id itemId, 
		t.stock_task_id stockTaskId, t.stock_task_rid stockTaskRid,
		t.stock_task_req_id stockTaskReqId, t.stock_task_req_rid stockTaskReqRid, t.status, 
	    t.wh_id whid, t.fty_id ftyId, 
	    t.location_id locationId, n.location_code locationCode,n.location_name locationName,
	    t.mat_id matId,m.mat_code matCode, m.mat_name matName,
	    t.unit_id unitId,u.name_zh nameZh,
	    t.batch, t.stock_task_qty stockTaskQty, t.qty,(tr.qty-tr.stock_task_qty) unStockTaskQty,
	    t.is_delete isDelete, 
		t.spec_stock specStock, t.spec_stock_code specStockCode, t.spec_stock_name specStockName,
	    t.production_batch productionBatch,t.quality_batch qualityBatch,t.erp_batch erpBatch,
	    t.package_type_id packageTypeId,ty.package_type_code packageTypeCode,ty.package_type_name packageTypeName,
	    ty.package_standard / (case when u.unit_code = 'KG' then 1 else 1000 end) packageStandard,
	    t.work_model workModel,
	    rh.stock_task_req_code stockTaskReqCode,
	    t.refer_receipt_code referReceiptCode,
		t.refer_receipt_id referReceiptId,
		t.refer_receipt_type referReceiptType,
		ty.sn_used matStoreType,
		t.remark
    FROM biz_stock_task_item_cw t 	
    INNER JOIN dic_stock_location n on t.location_id = n.location_id and t.stock_task_id = #{stockTaskId,jdbcType=INTEGER}
    INNER JOIN biz_stock_task_req_item tr on t.stock_task_req_id = tr.stock_task_req_id and t.stock_task_req_rid = tr.stock_task_req_rid
    left join biz_stock_task_req_head rh on t.stock_task_req_id = rh.stock_task_req_id
    LEFT JOIN dic_material m on t.mat_id = m.mat_id 
    LEFT JOIN dic_unit u on u.unit_id=t.unit_id 
    LEFT JOIN dic_package_type ty on t.package_type_id = ty.package_type_id
	
  </select>
  
  <select id="getItemsByStockTaskIdForWarehouse" parameterType="java.lang.Integer" resultType="java.util.Map">	
	select   
			IFNULL(ANY_VALUE(t.item_id), '' )item_id, 
		IFNULL(ANY_VALUE(t.stock_task_id), '' ) stock_task_id, 
        IFNULL(ANY_VALUE(t.stock_task_rid), '' ) stock_task_rid,
        IFNULL(ANY_VALUE(t.status), '' )status, 
	    IFNULL(ANY_VALUE(t.mat_id), '' ) mat_id,
        IFNULL(ANY_VALUE(m.mat_code), '' ) mat_code, 
        IFNULL(ANY_VALUE(m.mat_name), '' ) mat_name,
	    IFNULL(ANY_VALUE(t.unit_id), '' ) unit_id,
        IFNULL(ANY_VALUE(u.name_en), '' ) unit_code,
        IFNULL(ANY_VALUE(u.name_zh), '' ) unit_name,
	    IFNULL(ANY_VALUE(t.batch), '' )batch, 
        IFNULL(ANY_VALUE(t.qty), '' ) qty, 
        IFNULL(CEIL( ANY_VALUE(t.qty) /ANY_VALUE(ty.package_standard / (case when u.unit_code = 'KG' then 1 else 1000 end))),0) pack_num,
	    IFNULL(ANY_VALUE(t.production_batch), '' ) production_batch,
        IFNULL(ANY_VALUE(t.quality_batch), '' ) quality_batch,
        IFNULL(ANY_VALUE(t.erp_batch), '' ) erp_batch,
	    IFNULL(ANY_VALUE(t.package_type_id), '' ) package_type_id,
        IFNULL(ANY_VALUE(ty.package_type_code), '' ) package_type_code,
        IFNULL(ANY_VALUE(ty.package_standard_ch), '' ) package_standard_ch,
        IFNULL(ANY_VALUE(ty.package_type_name), '' ) package_type_name,
        IFNULL(ANY_VALUE(ty.sn_used), '' ) sn_used,
	    IFNULL(ANY_VALUE(t.work_model), '' ) work_model,
		IFNULL(ANY_VALUE(ty.sn_used), '' ) mat_store_type,
		IFNULL(ANY_VALUE(t.remark), '' ) remark,
		IFNULL(ANY_VALUE(n.stock_id), '' ) stock_id,
		
        IFNULL(ANY_VALUE(n.source_area_id), '' ) source_area_id,
        IFNULL(ANY_VALUE(sa.area_code), '' ) source_area_code,
        IFNULL(ANY_VALUE(sa.area_name), '' ) source_area_name,
        IFNULL(ANY_VALUE(n.source_position_id), '' ) source_position_id,
        IFNULL(ANY_VALUE(sp.position_code), '' ) source_position_code,
        IFNULL(ANY_VALUE(n.source_pallet_id), '' ) source_pallet_id,
        IFNULL(ANY_VALUE(sl.pallet_code), '' ) source_pallet_code,
        IFNULL(ANY_VALUE(sl.pallet_name), '' ) source_pallet_name,
        
        IFNULL(ANY_VALUE(n.target_area_id), '' ) target_area_id,
		IFNULL(ANY_VALUE(ta.area_code), '' ) target_area_code,
        IFNULL(ANY_VALUE(ta.area_name), '' ) target_area_name,
        IFNULL(ANY_VALUE(n.target_position_id), '' ) target_position_id,
        IFNULL(ANY_VALUE(tp.position_code), '' ) target_position_code,
        IFNULL(ANY_VALUE(n.pallet_id), '' ) pallet_id,
        IFNULL(ANY_VALUE(tl.pallet_code), '' ) target_pallet_code,
        IFNULL(ANY_VALUE(tl.pallet_name), '' ) target_pallet_name,
        
        IFNULL(ANY_VALUE(sepac.package_code), '') package_code,
        IFNULL(SUM(ssp.qty) ,0)stock_qty
	    FROM biz_stock_task_item_cw t 	
	    INNER JOIN biz_stock_task_position_cw n on t.stock_task_id = n.stock_task_id and t.stock_task_rid = n.stock_task_rid and t.stock_task_id = #{stockTaskId,jdbcType=INTEGER}
	    left join stock_position ssp on ssp.id = n.stock_id
	    LEFT JOIN dic_material m on t.mat_id = m.mat_id 
	    LEFT JOIN dic_unit u on u.unit_id=t.unit_id     
	    LEFT JOIN dic_package_type ty on t.package_type_id = ty.package_type_id
	    LEFT JOIN dic_warehouse_area sa on sa.area_id = n.source_area_id
	    LEFT JOIN dic_warehouse_area ta on ta.area_id = n.target_area_id
	    LEFT JOIN dic_warehouse_position sp on sp.position_id = n.source_position_id
	    LEFT JOIN dic_warehouse_position tp on tp.position_id = n.target_position_id
	    LEFT JOIN dic_warehouse_pallet  sl on sl.pallet_id = n.source_pallet_id
	    LEFT JOIN dic_warehouse_pallet  tl on tl.pallet_id = n.pallet_id
	    left join serial_package sepac on n.package_id = sepac.package_id
	    group by t.stock_task_id,t.stock_task_rid
  
  
  </select>
  
  <select id="selectMaxStatus" parameterType="com.inossem.wms.model.biz.BizStockTaskItemCw" resultType="java.lang.Byte">
  	select max(ri.status) maxstatus 
  	from biz_stock_task_item_cw ri
    INNER  JOIN biz_stock_task_head_cw rh on ri.stock_task_id = rh.stock_task_id
    where ri.is_delete = 0 and rh.is_delete = 0
  	<if test="referReceiptId != null">
       and ri.refer_receipt_id = #{referReceiptId,jdbcType=INTEGER}
    </if>
     <if test="referReceiptCode != null">
       and ri.refer_receipt_code = #{referReceiptCode,jdbcType=INTEGER}
    </if>
    <if test="referReceiptType != null">
       and ri.refer_receipt_type = #{referReceiptType,jdbcType=TINYINT}
    </if>
    <if test="referReceiptRid != null">
       and ri.refer_receipt_rid = #{referReceiptRid,jdbcType=INTEGER}
    </if>
    <if test="receiptType != null">
       and rh.receipt_type = #{receiptType,jdbcType=TINYINT}
    </if>
    <if test="stockTaskId != null">
       and ri.stock_task_id = #{stockTaskId,jdbcType=INTEGER}
    </if>
  </select>
  
  
  <select id="selectHaveShelvesQty" parameterType="java.util.Map" resultType="java.util.Map">
  	SELECT SUM(ic.qty) have_shelves_qty
	FROM biz_stock_task_item_cw ic
    inner join biz_stock_task_head_cw hc on ic.stock_task_id = hc.stock_task_id and hc.receipt_type=#{receiptType,jdbcType=INTEGER}
    <if test="referReceiptId != null">
       and ic.refer_receipt_id = #{referReceiptId,jdbcType=INTEGER}
    </if>
     <if test="referReceiptCode != null">
       and ic.refer_receipt_code = #{referReceiptCode,jdbcType=VARCHAR}
    </if>
    <if test="referReceiptType != null">
       and ic.refer_receipt_type = #{referReceiptType,jdbcType=TINYINT}
    </if>
    <if test="referReceiptRid != null">
       and ic.refer_receipt_rid = #{referReceiptRid,jdbcType=INTEGER}
    </if>
  </select>
  <update id="updateDeleteByReferReceiptIdAndType" parameterType="java.util.Map">
    update biz_stock_task_head_cw th inner join biz_stock_task_item_cw ti on th.stock_task_id = ti.stock_task_id
    set 
      ti.is_delete = #{isDelete,jdbcType=TINYINT}
    where ti.refer_receipt_id = #{referReceiptId,jdbcType=INTEGER} And
      ti.refer_receipt_type = #{referReceiptType,jdbcType=TINYINT}
      <if test="receiptType != null">
        AND th.receipt_type = #{receiptType,jdbcType=TINYINT}
    </if>
  </update>
  <select id="selectByDate" parameterType="java.util.Map" resultMap="BaseResultMap">
    select 
	    ri.item_id, ri.stock_task_id, ri.stock_task_rid, ri.stock_task_req_id, ri.stock_task_req_rid, ri.status, 
	    ri.wh_id, ri.fty_id, ri.location_id, ri.mat_id, ri.unit_id, ri.batch, ri.stock_task_qty, ri.qty, ri.is_delete, 
	    ri.create_time, ri.modify_time, ri.mat_doc_id, ri.mat_doc_rid, ri.take_delivery_date, ri.validity_time, 
	    ri.weight, ri.unit_weight, ri.spec_stock, ri.spec_stock_code, ri.spec_stock_name,pt.sn_used mat_store_type,ri.before_task_id,ri.package_type_id,
		rh.receipt_type,ri.refer_receipt_code,ri.refer_receipt_id,ri.refer_receipt_rid,ri.refer_receipt_type
    from biz_stock_task_item_cw ri
    
    INNER JOIN dic_package_type pt on pt.package_type_id = ri.package_type_id 
    INNER  JOIN biz_stock_task_head_cw rh on ri.stock_task_id = rh.stock_task_id
    where ri.is_delete = 0 and rh.is_delete = 0
    <if test="createTime != null">
       and ri.create_time > #{createTime}
    </if>
     
  </select>
  
  
</mapper>