<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.inossem.wms.dao.stock.StockBatchMapper">
    <resultMap id="BaseResultMap" type="com.inossem.wms.model.stock.StockBatch">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="mat_id" jdbcType="INTEGER" property="matId"/>
        <result column="location_id" jdbcType="INTEGER" property="locationId"/>
        <result column="batch" jdbcType="BIGINT" property="batch"/>
        <result column="create_user" jdbcType="VARCHAR" property="createUser"/>
        <result column="qty" jdbcType="DECIMAL" property="qty"/>
        <result column="status" jdbcType="TINYINT" property="status"/>
        <result column="stock_type_id" jdbcType="TINYINT" property="stockTypeId"/>
        <result column="spec_stock" jdbcType="VARCHAR" property="specStock"/>
        <result column="spec_stock_code" jdbcType="VARCHAR" property="specStockCode"/>
        <result column="spec_stock_name" jdbcType="VARCHAR" property="specStockName"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime"/>
        <result column="erp_batch" jdbcType="VARCHAR" property="erpBatch"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, mat_id, location_id, batch, create_user, qty, status, spec_stock, spec_stock_code, stock_type_id,
    spec_stock_name, create_time, modify_time
  </sql>

    <select id="selectBatchListToBegin" resultMap="BaseResultMap">
  	SELECT 
  		batch.mat_id,
		batch.location_id,
		sum(any_value(batch.qty)) as qty,
		batch.stock_type_id,
		any_value(batch.status) as status,
		bm.erp_batch
  	from stock_batch batch
		inner join dic_stock_location sl on batch.location_id = sl.location_id
    inner join dic_factory f on f.fty_id=sl.fty_id
		inner join batch_material bm on bm.mat_id = batch.mat_id and bm.batch = batch.batch and bm.fty_id = sl.fty_id
		and (batch.spec_stock !='J' or(batch.spec_stock ='J'and batch.qty >0) ) and batch.status in (1,4)
	group by batch.`mat_id`,batch.`location_id`,bm.erp_batch,batch.stock_type_id
  </select>

    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from stock_batch
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from stock_batch
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.inossem.wms.model.stock.StockBatch">
    insert into stock_batch (id, mat_id,
      location_id, batch, create_user, 
      qty, status, spec_stock, 
      spec_stock_code, spec_stock_name, create_time, 
      modify_time)
    values (#{id,jdbcType=INTEGER}, #{matId,jdbcType=INTEGER}, 
      #{locationId,jdbcType=INTEGER}, #{batch,jdbcType=BIGINT}, #{createUser,jdbcType=VARCHAR}, 
      #{qty,jdbcType=DECIMAL}, #{status,jdbcType=TINYINT}, #{specStock,jdbcType=VARCHAR}, 
      #{specStockCode,jdbcType=VARCHAR}, #{specStockName,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{modifyTime,jdbcType=TIMESTAMP})
  </insert>
    <insert id="insertSelective" parameterType="com.inossem.wms.model.stock.StockBatch">
        insert into
        <choose>
            <when test="isUrgent == null ">stock_batch</when>
            <when test="isUrgent != null">stock_batch_urgent</when>
        </choose>
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="matId != null">
                mat_id,
            </if>
            <if test="locationId != null">
                location_id,
            </if>
            <if test="batch != null">
                batch,
            </if>
            <if test="createUser != null">
                create_user,
            </if>
            <if test="qty != null">
                qty,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="specStock != null">
                spec_stock,
            </if>
            <if test="specStockCode != null">
                spec_stock_code,
            </if>
            <if test="specStockName != null">
                spec_stock_name,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="modifyTime != null">
                modify_time,
            </if>
            <if test="stockTypeId != null">
                stock_type_id,
            </if>
            <if test="urgentSynStatus != null">
                urgent_syn_status,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="matId != null">
                #{matId,jdbcType=INTEGER},
            </if>
            <if test="locationId != null">
                #{locationId,jdbcType=INTEGER},
            </if>
            <if test="batch != null">
                #{batch,jdbcType=BIGINT},
            </if>
            <if test="createUser != null">
                #{createUser,jdbcType=VARCHAR},
            </if>
            <if test="qty != null">
                #{qty,jdbcType=DECIMAL},
            </if>
            <if test="status != null">
                #{status,jdbcType=TINYINT},
            </if>
            <if test="specStock != null">
                #{specStock,jdbcType=VARCHAR},
            </if>
            <if test="specStockCode != null">
                #{specStockCode,jdbcType=VARCHAR},
            </if>
            <if test="specStockName != null">
                #{specStockName,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="modifyTime != null">
                #{modifyTime,jdbcType=TIMESTAMP},
            </if>
            <if test="stockTypeId != null">
                #{stockTypeId,jdbcType=INTEGER},
            </if>
            <if test="urgentSynStatus != null">
                #{urgentSynStatus,jdbcType=TINYINT},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.inossem.wms.model.stock.StockBatch">
        update stock_batch
        <set>
            <if test="matId != null">
                mat_id = #{matId,jdbcType=INTEGER},
            </if>
            <if test="locationId != null">
                location_id = #{locationId,jdbcType=INTEGER},
            </if>
            <if test="batch != null">
                batch = #{batch,jdbcType=BIGINT},
            </if>
            <if test="createUser != null">
                create_user = #{createUser,jdbcType=VARCHAR},
            </if>
            <if test="qty != null">
                qty = #{qty,jdbcType=DECIMAL},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=TINYINT},
            </if>
            <if test="specStock != null">
                spec_stock = #{specStock,jdbcType=VARCHAR},
            </if>
            <if test="specStockCode != null">
                spec_stock_code = #{specStockCode,jdbcType=VARCHAR},
            </if>
            <if test="specStockName != null">
                spec_stock_name = #{specStockName,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="modifyTime != null">
                modify_time = #{modifyTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.inossem.wms.model.stock.StockBatch">
    update stock_batch
    set mat_id = #{matId,jdbcType=INTEGER},
      location_id = #{locationId,jdbcType=INTEGER},
      batch = #{batch,jdbcType=BIGINT},
      create_user = #{createUser,jdbcType=VARCHAR},
      qty = #{qty,jdbcType=DECIMAL},
      status = #{status,jdbcType=TINYINT},
      spec_stock = #{specStock,jdbcType=VARCHAR},
      spec_stock_code = #{specStockCode,jdbcType=VARCHAR},
      spec_stock_name = #{specStockName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <select id="selectByUniqueKey" parameterType="com.inossem.wms.model.key.StockBatchKey" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        <choose>
            <when test="isUrgent == null ">stock_batch</when>
            <when test="isUrgent != null">stock_batch_urgent</when>
        </choose>

        WHERE mat_id = #{matId,jdbcType=VARCHAR}
        and location_id = #{locationId,jdbcType=VARCHAR}
        and batch = #{batch,jdbcType=BIGINT}
        and status = #{status,jdbcType=TINYINT}
        And stock_type_id = #{stockTypeId}
        <if test="urgentSynStatus != null">
            AND urgent_syn_status = #{urgentSynStatus,jdbcType=TINYINT}
        </if>
    </select>
    <delete id="deleteByByUniqueKey" parameterType="com.inossem.wms.model.key.StockBatchKey">
        DELETE FROM
        <choose>
            <when test="isUrgent == null ">stock_batch</when>
            <when test="isUrgent != null">stock_batch_urgent</when>
        </choose>
        WHERE mat_id = #{matId,jdbcType=VARCHAR}
        and location_id = #{locationId,jdbcType=VARCHAR}
        and batch = #{batch,jdbcType=BIGINT}
        and status = #{status,jdbcType=TINYINT}
        And stock_type_id = #{stockTypeId}
        <if test="urgentSynStatus != null">
            AND urgent_syn_status = #{urgentSynStatus,jdbcType=TINYINT}
        </if>
    </delete>
    <update id="updateQty" parameterType="com.inossem.wms.model.stock.StockBatch">
        UPDATE
        <choose>
            <when test="isUrgent == null ">stock_batch</when>
            <when test="isUrgent != null">stock_batch_urgent</when>
        </choose>
        SET qty = #{qty,jdbcType=DECIMAL}
        WHERE mat_id = #{matId,jdbcType=VARCHAR}
        AND location_id = #{locationId,jdbcType=VARCHAR}
        AND batch = #{batch,jdbcType=BIGINT}
        AND status = #{status,jdbcType=TINYINT}
        And stock_type_id = #{stockTypeId}
        <if test="urgentSynStatus != null">
            AND urgent_syn_status = #{urgentSynStatus,jdbcType=TINYINT}
        </if>
    </update>
    <select id="selectStockBatchByCondition" parameterType="java.util.Map"
            resultType="com.inossem.wms.model.vo.StockBatchVo">
        SELECT
        b.mat_id matId,
        b.location_id locationId,
        l.fty_id ftyId,
        ANY_VALUE(m.mat_code) matCode,
        ANY_VALUE(m.mat_name) matName,
        ANY_VALUE(m.asset_attr) assetAttr,
        MIN(b.create_user) createUser,
        SUM(b.qty) qty,
        MAX(b.create_time) createTime,
        MAX(b.modify_time) modifyTime,
        MIN(b.spec_stock) specStock,
        MIN(b.spec_stock_code) specStockCode,
        MIN(b.spec_stock_name) specStockName,
        MIN(b.status) status,
        ANY_VALUE(u.unit_id) unitId,
        ANY_VALUE(u.unit_code) unitCode,
        ANY_VALUE(u.name_zh) unitName,
        ANY_VALUE(l.location_code) locationCode,
        ANY_VALUE(l.location_name) locationName,
        ANY_VALUE(u.decimal_place) decimalPlace,
        MAX(w.plan_output) isFocusBatch,
        MIN(mg.mat_group_name) matGroupName
        FROM stock_batch b
        INNER JOIN dic_material m ON b.mat_id = m.mat_id
        AND b.location_id = #{locationId,jdbcType=VARCHAR}
        <if test="matType != null">
            AND m.mat_type = #{matType,jdbcType=VARCHAR}
        </if>
        <if test="matCode != null">
            AND m.mat_code = #{matCode,jdbcType=VARCHAR}
        </if>
        <if test="condition != null">
            AND (m.mat_code LIKE CONCAT('%',#{condition},'%')
            OR m.mat_name LIKE CONCAT('%',#{condition},'%')
            )
        </if>
        <if test="specStock != null">
            AND b.spec_stock = #{specStock,jdbcType=VARCHAR}
        </if>
        INNER JOIN dic_stock_location l on l.location_id = b.location_id
        LEFT JOIN dic_material_group mg ON mg.mat_group_id = m.mat_group_id
        LEFT JOIN dic_unit u on u.unit_id = m.unit_id
        LEFT JOIN dic_warehouse w on w.wh_id = l.wh_id AND w.is_delete = 0
        GROUP BY b.mat_id,b.location_id,l.fty_id
    </select>
    <!-- 调拨检索批次库存物料 库存 -->
    <select id="getMatNumGroupByMatOnPaging" parameterType="java.util.Map"
            resultType="com.inossem.wms.model.vo.StockBatchVo">
        SELECT
        mb.mat_id matId,
        mk.mat_code matCode,
        SUM(mb.qty) qty,
        mk.mat_name matName,
        mk.unit_id unitId,
        t.unit_code unitCode,
        t.name_zh unitName
        FROM
        stock_batch mb
        INNER JOIN dic_material mk ON mk.mat_id = mb.mat_id
        <if test="locationId != null">
            AND mb.location_id = #{locationId, jdbcType=INTEGER}
        </if>
        <if test="status != null">
            AND mb.status = #{status, jdbcType=TINYINT}
        </if>
        <if test="matId != null">
            AND mb.mat_id = #{matId, jdbcType=INTEGER}
        </if>
        <if test="condition != null">
            AND (mk.mat_code LIKE CONCAT('%',#{condition},'%' ) OR mk.mat_name like CONCAT('%',#{condition},'%' ))
        </if>
        INNER JOIN dic_unit t ON t.unit_id = mk.unit_id
        INNER JOIN dic_stock_location sl on sl.location_id = mb.location_id
        <if test="ftyId != null">
            AND sl.fty_id = #{ftyId, jdbcType=INTEGER}
        </if>
        GROUP BY mb.mat_id, mk.mat_name, mk.unit_id, t.name_zh
        <!--LIMIT 100;-->
    </select>
    <!-- 批次库存查询 刘宇 2018.02.07 -->
    <select id="selectStockBatchOnPaging" parameterType="java.util.Map" resultType="java.util.Map">
        select stock.id
        ,IFNULL(stock.mat_id,'') mat_id
        ,IFNULL(m.mat_code,'') mat_code
        ,IFNULL(m.mat_name,'') mat_name
        ,IFNULL(m.samp_name,'') samp_name
        ,IFNULL(m.specification,'') specification
        ,IFNULL(m.standard,'') standard
        ,IFNULL(dmg.mat_group_code,'') mat_group_code
        ,IFNULL(stock.batch,'') batch
        ,IFNULL(bm.erp_batch,'') erp_batch
        ,IFNULL(bm.product_batch,'') product_batch
        ,IFNULL(bm.quality_batch,'') quality_batch
        ,IFNULL(bm.spec_stock_name,'') spec_stock_name
        ,IFNULL(bm.package_type_id,'') package_type_id
        ,IFNULL(purchase_order_code,'') purchase_order_code
        ,date_format(stock.create_time,'%Y-%m-%d') input_date
        ,IFNULL(pt.package_standard_ch,'') package_standard_ch
        ,IFNULL(stock.qty, 0) * (CASE WHEN u.unit_code = 'KG' THEN 1 ELSE 1000 END) qty
        ,IFNULL(pt.package_type_code,'') package_type_code
        ,IFNULL(pt.package_type_name,'') package_type_name
        ,IFNULL(stock.qty,0) stock_qty
        ,IFNULL(m.unit_id,'') unit_id
        ,IFNULL(m.shelf_life,0) shelf_life
        ,IFNULL(u.unit_code,'') unit_code
        ,IFNULL(u.name_zh,'') unit_name
        ,IFNULL(u.decimal_place,0) decimal_place
        ,IFNULL(stock.location_id,'') location_id
        ,IFNULL(location.fty_id,'') fty_id
        ,IFNULL(factory.fty_code,'') fty_code
        ,IFNULL(factory.fty_name,'') fty_name
        ,IFNULL(location.location_code,'') location_code
        ,IFNULL(location.location_name,'') location_name
        ,IFNULL(location.wh_id,'') wh_id
        ,IFNULL(pt.sn_used,'') mat_store_type
        ,case when stock.status = 1 then '非限制库存'
        when stock.status = 4 then '冻结库存'
        when stock.status = 5 then '已售未提库存'
        end status_name
        ,IFNULL(stock.reason,'') reason
        <choose>
            <when test="isUrgent == null ">
                ,IFNULL(st.stock_type_name,'') stock_type_name
            </when>
            <when test="isUrgent != null">
                , '临时库存' stock_type_name
            </when>
        </choose>
        ,stock.stock_type_id
        ,IFNULL(ct.class_type_name,'') class_type_name
        ,IFNULL(i.installation_name,'') installation_name
        ,IFNULL(pl.product_line_name,'') product_line_name
        from
        <choose>
            <when test="isUrgent == null ">stock_batch</when>
            <when test="isUrgent != null">stock_batch_urgent</when>
        </choose>
        stock
        inner join dic_stock_location location on stock.location_id=location.location_id
        <if test="status != null and status !=''">
            AND stock.status = #{status,jdbcType=VARCHAR}
        </if>
        <if test="locationId != null and locationId !=''">
            AND stock.location_id = #{locationId,jdbcType=VARCHAR}
        </if>
        <if test="ftyId != null and ftyId !=''">
            AND location.fty_id = #{ftyId,jdbcType=VARCHAR}
        </if>
        <if test="whId != null and whId !=''">
            AND location.wh_id = #{whId,jdbcType=VARCHAR}
        </if>
        <if test="isUrgent != null">
            and stock.urgent_syn_status = 1
        </if>
        <if test="inputDateBegin != null">
            AND stock.create_time <![CDATA[>=]]> #{inputDateBegin,jdbcType=TIMESTAMP}
        </if>
        <if test="inputDateEnd != null">
            AND stock.create_time <![CDATA[<=]]> #{inputDateEnd,jdbcType=TIMESTAMP}
        </if>
        <if test="stockTypeId != null and stockTypeId !=''">
            and stock.stock_type_id = #{stockTypeId}
        </if>
        inner join batch_material bm on stock.batch = bm.batch and stock.mat_id = bm.mat_id and location.fty_id =
        bm.fty_id
        <if test="productBatch != null and productBatch !=''">
            AND bm.product_batch = #{productBatch,jdbcType=VARCHAR}
        </if>
        <if test="erpBatch != null and erpBatch !=''">
            AND bm.erp_batch = #{erpBatch,jdbcType=VARCHAR}
        </if>
        inner join dic_package_type pt on pt.package_type_id = bm.package_type_id
        inner join dic_material m on m.mat_id = stock.mat_id
        <if test="matName != null and matName !=''">
            AND m.mat_name LIKE CONCAT('%',#{matName,jdbcType=VARCHAR},'%')
        </if>
        <if test="matCode != null and matCode !=''">
            AND (
            <foreach collection="utilMatCodes" item="item" index="index" separator="or">
                (m.mat_code BETWEEN #{item.begin} AND #{item.end}
                AND CHAR_LENGTH(m.mat_code)
                IN
                (
                CHAR_LENGTH(#{item.begin}),CHAR_LENGTH(#{item.end}))
                )
            </foreach>
            OR m.mat_code IN
            <foreach collection="utilMatCodes.get(0).strings" item="string" index="index" open="(" close=")"
                     separator=",">
                #{string}
            </foreach>
            )
        </if>
        inner join dic_material_group dmg on m.mat_group_id =dmg.mat_group_id
        <if test="matGroupCode != null and matGroupCode !='' ">
            and dmg.mat_group_code= #{matGroupCode,jdbcType=VARCHAR}
        </if>
        inner join dic_unit u on u.unit_id = m.unit_id
        inner join dic_factory factory on location.fty_id = factory.fty_id
        inner join stock_type st on st.stock_type_id=stock.stock_type_id
        left join dic_class_type ct on ct.class_type_id = bm.class_type_id
        left join dic_installation i on i.installation_id = bm.installation_id
        left join dic_product_line pl on pl.product_line_id = bm.product_line_id
        order by stock.mat_id
    </select>

    <select id="selectAllQty" resultType="decimal" parameterType="map">
        select
        sum(IFNULL(stock.qty, 0) * (CASE WHEN u.unit_code = 'KG' THEN 1 ELSE 1000 END)) qty
        from
        <choose>
            <when test="isUrgent == null ">stock_batch</when>
            <when test="isUrgent != null">stock_batch_urgent</when>
        </choose>
        stock
        inner join dic_stock_location location on stock.location_id=location.location_id
        <if test="status != null and status !=''">
            AND stock.status = #{status,jdbcType=VARCHAR}
        </if>
        <if test="locationId != null and locationId !=''">
            AND stock.location_id = #{locationId,jdbcType=VARCHAR}
        </if>
        <if test="ftyId != null and ftyId !=''">
            AND location.fty_id = #{ftyId,jdbcType=VARCHAR}
        </if>
        <if test="whId != null and whId !=''">
            AND location.wh_id = #{whId,jdbcType=VARCHAR}
        </if>
        <if test="isUrgent != null">
            and stock.urgent_syn_status = 1
        </if>
        <if test="inputDateBegin != null">
            AND stock.create_time <![CDATA[>=]]> #{inputDateBegin,jdbcType=TIMESTAMP}
        </if>
        <if test="inputDateEnd != null">
            AND stock.create_time <![CDATA[<=]]> #{inputDateEnd,jdbcType=TIMESTAMP}
        </if>
        <if test="stockTypeId != null and stockTypeId !=''">
            and stock.stock_type_id = #{stockTypeId}
        </if>
        inner join batch_material bm on stock.batch = bm.batch and stock.mat_id = bm.mat_id and location.fty_id =
        bm.fty_id
        <if test="productBatch != null and productBatch !=''">
            AND bm.product_batch = #{productBatch,jdbcType=VARCHAR}
        </if>
        <if test="erpBatch != null and erpBatch !=''">
            AND bm.erp_batch = #{erpBatch,jdbcType=VARCHAR}
        </if>
        inner join dic_package_type pt on pt.package_type_id = bm.package_type_id
        inner join dic_material m on m.mat_id = stock.mat_id
        <if test="matName != null and matName !=''">
            AND m.mat_name LIKE CONCAT('%',#{matName,jdbcType=VARCHAR},'%')
        </if>
        <if test="matCode != null and matCode !=''">
            AND (
            <foreach collection="utilMatCodes" item="item" index="index" separator="or">
                (m.mat_code BETWEEN #{item.begin} AND #{item.end}
                AND CHAR_LENGTH(m.mat_code)
                IN
                (
                CHAR_LENGTH(#{item.begin}),CHAR_LENGTH(#{item.end}))
                )
            </foreach>
            OR m.mat_code IN
            <foreach collection="utilMatCodes.get(0).strings" item="string" index="index" open="(" close=")"
                     separator=",">
                #{string}
            </foreach>
            )
        </if>
        inner join dic_material_group dmg on m.mat_group_id =dmg.mat_group_id
        <if test="matGroupCode != null and matGroupCode !='' ">
            and dmg.mat_group_code= #{matGroupCode,jdbcType=VARCHAR}
        </if>
        inner join dic_unit u on u.unit_id = m.unit_id
        inner join dic_factory factory on location.fty_id = factory.fty_id
        inner join stock_type st on st.stock_type_id=stock.stock_type_id
        left join dic_class_type ct on ct.class_type_id = bm.class_type_id
        left join dic_installation i on i.installation_id = bm.installation_id
        left join dic_product_line pl on pl.product_line_id = bm.product_line_id
    </select>

    <!-- 库龄考核分页查询 刘宇 2018.02.25 -->
    <select id="selectStockDaysOnPaging" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT
        DATE_FORMAT(#{checkDate},'%Y-%m-%d') check_date,
        dm.mat_id,
        dm.mat_code,
        dm.mat_name,
        du.name_zh,
        bm.fty_id,
        df.fty_code,
        df.fty_name,
        sb.location_id,
        dsl.location_code,
        dsl.location_name,
        sb.batch,
        date_format(sb.create_time,'%Y-%m-%d') in_date,
        TO_DAYS(#{checkDate}) - TO_DAYS(sb.create_time) stcok_days,
        sb.qty,
        sb.spec_stock,
        sb.spec_stock_name,
        bms.batch_spec_value,
        bm.demand_dept
        FROM stock_batch sb
        INNER JOIN batch_material bm ON sb.mat_id = bm.mat_id AND sb.batch = bm.batch
        <if test="ftyId != null and ftyId !=''">
            AND bm.fty_id= #{ftyId,jdbcType=VARCHAR}
        </if>
        <if test="locationId != null and locationId !=''">
            AND sb.location_id= #{locationId,jdbcType=VARCHAR}
        </if>
        AND sb.spec_stock != 'k'
        INNER JOIN dic_material dm on dm.mat_id = sb.mat_id
        AND dm.mat_type = 'ZWL'
        INNER JOIN dic_stock_location dsl ON dsl.location_id = sb.location_id
        AND dsl.status = 1
        INNER JOIN dic_factory df ON df.fty_id = bm.fty_id
        LEFT JOIN dic_unit du ON du.unit_id = dm.unit_id
        LEFT JOIN batch_material_spec bms ON bms.mat_id = sb.mat_id AND bms.batch = sb.batch
        WHERE bms.batch_spec_code = 'A02'
        AND (bms.batch_spec_value = '1' OR bms.batch_spec_value ='' OR bms.batch_spec_value IS NULL)
        <if test="(dateEnd != null and dateEnd !='') and (dateBegin != null and dateBegin !='')">
            AND DATE_FORMAT(sb.create_time,'%Y-%m-%d') &gt;= DATE_FORMAT(date_sub(#{checkDate}, interval #{dateEnd}
            day),'%Y-%m-%d')
            AND DATE_FORMAT(sb.create_time,'%Y-%m-%d') &lt;= DATE_FORMAT(date_sub(#{checkDate}, interval #{dateBegin}
            day),'%Y-%m-%d')
        </if>
        <if test="(dateEnd != null and dateEnd !='') and (dateBegin == null or dateBegin =='')">
            AND DATE_FORMAT(sb.create_time,'%Y-%m-%d') = DATE_FORMAT(date_sub(#{checkDate}, interval #{dateEnd}
            day),'%Y-%m-%d')
        </if>
        <if test="(dateEnd == null or dateEnd =='') and (dateBegin != null and dateBegin !='')">
            AND DATE_FORMAT(sb.create_time,'%Y-%m-%d') = DATE_FORMAT(date_sub(#{checkDate}, interval #{dateBegin}
            day),'%Y-%m-%d')
        </if>

    </select>
    <select id="queryStockDaysOnPaging" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT
        DATE_FORMAT(#{checkDate},'%Y-%m-%d') check_date,
        dm.mat_id,
        dm.mat_code,
        dm.mat_name,
        du.name_zh,
        bm.product_batch,
        df.fty_id,
        df.fty_code,
        df.fty_name,
        sb.location_id,
        dsl.location_code,
        dsl.location_name,
        date_format(sb.create_time,'%Y-%m-%d') in_date,
        TO_DAYS(#{checkDate}) - TO_DAYS(sb.create_time) stcok_days,
        sb.qty
        FROM stock_batch sb
        INNER JOIN batch_material bm ON sb.mat_id = bm.mat_id AND sb.batch = bm.batch
        <if test="ftyId!=null and ftyId!=''">
            and bm.fty_id= #{ftyId,jdbcType=VARCHAR}
        </if>
        INNER JOIN dic_material dm on dm.mat_id = sb.mat_id
        INNER JOIN dic_stock_location dsl ON dsl.location_id = sb.location_id
        INNER JOIN dic_factory df ON df.fty_id = bm.fty_id
        LEFT JOIN dic_unit du ON du.unit_id = dm.unit_id
        WHERE
        1=1

        <if test="locationId != null and locationId !=''">
            AND sb.location_id= #{locationId,jdbcType=VARCHAR}
        </if>
        <if test="whId != null and whId !=''">
            AND dsl.wh_id= #{whId,jdbcType=VARCHAR}
        </if>

        <if test="(dateEnd != null and dateEnd !='') and (dateBegin != null and dateBegin !='')">
            AND DATE_FORMAT(sb.create_time,'%Y-%m-%d') &gt;= DATE_FORMAT(date_sub(#{checkDate}, interval #{dateEnd}
            day),'%Y-%m-%d')
            AND DATE_FORMAT(sb.create_time,'%Y-%m-%d') &lt;= DATE_FORMAT(date_sub(#{checkDate}, interval #{dateBegin}
            day),'%Y-%m-%d')
        </if>
        <if test="(dateEnd != null and dateEnd !='') and (dateBegin == null or dateBegin =='')">
            AND DATE_FORMAT(sb.create_time,'%Y-%m-%d') = DATE_FORMAT(date_sub(#{checkDate}, interval #{dateEnd}
            day),'%Y-%m-%d')
        </if>
        <if test="(dateEnd == null or dateEnd =='') and (dateBegin != null and dateBegin !='')">
            AND DATE_FORMAT(sb.create_time,'%Y-%m-%d') = DATE_FORMAT(date_sub(#{checkDate}, interval #{dateBegin}
            day),'%Y-%m-%d')
        </if>
        order by sb.create_time desc
    </select>


    <select id="selectByUniqueKeys" parameterType="java.util.List" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from stock_batch
        WHERE 1 = 1 AND
        <foreach item="item" index="index" collection="list" open="(" separator="or" close=")">
            ( mat_id = #{item.matId}
            AND location_id = #{item.locationId}
            AND batch = #{item.batch}
            )
        </foreach>

    </select>

    <select id="getStockDaysList" resultType="map" parameterType="map">
        SELECT
        wh.wh_id,
        wh.wh_code,
        wh.wh_name,
        mg.mat_group_code,
        mg.mat_group_name,
        m.mat_code,
        m.mat_name,
        u.name_zh unit_name,
        corp.board_id,
        board.board_name,
        corp.corp_code,
        corp.corp_name,
        f.fty_code,
        f.fty_name,
        l.location_code,
        l.location_name,
        stockb.batch,
        DATE_FORMAT(stockb.create_time,'%Y-%m-%d') input_date,
        TO_DAYS(SYSDATE()) - TO_DAYS(stockb.create_time) days,
        stockb.qty,

        CASE WHEN TO_DAYS(SYSDATE()) - TO_DAYS(stockb.create_time) &gt; 365 THEN '1年以上'
        WHEN TO_DAYS(SYSDATE()) - TO_DAYS(stockb.create_time) &lt;= 365 AND to_days(SYSDATE()) -
        TO_DAYS(stockb.create_time) &gt; 183 THEN '6个月至1年'
        WHEN TO_DAYS(SYSDATE()) - TO_DAYS(stockb.create_time) &lt;= 183 AND to_days(SYSDATE()) -
        TO_DAYS(stockb.create_time) &gt; 122 THEN '4个月至6个月'
        WHEN TO_DAYS(SYSDATE()) - TO_DAYS(stockb.create_time) &lt;= 122 THEN '4个月以内' END day_type,
        CASE WHEN stockb.status = 1 THEN '非限制库存'
        WHEN stockb.status = 2 THEN '在途库存'
        WHEN stockb.status = 3 THEN '质量检验库存'
        WHEN stockb.status = 4 THEN '冻结的库存' END status_name,
        p.price,
        CAST( p.price * stockb.qty AS DECIMAL(18,2)) amount
        FROM stock_batch AS stockb
        INNER JOIN dic_stock_location AS l ON stockb.location_id = l.location_id
        <if test="locationId != null and locationId !=''">
            AND stockb.location_id = #{locationId}
        </if>
        INNER JOIN dic_material AS m ON stockb.mat_id = m.mat_id
        INNER JOIN dic_factory AS f on l.fty_id = f.fty_id
        <if test="ftyId != null and ftyId !=''">
            AND l.fty_id = #{ftyId}
        </if>
        INNER JOIN dic_corp AS corp on f.corp_id = corp.corp_id
        <if test="corpId != null and corpId !=''">
            AND IFNULL(corp.corp_id,'') = #{corpId}
        </if>
        INNER JOIN dic_board AS board on corp.board_id = board.board_id
        <if test="boardId != null and boardId !=''">
            AND IFNULL(board.board_id,'') = #{boardId}
        </if>
        LEFT JOIN dic_material_group mg on m.mat_group_id = mg.mat_group_id
        LEFT JOIN buf_factory_mat_price p on p.fty_id =l.fty_id AND stockb.mat_id = p.mat_id
        LEFT JOIN dic_unit u on m.unit_id = u.unit_id
        inner join dic_warehouse wh on wh.wh_id=l.wh_id
        <if test="whId!=null and whId!=''">
            and wh.wh_id=#{whId}
        </if>

        ORDER BY corp.board_id,corp.corp_id,l.fty_id,stockb.location_id
    </select>
      <!--库存积压  start  lgm -->
  <select id="selectFirstViewStockDays" parameterType="map" resultType="map">
  
	  select  
	  any_value( t.wh_id) wh_id,
	  any_value( t.wh_code) wh_code,
	  any_value( t.wh_name) wh_name,	 
	   t.day_type  day_type,
	   <if test="type!=null and type==1">
	    sum(t.qty) qty
	   </if>	   
	   <if test="type!=null and type==2">
	   cast(sum(t.amount)/10000 as decimal(18,2))  qty
	   </if>	  
	 
			from
			(
			SELECT  
		      wh.wh_id,
	        wh.wh_code,
	        wh.wh_name, 				  		 
				  stockb.qty*(case when u.unit_code = 'KG' then 1 else 1000 end) qty,
				
			      CASE WHEN TO_DAYS(SYSDATE()) - TO_DAYS(bm.create_time) &gt; 365 THEN '1年以上'
			    	   WHEN TO_DAYS(SYSDATE()) - TO_DAYS(bm.create_time) &lt;= 365 AND to_days(SYSDATE()) - TO_DAYS(bm.create_time) &gt; 183 THEN '6个月至1年'
			    	   WHEN TO_DAYS(SYSDATE()) - TO_DAYS(bm.create_time) &lt;= 183 AND to_days(SYSDATE()) - TO_DAYS(bm.create_time) &gt; 122 THEN '4个月至6个月'
			    	   WHEN TO_DAYS(SYSDATE()) - TO_DAYS(bm.create_time) &lt;= 122 THEN '4个月以内' END day_type,
			     
			      p.price,
			     CAST( ifnull(p.price,0) * stockb.qty  AS  DECIMAL(18,2))  amount     
			FROM stock_batch AS stockb
			INNER JOIN dic_stock_location AS l ON stockb.location_id = l.location_id 
			
	     inner join batch_material bm on bm.mat_id=stockb.mat_id and bm.batch=stockb.batch and bm.fty_id=l.fty_id
	
			INNER JOIN dic_material AS m ON stockb.mat_id = m.mat_id		
		  	INNER JOIN dic_factory AS f on l.fty_id = f.fty_id 
	
			INNER JOIN dic_corp AS corp on f.corp_id = corp.corp_id
	
			INNER JOIN dic_board AS board on corp.board_id = board.board_id
	
		  	LEFT JOIN dic_material_group mg on m.mat_group_id = mg.mat_group_id
		  	LEFT JOIN buf_factory_mat_price p on p.fty_id =l.fty_id AND stockb.mat_id = p.mat_id
	    	LEFT JOIN dic_unit u on m.unit_id = u.unit_id
		    inner join dic_warehouse wh on wh.wh_id=l.wh_id
	      where f.fty_type=2  and stockb.status &lt;&gt;5
	      <if test="bordId!=null and bordId!=''">
	      and board.board_id=#{bordId}
	      </if>
	     <if test="corpId!=null and corpId!=''">
	      and corp.corp_id=#{corpId}
	      </if>		
	      <if test="whId!=null and whId!=''">
	      and  wh.wh_id=#{whId}
	      </if>    
	  
	) t
	 group by t.day_type
	   <if test="whId!=null and whId!=''">
	     ,t.wh_id
	   </if>  
  
  </select>
  
  
  <select id="selectSecondViewStockDays" parameterType="map" resultType="map">
    
	 select  
	  any_value( t.wh_id) wh_id,
	  any_value( t.wh_code) wh_code,
	  any_value( t.wh_name) wh_name,	
	   any_value(t.day_type) day_type,
	    <if test="type!=null and type==1">
	    sum(t.qty) qty
	   </if>	   
	   <if test="type!=null and type==2">
	   cast(sum(t.amount)/10000 as decimal(18,2))  qty
	   </if>
	   from
    (
      SELECT  
	      wh.wh_id,
        wh.wh_code,
        wh.wh_name, 
		  		 
			  stockb.qty*(case when u.unit_code = 'KG' then 1 else 1000 end) qty,
			
		       CASE WHEN TO_DAYS(SYSDATE()) - TO_DAYS(bm.create_time) &gt; 365 THEN '1年以上'
			    	   WHEN TO_DAYS(SYSDATE()) - TO_DAYS(bm.create_time) &lt;= 365 AND to_days(SYSDATE()) - TO_DAYS(bm.create_time) &gt; 183 THEN '6个月至1年'
			    	   WHEN TO_DAYS(SYSDATE()) - TO_DAYS(bm.create_time) &lt;= 183 AND to_days(SYSDATE()) - TO_DAYS(bm.create_time) &gt; 122 THEN '4个月至6个月'
			    	   WHEN TO_DAYS(SYSDATE()) - TO_DAYS(bm.create_time) &lt;= 122 THEN '4个月以内' END day_type,    
    
		      p.price,
		      CAST( ifnull(p.price,0) * stockb.qty  AS  DECIMAL(18,2)) amount
		FROM stock_batch AS stockb
		INNER JOIN dic_stock_location AS l ON stockb.location_id = l.location_id 
      inner join batch_material bm on bm.mat_id=stockb.mat_id and bm.batch=stockb.batch and bm.fty_id=l.fty_id

		INNER JOIN dic_material AS m ON stockb.mat_id = m.mat_id		
	  	INNER JOIN dic_factory AS f on l.fty_id = f.fty_id 

		INNER JOIN dic_corp AS corp on f.corp_id = corp.corp_id

		INNER JOIN dic_board AS board on corp.board_id = board.board_id

	  	LEFT JOIN dic_material_group mg on m.mat_group_id = mg.mat_group_id
	  	LEFT JOIN buf_factory_mat_price p on p.fty_id =l.fty_id AND stockb.mat_id = p.mat_id
    	LEFT JOIN dic_unit u on m.unit_id = u.unit_id
	    inner join dic_warehouse wh on wh.wh_id=l.wh_id
        where f.fty_type=2 and stockb.status &lt;&gt;5
           <if test="bordId!=null and bordId!=''">
	      and board.board_id=#{bordId}
	      </if>
	     <if test="corpId!=null and corpId!=''">
	      and corp.corp_id=#{corpId}
	      </if>
	      <if test="whId!=null and whId!=''">
	     and wh.wh_id=#{whId}
	      </if> 
        <if test="searchType!=null and searchType==1">        
         HAVING day_type='1年以上'
        </if>
        
         <if test="searchType!=null and searchType==2">        
         HAVING day_type='6个月至1年'
        </if>
        
         <if test="searchType!=null and searchType==3">        
         HAVING day_type='4个月至6个月'
        </if>
        
         <if test="searchType!=null and searchType==4">        
         HAVING day_type='4个月以内'
        </if>	    
   
       ) t
      group by t.wh_id 
     order by qty desc
  
  </select>
  
  <select id="selectSecondViewTotalAmount" parameterType="map" resultType="map">
     select  
	  any_value( t.wh_id) wh_id,
	  any_value( t.wh_code) wh_code,
	  any_value( t.wh_name) wh_name,	
	   any_value(t.day_type) day_type,
	    <if test="type!=null and type==1">
	    sum(t.qty) qty
	   </if>	   
	   <if test="type!=null and type==2">
	   cast(sum(t.amount)/10000 as decimal(18,2))  qty
	   </if>
	   from
    (
      SELECT  
	      wh.wh_id,
        wh.wh_code,
        wh.wh_name, 
		  		 
			  stockb.qty*(case when u.unit_code = 'KG' then 1 else 1000 end) qty,
			
		       CASE WHEN TO_DAYS(SYSDATE()) - TO_DAYS(bm.create_time) &gt; 365 THEN '1年以上'
			    	   WHEN TO_DAYS(SYSDATE()) - TO_DAYS(bm.create_time) &lt;= 365 AND to_days(SYSDATE()) - TO_DAYS(bm.create_time) &gt; 183 THEN '6个月至1年'
			    	   WHEN TO_DAYS(SYSDATE()) - TO_DAYS(bm.create_time) &lt;= 183 AND to_days(SYSDATE()) - TO_DAYS(bm.create_time) &gt; 122 THEN '4个月至6个月'
			    	   WHEN TO_DAYS(SYSDATE()) - TO_DAYS(bm.create_time) &lt;= 122 THEN '4个月以内' END day_type,    
    
		      p.price,
		      CAST( ifnull(p.price,0) * stockb.qty  AS  DECIMAL(18,2)) amount
		FROM stock_batch AS stockb
		INNER JOIN dic_stock_location AS l ON stockb.location_id = l.location_id 
      inner join batch_material bm on bm.mat_id=stockb.mat_id and bm.batch=stockb.batch and bm.fty_id=l.fty_id

		INNER JOIN dic_material AS m ON stockb.mat_id = m.mat_id		
	  	INNER JOIN dic_factory AS f on l.fty_id = f.fty_id 

		INNER JOIN dic_corp AS corp on f.corp_id = corp.corp_id

		INNER JOIN dic_board AS board on corp.board_id = board.board_id

	  	LEFT JOIN dic_material_group mg on m.mat_group_id = mg.mat_group_id
	  	LEFT JOIN buf_factory_mat_price p on p.fty_id =l.fty_id AND stockb.mat_id = p.mat_id
    	LEFT JOIN dic_unit u on m.unit_id = u.unit_id
	    inner join dic_warehouse wh on wh.wh_id=l.wh_id
        where f.fty_type=2 and stockb.status &lt;&gt;5
           <if test="bordId!=null and bordId!=''">
	      and board.board_id=#{bordId}
	      </if>
	     <if test="corpId!=null and corpId!=''">
	      and corp.corp_id=#{corpId}
	      </if> 
	      
	      <if test="whId!=null and whId!=''">
	    and  wh.wh_id=#{whId}
	      </if>     	    
   
       ) t
      group by t.wh_id 
     order by qty desc
  
  </select>
  
  <select id="selectThirdViewStockDays" resultType="map" parameterType="map">
  
  select  
   any_value(t.wh_name) wh_name, 
   any_value(t.mat_id) mat_id,
   any_value (t.mat_code) mat_code,
   any_value (t.mat_name) mat_name,
   any_value(t.day_type) day_type,    
	    sum(t.qty) qty,  	  
	   cast(sum(t.amount)/10000 as decimal(18,2))  amount
	  
from
(
SELECT  
	      wh.wh_id,
        wh.wh_code,
        wh.wh_name, 
	      any_value(m.mat_id) mat_id,
			  any_value(m.mat_code) mat_code,
			  any_value(m.mat_name) mat_name,
			  		 
			  stockb.qty*(case when u.unit_code = 'KG' then 1 else 1000 end) qty,
			
		     CASE WHEN TO_DAYS(SYSDATE()) - TO_DAYS(bm.create_time) &gt; 365 THEN '1年以上'
			    	   WHEN TO_DAYS(SYSDATE()) - TO_DAYS(bm.create_time) &lt;= 365 AND to_days(SYSDATE()) - TO_DAYS(bm.create_time) &gt; 183 THEN '6个月至1年'
			    	   WHEN TO_DAYS(SYSDATE()) - TO_DAYS(bm.create_time) &lt;= 183 AND to_days(SYSDATE()) - TO_DAYS(bm.create_time) &gt; 122 THEN '4个月至6个月'
			    	   WHEN TO_DAYS(SYSDATE()) - TO_DAYS(bm.create_time) &lt;= 122 THEN '4个月以内' END day_type,
		     
    
		      p.price,
		     CAST( ifnull(p.price,0) * stockb.qty  AS  DECIMAL(18,2)) amount
		FROM stock_batch AS stockb
		INNER JOIN dic_stock_location AS l ON stockb.location_id = l.location_id 
     inner join batch_material bm on bm.mat_id=stockb.mat_id and bm.batch=stockb.batch and bm.fty_id=l.fty_id

		INNER JOIN dic_material AS m ON stockb.mat_id = m.mat_id		
	  	INNER JOIN dic_factory AS f on l.fty_id = f.fty_id 

		INNER JOIN dic_corp AS corp on f.corp_id = corp.corp_id

		INNER JOIN dic_board AS board on corp.board_id = board.board_id

	  	LEFT JOIN dic_material_group mg on m.mat_group_id = mg.mat_group_id
	  	LEFT JOIN buf_factory_mat_price p on p.fty_id =l.fty_id AND stockb.mat_id = p.mat_id
    	LEFT JOIN dic_unit u on m.unit_id = u.unit_id
	    inner join dic_warehouse wh on wh.wh_id=l.wh_id
      where f.fty_type=2 and stockb.status &lt;&gt;5
         <if test="bordId!=null and bordId!=''">
	      and board.board_id=#{bordId}
	      </if>
	     <if test="corpId!=null and corpId!=''">
	      and corp.corp_id=#{corpId}
	      </if>
        <if test="whId!=null and whId!=''">
          and wh.wh_id=#{whId}
        </if>
      
         <if test="serchType!=null and serchType==1">        
         HAVING day_type='1年以上'
        </if>
        
         <if test="serchType!=null and serchType==2">        
         HAVING day_type='6个月至1年'
        </if>
        
         <if test="serchType!=null and serchType==3">        
         HAVING day_type='4个月至6个月'
        </if>
        
         <if test="serchType!=null and serchType==4">        
         HAVING day_type='4个月以内'
        </if>
	      
    ) t
    group by t.wh_id, t.mat_id
    <if test="type!=null and type==1">
    order by qty desc 
    </if>
    <if test="type!=null and type==2">
    order by amount desc 
    </if>    
    limit 0,10
  
  </select>
  
  <!-- 库存积压  end  lgm -->
    <!-- 库存结构统计查询 -->
    <select id="queryLocPrice" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT
        ANY_VALUE(sp.wh_id)wh_id,
        ANY_VALUE (w.wh_code) wh_code,
        ANY_VALUE (w.wh_name) wh_name,
        SUM(
        sp.qty * (
        CASE
        WHEN u.unit_code = 'KG' THEN
        1
        ELSE
        1000
        END
        )
        ) qty,
        SUM(sp.qty * ifnull(pri.price,0)) wh_price
        FROM
        stock_position sp
        INNER JOIN dic_warehouse_position posi ON sp.position_id = posi.position_id and sp.status != 5
        INNER JOIN dic_factory fac ON fac.fty_id = sp.fty_id
        AND (
        (
        fac.fty_type = '2'
        AND posi.is_default != 1
        )
        OR fac.fty_type != '2'
        )
        INNER JOIN dic_corp corp ON corp.corp_id = fac.corp_id
        <if test="corpId !=null and corpId !=''">
            AND corp.corp_id=#{corpId}
        </if>
        INNER JOIN dic_board board ON board.board_id = corp.board_id
        <if test="boardId !=null and boardId !=''">
            AND board.board_id = #{boardId}
        </if>
        INNER JOIN dic_warehouse w ON w.wh_id = sp.wh_id
        LEFT JOIN buf_factory_mat_price pri ON pri.fty_id = sp.fty_id
        AND pri.mat_id = sp.mat_id
        INNER JOIN dic_unit u ON u.unit_id = sp.unit_id
        INNER JOIN dic_stock_location sl ON sl.location_id = sp.location_id
        INNER JOIN dic_city city ON city.city_id = sl.city_id
        INNER join batch_material bm on bm.batch = sp.batch and bm.fty_id = sp.fty_id and bm.mat_id = sp.mat_id
        <if test="beginDate !=null">
            WHERE
            DATE_FORMAT(bm.create_time, '%Y-%m-%d') BETWEEN #{beginDate}
            AND #{endDate}
        </if>

        GROUP BY
        sp.wh_id

        <if test=" type!= null">
            ${type}
        </if>
    </select>

    <select id="queryLocPriceForCity" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT
        ANY_VALUE(sp.location_id)location_id,
        ANY_VALUE (sl.location_code) location_code,
        ANY_VALUE (sl.location_name) location_name,
        SUM(
        sp.qty * (
        CASE
        WHEN u.unit_code = 'KG' THEN
        1
        ELSE
        1000
        END
        )
        ) qty,
        SUM(sp.qty * ifnull(pri.price,0)) wh_price
        FROM
        stock_position sp
        INNER JOIN dic_warehouse_position posi ON sp.position_id = posi.position_id AND sp.status != 5
        INNER JOIN dic_factory fac ON fac.fty_id = sp.fty_id
        AND (
        (
        fac.fty_type = '2'
        AND posi.is_default != 1
        )
        OR fac.fty_type != '2'
        )
        INNER JOIN dic_corp corp ON corp.corp_id = fac.corp_id
        <if test="corpId !=null and corpId !=''">
            AND corp.corp_id=#{corpId}
        </if>
        INNER JOIN dic_board board ON board.board_id = corp.board_id
        <if test="boardId !=null and boardId !=''">
            AND board.board_id = #{boardId}
        </if>
        INNER JOIN dic_warehouse w ON w.wh_id = sp.wh_id
        <if test="whId !=null and whId !=''">
            AND sp.wh_id=#{whId}
        </if>
        left JOIN buf_factory_mat_price pri ON pri.fty_id = sp.fty_id
        AND pri.mat_id = sp.mat_id
        INNER JOIN dic_unit u ON u.unit_id = sp.unit_id
        INNER JOIN dic_stock_location sl ON sl.location_id = sp.location_id
        INNER JOIN dic_city city ON city.city_id = sl.city_id
        <if test="cityId != null and cityId !=''">
            AND sl.city_id = #{cityId}
        </if>
        inner join batch_material bm on bm.batch = sp.batch and bm.fty_id = sp.fty_id and bm.mat_id = sp.mat_id
        <if test="beginDate !=null">
            WHERE
            DATE_FORMAT(bm.create_time, '%Y-%m-%d') BETWEEN #{beginDate}
            AND #{endDate}
        </if>
        GROUP BY
        sp.location_id
        <if test=" type!= null">
            ${type}
        </if>
    </select>

    <select id="getFtyCodeMatCode" resultType="com.inossem.wms.model.vo.BufFactoryMatVo">
		SELECT DISTINCT m.mat_code matCode,
			f.fty_code ftyCode
		FROM stock_batch AS b
		INNER JOIN dic_material AS m ON b.mat_id = m.mat_id
		INNER JOIN dic_stock_location AS l ON b.location_id = l.location_id
	  	INNER JOIN dic_factory AS f on l.fty_id = f.fty_id
	  	ORDER BY f.fty_code
	</select>

    <select id="selectMatListByBatch" parameterType="map" resultType="map">
        select stock.id
        ,IFNULL(stock.mat_id,'') mat_id
        ,IFNULL(m.mat_code,'') mat_code
        ,IFNULL(m.mat_name,'') mat_name
        ,IFNULL(stock.batch,'') batch
        ,IFNULL(bm.erp_batch,'') erp_batch
        ,IFNULL(bm.product_batch,'') product_batch
        ,IFNULL(bm.quality_batch,'') quality_batch
        ,IFNULL(bm.package_type_id,'') package_type_id
        ,IFNULL(pt.package_type_code,'') package_type_code
        ,IFNULL(pt.package_type_name,'') package_type_name
        ,IFNULL(pt.package_standard,0) / (case when u.unit_code = 'KG' then 1 else 1000 end) package_standard
        ,IFNULL(stock.qty,0)-IFNULL(so.qty,0) stock_qty
        ,IFNULL(CEIL( IFNULL(stock.qty,0) /IFNULL(pt.package_standard / (case when u.unit_code = 'KG' then 1 else 1000
        end) ,1)),0) pack_num
        ,IFNULL(m.unit_id,'') unit_id
        ,IFNULL(u.unit_code,'') unit_code
        ,IFNULL(u.name_zh,'') unit_name
        ,IFNULL(u.decimal_place,0) decimal_place
        ,IFNULL(bm.fty_id,'') fty_id
        ,IFNULL(stock.location_id,'') location_id
        ,IFNULL(location.wh_id,'') wh_id
        ,pt.sn_used mat_store_type
        from
        <choose>
            <when test="isUrgent == null ">stock_batch</when>
            <when test="isUrgent != null">stock_batch_urgent</when>
        </choose>
        stock
        inner join batch_material bm on stock.batch = bm.batch and stock.mat_id = bm.mat_id and bm.fty_id= #{ftyId}
        inner join dic_package_type pt on pt.package_type_id = bm.package_type_id
        inner join dic_material m on m.mat_id = stock.mat_id
        inner join dic_unit u on u.unit_id = m.unit_id
        left join
        <choose>
            <when test="isUrgent != null">
                stock_occupancy_urgent
            </when>
            <otherwise>
                stock_occupancy
            </otherwise>
        </choose>
        so on stock.mat_id = so.mat_id
        and bm.fty_id = so.fty_id
        and stock.location_id = so.location_id
        and bm.package_type_id = so.package_type_id
        and stock.batch = so.batch
        and stock.stock_type_id = so.stock_type_id
        inner join dic_stock_location location on stock.location_id=location.location_id
        where ifnull(stock.qty,0) > 0
        and stock.status = 1 and IFNULL(stock.qty,0) > IFNULL(so.qty,0)
        <if test="stockTypeId != null">
            and stock.stock_type_id = #{stockTypeId}
        </if>
        <if test="isUrgent != null">
            and stock.urgent_syn_status = 1
        </if>
        <!-- 库存地点  -->
        <if test="locationId != null">
            and stock.location_id = #{locationId}
        </if>
        <!-- 物料code、name -->
        <if test="keyword1 != null and keyword1 !=''">
            and ( m.`mat_code` LIKE CONCAT('%',#{keyword1},'%') or m.`mat_name` LIKE CONCAT('%',#{keyword1},'%'))
        </if>
        <!-- 批次物料erp、product批次 -->
        <if test="keyword2 != null and keyword2 !=''">
            and ( bm.`erp_batch`LIKE CONCAT('%',#{keyword2},'%') or bm.`product_batch` LIKE CONCAT('%',#{keyword2},'%'))
        </if>
        <if test="productBatchLike != null and productBatchLike !=''">
            and bm.`product_batch` LIKE CONCAT('%',#{productBatchLike},'%')
        </if>
        order by stock.mat_id
    </select>

    <!-- 仓库整理  除package_id外分组-->
    <select id="selectMatListByPosition" parameterType="map" resultType="map">
        select CONCAT(stock.mat_id,'-',stock.batch,'-',bm.package_type_id,'-',stock.location_id) unique_id
        ,IFNULL(stock.mat_id,'') mat_id
        ,IFNULL(ANY_VALUE(m.mat_code),'') mat_code
        ,IFNULL(ANY_VALUE(m.mat_name),'') mat_name
        ,IFNULL(stock.batch,'') batch
        ,IFNULL(ANY_VALUE(bm.erp_batch),'') erp_batch
        ,IFNULL(ANY_VALUE(bm.product_batch),'') product_batch
        ,IFNULL(ANY_VALUE(bm.quality_batch),'') quality_batch
        ,IFNULL(bm.package_type_id,'') package_type_id
        ,IFNULL(ANY_VALUE(st.stock_type_id),'') stock_type_id
        ,IFNULL(ANY_VALUE(stock.position_id),'') position_id
        ,IFNULL(ANY_VALUE(p.position_code),'') position_code
        ,DATE_FORMAT(ANY_VALUE(bm.create_time),'%Y-%m-%d') input_date
        ,IFNULL(ANY_VALUE(pt.package_type_code),'') package_type_code
        ,IFNULL(ANY_VALUE(pt.package_type_name),'') package_type_name
        ,IFNULL(ANY_VALUE(pt.package_standard_ch),'') package_standard_ch
        ,IFNULL(ANY_VALUE(pt.sn_used),1) sn_used
        ,IFNULL(ANY_VALUE(stock.area_id), 0) area_id
        ,IFNULL(ANY_VALUE(wa.area_code), 0) area_code
        ,IFNULL(ANY_VALUE(wa.area_name), 0) area_name
        ,IFNULL(ANY_VALUE(pt.package_standard / (CASE WHEN u.unit_code = 'KG' THEN 1 ELSE 1000 END) ),0)
        package_standard
        ,SUM(stock.qty)-IFNULL(ANY_VALUE(so.qty), 0) stock_qty
        ,IFNULL(CEIL( SUM(stock.qty) /IFNULL(MAX(pt.package_standard / (CASE WHEN u.unit_code = 'KG' THEN 1 ELSE 1000
        END) ),1)),0) pack_num
        ,IFNULL(ANY_VALUE(m.unit_id),'') unit_id
        ,IFNULL(ANY_VALUE(u.unit_code),'') unit_code
        ,IFNULL(ANY_VALUE(u.name_zh),'') unit_name
        ,IFNULL(ANY_VALUE(u.decimal_place),0) decimal_place
        ,IFNULL(ANY_VALUE(location.fty_id),'') fty_id
        ,IFNULL(stock.location_id,'') location_id
        ,IFNULL(ANY_VALUE(location.wh_id),'') wh_id
        ,IFNULL(ANY_VALUE(stock.stock_type_id),0) stock_type_id
        <choose>
            <when test="isUrgent == null ">
                ,IFNULL(ANY_VALUE(st.stock_type_name),'') stock_type_name
            </when>
            <otherwise>
                , '临时库存' stock_type_name
            </otherwise>
        </choose>
        from
        <choose>
            <when test="isUrgent != null">
                stock_position_urgent stock
            </when>
            <otherwise>
                stock_position stock
            </otherwise>
        </choose>
        inner join batch_material bm on stock.batch = bm.batch and stock.mat_id = bm.mat_id and stock.fty_id = bm.fty_id
        <if test="ftyId != null">
            and bm.fty_id = #{ftyId}
        </if>
        <if test="isUrgent != null">
            and stock.urgent_syn_status = 1
        </if>
        <!-- 批次物料erp、product批次 -->
        <if test="keyword2 != null and keyword2 !=''">
            and ( bm.`erp_batch`LIKE CONCAT('%',#{keyword2},'%') or bm.`product_batch` LIKE CONCAT('%',#{keyword2},'%'))
        </if>
        <if test="stockTypeId != null">
            and stock.stock_type_id = #{stockTypeId}
        </if>
        <if test="productBatchLike != null and productBatchLike !=''">
            and bm.`product_batch` LIKE CONCAT('%',#{productBatchLike},'%')
        </if>
        and ifnull(stock.qty,0) <![CDATA[>]]> 0
        and stock.status = 1
        left join
        <choose>
            <when test="isUrgent != null">
                stock_occupancy_urgent
            </when>
            <otherwise>
                stock_occupancy
            </otherwise>
        </choose>
        so on stock.mat_id = so.mat_id
        and stock.fty_id = so.fty_id
        and stock.location_id = so.location_id
        and bm.package_type_id = so.package_type_id
        and stock.batch = so.batch
        and stock.stock_type_id = so.stock_type_id
        <!--工厂-->
        inner join dic_factory fty on fty.fty_id=bm.fty_id
        <if test="ftyType !=null">
            and fty.fty_type=#{ftyType}
        </if>

        inner join dic_warehouse_position p on stock.position_id = p.position_id
        inner join dic_warehouse_area wa on wa.area_id=p.area_id
        <if test="isDefault != null">
            and p.is_default = #{isDefault}
        </if>
        inner join dic_package_type pt on pt.package_type_id = bm.package_type_id
        <if test="erpBatch != null and erpBatch !=''">
            and bm.`erp_batch`= #{erpBatch}
            and ((locate(pt.erp_batch_key,#{erpBatch}) > 0) OR (pt.erp_batch_key IS NULL))
        </if>
        inner join dic_material m on m.mat_id = stock.mat_id
        <!-- 物料code、name -->
        <if test="keyword1 != null and keyword1 !=''">
            and ( m.`mat_code` LIKE CONCAT('%',#{keyword1},'%') or m.`mat_name` LIKE CONCAT('%',#{keyword1},'%'))
        </if>
        <if test="matId!=null and matId!=''">
            and m.`mat_id`=#{matId}
        </if>
        inner join dic_unit u on u.unit_id = m.unit_id
        inner join dic_stock_location location on stock.location_id=location.location_id
        <!-- 库存地点  -->
        <if test="locationId != null">
            and stock.location_id = #{locationId}
        </if>
        inner join stock_type st on st.stock_type_id=stock.stock_type_id
        GROUP BY stock.mat_id,stock.batch,bm.package_type_id,stock.location_id
        HAVING stock_qty <![CDATA[>]]> 0
    </select>
    <select id="selectTaskMatListByPositionParam" parameterType="map" resultType="map">
        select
        IFNULL(ANY_VALUE(stock.mat_id), '') mat_id,
        IFNULL(ANY_VALUE(m.mat_code), '') mat_code,
        IFNULL(ANY_VALUE(m.mat_name), '') mat_name,
        IFNULL(ANY_VALUE(stock.batch), '') batch,
        IFNULL(ANY_VALUE(bm.erp_batch), '') erp_batch,
        IFNULL(ANY_VALUE(bm.product_batch), '') product_batch,
        IFNULL(ANY_VALUE(bm.quality_batch), '') quality_batch,
        IFNULL(ANY_VALUE(bm.package_type_id), '') package_type_id,
        IFNULL(ANY_VALUE(pt.sn_used), '') sn_used,
        IFNULL(ANY_VALUE(pt.package_type_code), '') package_type_code,
        IFNULL(ANY_VALUE(pt.package_type_name), '') package_type_name,
        IFNULL(ANY_VALUE(pt.package_standard_ch), '') package_standard_ch,
        IFNULL(sum(stock.qty), 0) stock_qty,
        IFNULL(sum(CEIL( stock.qty /IFNULL(pt.package_standard/ (CASE WHEN u.unit_code = 'KG' THEN 1 ELSE 1000
        END),1))),0) pack_num,
        IFNULL(ANY_VALUE(m.unit_id), '') unit_id,
        IFNULL(ANY_VALUE(u.unit_code), '') unit_code,
        IFNULL(ANY_VALUE(u.name_zh), '') unit_name,
        IFNULL(ANY_VALUE(u.decimal_place), '0') decimal_place,
        IFNULL(ANY_VALUE(location.fty_id), '') fty_id,
        IFNULL(ANY_VALUE(stock.location_id), '') location_id,
        IFNULL(ANY_VALUE(location.wh_id), '') wh_id,
        IFNULL(group_concat(stock.id), 0) stock_id,
        IFNULL(ANY_VALUE(stock.area_id), 0) area_id,
        IFNULL(ANY_VALUE(area.area_code), '') area_code,
        IFNULL(ANY_VALUE(area.area_name), '') area_name,
        IFNULL(ANY_VALUE(stock.position_id), 0) position_id,
        IFNULL(ANY_VALUE(p.position_code), '') position_code,
        IFNULL(ANY_VALUE(stock.pallet_id), 0) pallet_id,
        IFNULL(ANY_VALUE(pallet.pallet_code), '') pallet_code,
        IFNULL(ANY_VALUE(pallet.pallet_name), '') pallet_name,
        IFNULL(ANY_VALUE(stock.package_id), 0) package_id,
        IFNULL(ANY_VALUE(sepac.package_code), '') package_code,
        IFNULL(ANY_VALUE(stock.stock_type_id), '') stock_type_id,
        IFNULL(ANY_VALUE(stock.status), '') status,
        IFNULL(ANY_VALUE(stock.spec_stock), '') spec_stock,
        IFNULL(ANY_VALUE(stock.spec_stock_code), '') spec_stock_code,
        IFNULL(ANY_VALUE(stock.spec_stock_name), '') spec_stock_name

        from stock_position stock
        inner join batch_material bm on stock.batch = bm.batch and stock.mat_id = bm.mat_id and stock.fty_id = bm.fty_id
        <if test="ftyId != null">
            and bm.fty_id = #{ftyId}
        </if>
        and ifnull(stock.qty,0) > 0
        and stock.status = 1
        <!-- 批次物料erp、product批次 -->
        <if test="keyword2 != null and keyword2 !=''">
            and ( bm.`erp_batch`LIKE CONCAT('%',#{keyword2},'%') or bm.`product_batch` LIKE CONCAT('%',#{keyword2},'%'))
        </if>
        <if test="productBatchLike != null and productBatchLike !=''">
            and bm.`product_batch` LIKE CONCAT('%',#{productBatchLike},'%'))
        </if>
        inner join dic_warehouse_position p on stock.position_id = p.position_id and p.is_default = 0
        <!-- <if test="isDefault != null and isDefault !=''">
            and p.is_default = ${isDefault}
        </if> -->
        inner join dic_package_type pt on pt.package_type_id = bm.package_type_id
        <if test="stockTypeId != null">
            and stock.stock_type_id = #{stockTypeId}
        </if>
        inner join dic_material m on m.mat_id = stock.mat_id
        <if test="keyword3 != null">
            inner join serial_package sep on stock.package_id = sep.package_id
            and ( bm.`erp_batch`LIKE CONCAT('%',#{keyword3},'%')
            or bm.`product_batch` LIKE CONCAT('%',#{keyword3},'%')
            or sep.package_code LIKE CONCAT('%',#{keyword3},'%')
            or pt.package_type_code LIKE CONCAT('%',#{keyword3},'%')
            or pt.package_type_name LIKE CONCAT('%',#{keyword3},'%')
            ) and stock.package_id>0
            <!-- and ( bm.erp_batch = #{keyword3}
            or bm.product_batch = #{keyword3}
            or sep.package_code = #{keyword3}
            or pt.package_type_code = #{keyword3}
            or pt.package_type_name = #{keyword3} ) and stock.pallet_id>0 and stock.package_id>0 -->
        </if>
        <if test="keyword4 != null">
            and ( bm.`erp_batch`LIKE CONCAT('%',#{keyword4},'%')
            or bm.`product_batch` LIKE CONCAT('%',#{keyword4},'%')
            or m.`mat_code` LIKE CONCAT('%',#{keyword4},'%')
            or m.`mat_name` LIKE CONCAT('%',#{keyword4},'%')) and stock.pallet_id = 0 and stock.package_id = 0
            <!-- and ( bm.`erp_batch`  = #{keyword4}
            or  bm.`product_batch`  = #{keyword4}
            or  m.`mat_code`  = #{keyword4}
            or  m.`mat_name`  = #{keyword4} )  and stock.pallet_id = 0 and stock.package_id = 0 -->
        </if>
        <!-- 物料code、name -->
        <if test="keyword1 != null and keyword1 !=''">
            and ( m.`mat_code` LIKE CONCAT('%',#{keyword1},'%') or m.`mat_name` LIKE CONCAT('%',#{keyword1},'%'))
        </if>
        left join dic_unit u on u.unit_id = m.unit_id
        inner join dic_stock_location location on stock.location_id=location.location_id
        <!-- 库存地点  -->
        <if test="locationId != null">
            and stock.location_id = #{locationId}
        </if>
        <!-- 仓库  -->
        inner join dic_warehouse whouse on stock.wh_id=whouse.wh_id
        <if test="whId != null">
            and stock.wh_id = #{whId}
        </if>
        inner join dic_warehouse_area area on stock.area_id = area.area_id
        <!-- 存储区  -->
        <if test="areaId != null">
            and stock.area_id = #{areaId}
        </if>
        <!-- 仓位  -->
        <if test="positionId != null">
            and stock.position_id = #{positionId}
        </if>
        <!-- 托盘  -->
        <choose>
            <when test="palletCode != null ">
                inner join
            </when>
            <otherwise>
                left join
            </otherwise>
        </choose>

        dic_warehouse_pallet pallet on stock.pallet_id = pallet.pallet_id
        <if test="palletCode != null">
            and pallet.pallet_code = #{palletCode}
        </if>
        left join serial_package sepac on stock.package_id = sepac.package_id
        group by location.fty_id,stock.location_id,stock.area_id,stock.position_id,
        stock.pallet_id,stock.mat_id,stock.batch,bm.erp_batch,bm.product_batch,bm.package_type_id
        <if test="includePackage != null">
            ,stock.package_id
        </if>
        <if test="stockId != null">
            having stock_id = #{stockId}
        </if>
    </select>

    <select id="selectByMatAndBatch" resultType="com.inossem.wms.model.vo.StockBatchVo">
        Select
        <include refid="Base_Column_List"/>
        from stock_batch
        where
        1=1
        <if test="matid!=null">
            and mat_id=#{matid}
        </if>
        <if test="batch!=null">
            and batch=#{batch}
        </if>
        <if test="locationid!=null">
            and location_id=#{locationid}
        </if>


    </select>
    <select id="selectDataForHdzmStorageNum" parameterType="map" resultType="map">
        SELECT 
        sb.mat_id,
        any_value(ifnull(m.mat_code,'')) mat_code,
        any_value(ifnull(m.mat_name,'')) mat_name,
        sb.location_id,
        any_value(ifnull(loc.location_code,'')) location_code,
        any_value(ifnull(loc.location_name,'')) location_name,
        SUM(ifnull(sb.qty,0)) qty,
        SUM(IFNULL(sb.qty, 0) * (CASE WHEN u.unit_code = 'KG' THEN 1 ELSE 1000 END)) kg_qty,
        loc.fty_id,
        any_value(ifnull(mp.price,'')) price,
        any_value(ifnull(fty.fty_code,'')) fty_code,
        any_value(ifnull(fty.fty_name,'')) fty_name,
        any_value(ifnull(bm.erp_batch,'')) erp_batch,
        any_value(ifnull(bm.product_batch,'')) product_batch,
        any_value(ifnull(bm.quality_batch,'')) quality_batch,
        any_value(ifnull(sb.spec_stock,'')) spec_stock,
        any_value(ifnull(sb.spec_stock_code,'')) spec_stock_code,
        any_value(ifnull(sb.spec_stock_name,'')) spec_stock_name
        FROM stock_batch sb
        INNER JOIN dic_stock_location loc on loc.location_id = sb.location_id
        INNER JOIN batch_material bm on sb.mat_id = bm.mat_id and bm.fty_id = loc.fty_id and sb.batch = bm.batch
        INNER JOIN dic_material m on sb.mat_id=m.mat_id
       	INNER JOIN dic_unit u on u.unit_id=m.unit_id
        INNER JOIN dic_factory fty on fty.fty_id = bm.fty_id
        LEFT JOIN buf_factory_mat_price mp on fty.fty_id = mp.fty_id and sb.mat_id = mp.mat_id
        WHERE 1=1
        <if test="ftyId>0">
            AND loc.fty_id = #{ftyId}
        </if>
        <if test="locationId>0">
            AND sb.location_id = #{locationId}
        </if>
        GROUP BY sb.mat_id,loc.fty_id,sb.location_id,bm.erp_batch
    </select>
    <!-- 统计省数量及相关信息-->
    <select id="queryCityNumberForLocPrice" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT
        sl.city_id,
        ANY_VALUE (city.city_name) city_name,
        COUNT(DISTINCT sp.location_id) value,
        COUNT(DISTINCT sl.city_id) city_num
        FROM
        stock_position sp
        INNER JOIN dic_warehouse_position posi ON sp.position_id = posi.position_id and sp.status != 5
        INNER JOIN dic_factory fac ON fac.fty_id = sp.fty_id
        AND (
        (
        fac.fty_type = '2'
        AND posi.is_default != 1
        )
        OR fac.fty_type != '2'
        )
        INNER JOIN dic_corp corp ON corp.corp_id = fac.corp_id
        INNER JOIN dic_board board ON board.board_id = corp.board_id
        INNER JOIN dic_warehouse w ON w.wh_id = sp.wh_id
        left JOIN buf_factory_mat_price pri ON pri.fty_id = sp.fty_id
        AND pri.mat_id = sp.mat_id
        INNER JOIN dic_unit u ON u.unit_id = sp.unit_id
        INNER JOIN dic_stock_location sl ON sl.location_id = sp.location_id
        INNER JOIN dic_city city ON city.city_id = sl.city_id
        inner join batch_material bm on bm.batch = sp.batch and bm.fty_id = sp.fty_id and bm.mat_id = sp.mat_id
        <if test="beginDate !=null">
            WHERE
            DATE_FORMAT(bm.create_time, '%Y-%m-%d') BETWEEN #{beginDate}
            AND #{endDate}
        </if>
        GROUP BY
        sl.city_id

    </select>
    <select id="queryLocNumberForLocPrice" parameterType="java.util.Map" resultType="java.lang.Integer">

        SELECT
        COUNT(DISTINCT sp.location_id) num
        FROM
        stock_position sp
        INNER JOIN dic_warehouse_position posi ON sp.position_id = posi.position_id and sp.status != 5
        INNER JOIN dic_factory fac ON fac.fty_id = sp.fty_id
        AND (
        (
        fac.fty_type = '2'
        AND posi.is_default != 1
        )
        OR fac.fty_type != '2'
        )
        INNER JOIN dic_corp corp ON corp.corp_id = fac.corp_id
        INNER JOIN dic_board board ON board.board_id = corp.board_id
        INNER JOIN dic_warehouse w ON w.wh_id = sp.wh_id
        left JOIN buf_factory_mat_price pri ON pri.fty_id = sp.fty_id
        AND pri.mat_id = sp.mat_id
        INNER JOIN dic_unit u ON u.unit_id = sp.unit_id
        INNER JOIN dic_stock_location sl ON sl.location_id = sp.location_id
        INNER JOIN dic_city city ON city.city_id = sl.city_id
        inner join batch_material bm on bm.batch = sp.batch and bm.fty_id = sp.fty_id and bm.mat_id = sp.mat_id
        <if test="beginDate !=null">
            WHERE
            DATE_FORMAT(bm.create_time, '%Y-%m-%d') BETWEEN #{beginDate}
            AND #{endDate}
        </if>
    </select>
    <select id="downloadLocPrice" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT distinct
        stock.id,
        IFNULL(stock.mat_id, '') mat_id,
        IFNULL(m.mat_code, '') mat_code,
        IFNULL(m.mat_name, '') mat_name,
        IFNULL(dmg.mat_group_code, '') mat_group_code,
        IFNULL(stock.batch, '') batch,
        IFNULL(bm.erp_batch, '') erp_batch,
        IFNULL(bm.product_batch, '') product_batch,
        IFNULL(bm.quality_batch, '') quality_batch,
        IFNULL(bm.package_type_id, '') package_type_id,
        IFNULL(purchase_order_code, '') purchase_order_code,
        date_format(
        stock.create_time,
        '%Y-%m-%d'
        ) input_date,
        IFNULL(pt.package_standard_ch, '') package_standard_ch,
        IFNULL(pt.package_type_code, '') package_type_code,

        IFNULL(pt.package_type_name, '') package_type_name,
        IFNULL(stock.qty, 0) stock_qty,
        IFNULL(m.unit_id, '') unit_id,
        IFNULL(m.shelf_life, 0) shelf_life,
        IFNULL(u.unit_code, '') unit_code,
        IFNULL(u.name_zh, '') unit_name,
        IFNULL(u.decimal_place, 0) decimal_place,
        IFNULL(stock.location_id, '') location_id,
        IFNULL(location.fty_id, '') fty_id,
        IFNULL(factory.fty_code, '') fty_code,
        IFNULL(factory.fty_name, '') fty_name,
        IFNULL(location.location_code, '') location_code,
        IFNULL(location.location_name, '') location_name,
        IFNULL(location.wh_id, '') wh_id,
        IFNULL(pt.sn_used, '') mat_store_type,
        IFNULL(st.stock_type_name, '') stock_type_name,
        IFNULL(ct.class_type_name, '') class_type_name,

        IFNULL(pl.product_line_name, '') product_line_name
        FROM
        stock_batch stock
        INNER JOIN stock_position sp ON sp.location_id = stock.location_id
        AND sp.batch = stock.batch
        INNER JOIN buf_factory_mat_price pri ON pri.fty_id = sp.fty_id
        INNER JOIN dic_stock_location location ON stock.location_id = location.location_id AND pri.mat_id = stock.mat_id

        INNER JOIN batch_material bm ON stock.batch = bm.batch
        AND stock.mat_id = bm.mat_id
        AND location.fty_id = bm.fty_id
        INNER JOIN dic_package_type pt ON pt.package_type_id = bm.package_type_id
        INNER JOIN dic_material m ON m.mat_id = stock.mat_id
        INNER JOIN dic_material_group dmg ON m.mat_group_id = dmg.mat_group_id
        INNER JOIN dic_unit u ON u.unit_id = m.unit_id
        INNER JOIN dic_factory factory ON location.fty_id = factory.fty_id
        INNER JOIN stock_type st ON st.stock_type_id = stock.stock_type_id
        LEFT JOIN dic_class_type ct ON ct.class_type_id = bm.class_type_id
        LEFT JOIN dic_product_line pl ON pl.product_line_id = bm.product_line_id
        INNER JOIN dic_warehouse w ON w.wh_id = sp.wh_id


        WHERE
        stock. STATUS = 1
        <if test="whId != null  and whId >0">
            and sp.wh_id =#{whId}
        </if>
        <if test="locationId != null  and locationId >0">
            and sp.location_id =#{locationId}
        </if>


    </select>

    <update id="updateStatus" parameterType="java.util.Map">
        UPDATE
        <choose>
            <when test="isUrgent == null ">stock_batch</when>
            <when test="isUrgent != null">stock_batch_urgent</when>
        </choose>
        SET status = #{status,jdbcType=TINYINT} ,reason = #{reason,jdbcType=VARCHAR}
        WHERE id in
        <foreach item="item" index="index" collection="id" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>

    <update id="updatePositionStatus" parameterType="java.util.Map">
        UPDATE
        <choose>
            <when test="isUrgent == null ">stock_position</when>
            <when test="isUrgent != null">stock_position_urgent</when>
        </choose>
        p
        INNER JOIN stock_batch b
        SET p.status = #{status,jdbcType=TINYINT}
        WHERE p.mat_id = b.mat_id
        AND p.location_id = b.location_id
        AND p.batch = b.batch
        AND p.stock_type_id = b.stock_type_id
        AND b.id in
        <foreach item="item" index="index" collection="id" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>

    <select id="selectByUniqueList" resultMap="BaseResultMap" parameterType="list">
        select a.* from(
        select
        <include refid="Base_Column_List"/>
        ,CONCAT(mat_id,'-',
        location_id,'-',
        status,'-',
        batch,'-',
        stock_type_id ) as unique_id
        from stock_batch) a
        where a.unique_id in
        <foreach collection="uniqueList" item="unique" index="index" open="(" close=")" separator=",">
            #{unique}
        </foreach>
    </select>

    <select id="queryStockOutAndInOnPaging" parameterType="java.util.Map" resultType="java.util.Map">
        <if test="input !=null  and input!=''  ">
            SELECT DISTINCT
            '入库' biz_type,
            IFNULL(move.move_type_code, '') move_type_code,
            IFNULL(mat.mat_id, '') mat_id,
            IFNULL(mat.mat_code, '') mat_code,
            IFNULL(mat.mat_name, '') mat_name,
            IFNULL(fty.fty_name, '') fty_input_name,
            IFNULL(fty.fty_code, '') fty_input_code,
            IFNULL(loc.location_name, '') location_input_name,
            IFNULL(loc.location_code, '') location_input_code,
            '' fty_output_name,
            '' fty_output_code,
            '' location_output_name,
            '' location_output_code,
            IFNULL(item.batch, '') batch,
            IFNULL(item.mat_doc_rid, '') mat_doc_rid,
            IFNULL(item.mat_doc_code, '') mat_doc_code,
            IFNULL(item.stock_input_id, '') refer_receipt_id,
            IFNULL(item.stock_input_rid, '') refer_receipt_rid,
            IFNULL(head.stock_input_code, '') refer_receipt_code,
            IFNULL(unit.name_zh, '') name_zh,
            IFNULL(pack.qty, '') qty,
            IFNULL(pack.qty, 0) * (CASE WHEN unit.unit_code = 'KG' THEN 1 ELSE 1000 END) kg_qty,
            DATE_FORMAT(
            item.create_time,
            '%Y-%m-%d'
            ) create_time,
            IFNULL(pack.production_batch, '') product_batch,
            IFNULL(pack.erp_batch, '') erp_batch,
            IFNULL(head.doc_time, '') doc_time,
            IFNULL(head.posting_date, '') posting_date,
            IFNULL(head.receipt_type, '') receipt_type,
            '' driver,
            '' vehicle,
            head.remark AS headremark,
            item.remark AS itemremark,
            IFNULL(u.user_name, '') user_name,
            CASE
            WHEN head.`status` = '0' THEN
            '未完成'
            WHEN head.`status` = '10' THEN
            '已完成'
            WHEN head.`status` = '2' THEN
            '已提交'
            WHEN head.`status` = '3' THEN
            '已作业'
            WHEN head.`status` = '4' THEN
            '已关联'
            WHEN head.`status` = '5' THEN
            '已转储'
            WHEN head.`status` = '6' THEN
            '已拣货'
            WHEN head.`status` = '7' THEN
            '待出库'
            WHEN head.`status` = '8' THEN
            '已开票'
            WHEN head.`status` = '20' THEN
            '已冲销'
            END status_name,
            item.mes_doc_code,
            item.mat_off_code,
            item.mes_fail_code mes_off_code
            FROM
            biz_stock_input_package_item pack
            INNER JOIN biz_stock_input_item item ON item.item_id = pack.stock_input_item_id
            INNER JOIN biz_stock_input_head head ON head.stock_input_id = item.stock_input_id
            LEFT JOIN dic_move_type move ON move.move_type_id = head.move_type_id
            INNER JOIN dic_factory fty ON fty.fty_id = item.fty_id
            INNER JOIN dic_stock_location loc ON loc.location_id = item.location_id
            LEFT JOIN dic_unit unit ON unit.unit_id = item.unit_id
            INNER JOIN dic_material mat ON mat.mat_id = item.mat_id
            INNER JOIN wms_user u ON u.user_id = head.create_user
            INNER JOIN batch_material bm ON bm.mat_id = item.mat_id
            AND pack.batch = bm.batch
            AND item.fty_id = bm.fty_id
            WHERE
            item.is_delete = 0
            AND head.receipt_type != 13
            <if test="whInputId!=null and whInputId!=''">
                and loc.wh_id=#{whInputId}
            </if>
            <if test="matDocCode !=null and matDocCode !=''">
                AND item.mat_doc_code=#{matDocCode}
            </if>
            <if test="createTimeBegin != null">
                AND item.create_time <![CDATA[>=]]>
                #{createTimeBegin,jdbcType=TIMESTAMP}
            </if>
            <if test="createTimeEnd != null">
                AND item.create_time <![CDATA[<=]]>
                #{createTimeEnd,jdbcType=TIMESTAMP}
            </if>
            <if test="ftyInputId != null and ftyInputId !=''">
                AND item.fty_id= #{ftyInputId,jdbcType=VARCHAR}
            </if>
            <if test="locationInputId != null and locationInputId !=''">
                AND item.location_id = #{locationInputId,jdbcType=VARCHAR}
            </if>

            <if test="referReceiptCode != null and referReceiptCode !=''">
                AND head.stock_input_code = #{referReceiptCode,jdbcType=VARCHAR}
            </if>
            <if test="erpBatch !=null and erpBatch!=''">
                AND pack.erp_batch=#{erpBatch,jdbcType=VARCHAR}
            </if>
            <if test="moveTypeCode != null and moveTypeCode !=''">
                AND move.move_type_code = #{moveTypeCode,jdbcType=VARCHAR}
            </if>
            <if test="matCode != null and matCode !=''">
                AND (
                <foreach collection="utilMatCodes" item="item" index="index" separator="or">
                    (mat.mat_code BETWEEN #{item.begin} AND #{item.end}
                    AND CHAR_LENGTH(mat.mat_code) IN (CHAR_LENGTH(#{item.begin}),CHAR_LENGTH(#{item.end})) )
                </foreach>
                <!--  OR	mat.mat_code IN
             <foreach collection="utilMatCodes.get(0).strings" item="string" index="index" open="(" close=")" separator=",">
                  #{string}
            </foreach>  -->
                or mat.mat_code like concat('%',#{matCode},'%')
                )
            </if>
            <if test="matName != null and matName !=''">
                AND mat.mat_name LIKE CONCAT('%',#{matName,jdbcType=VARCHAR},'%')
            </if>
            <if test="userName != null and userName !=''">
                AND u.user_name LIKE CONCAT('%',#{userName,jdbcType=VARCHAR},'%')
            </if>
            <if test="productBatch !=null and productBatch!=''">
                AND bm.product_batch=#{productBatch}
            </if>
   			UNION ALL
   			SELECT DISTINCT
            '入库' biz_type,
            IFNULL(move.move_type_code, '') move_type_code,
            IFNULL(mat.mat_id, '') mat_id,
            IFNULL(mat.mat_code, '') mat_code,
            IFNULL(mat.mat_name, '') mat_name,
            IFNULL(fty.fty_name, '') fty_input_name,
            IFNULL(fty.fty_code, '') fty_input_code,
            IFNULL(loc.location_name, '') location_input_name,
            IFNULL(loc.location_code, '') location_input_code,
            '' fty_output_name,
            '' fty_output_code,
            '' location_output_name,
            '' location_output_code,
            IFNULL(pack.batch, '') batch,
            IFNULL(item.mat_doc_rid, '') mat_doc_rid,
            IFNULL(item.mat_doc_code, '') mat_doc_code,
            IFNULL(item.stock_input_id, '') refer_receipt_id,
            IFNULL(item.stock_input_rid, '') refer_receipt_rid,
            IFNULL(head.stock_input_code, '') refer_receipt_code,
            IFNULL(unit.name_zh, '') name_zh,
            IFNULL(pack.qty, '') qty,
            IFNULL(pack.qty, 0) * (CASE WHEN unit.unit_code = 'KG' THEN 1 ELSE 1000 END) kg_qty,
            DATE_FORMAT(
            item.create_time,
            '%Y-%m-%d'
            ) create_time,
            IFNULL(pack.production_batch, '') product_batch,
            IFNULL(pack.erp_batch, '') erp_batch,
            IFNULL(head.doc_time, '') doc_time,
            IFNULL(head.posting_date, '') posting_date,
            IFNULL(head.receipt_type, '') receipt_type,
            '' driver,
            '' vehicle,
            head.remark AS headremark,
            item.remark AS itemremark,
            IFNULL(u.user_name, '') user_name,
            CASE
            WHEN head.`status` = '0' THEN
            '未完成'
            WHEN head.`status` = '10' THEN
            '已完成'
            WHEN head.`status` = '2' THEN
            '已提交'
            WHEN head.`status` = '3' THEN
            '已作业'
            WHEN head.`status` = '4' THEN
            '已关联'
            WHEN head.`status` = '5' THEN
            '已转储'
            WHEN head.`status` = '6' THEN
            '已拣货'
            WHEN head.`status` = '7' THEN
            '待出库'
            WHEN head.`status` = '8' THEN
            '已开票'
            WHEN head.`status` = '20' THEN
            '已冲销'
            END status_name,
            item.mes_doc_code,
            item.mat_off_code,
            item.mes_fail_code mes_off_code
            FROM
            biz_stock_input_package_item pack
            INNER JOIN biz_stock_input_item item ON item.item_id = pack.stock_input_item_id
            INNER JOIN biz_stock_input_head head ON head.stock_input_id = item.stock_input_id
            LEFT JOIN dic_move_type move ON move.move_type_id = head.move_type_id
            INNER JOIN dic_factory fty ON fty.fty_id = item.fty_id
            INNER JOIN dic_stock_location loc ON loc.location_id = item.location_id
            LEFT JOIN dic_unit unit ON unit.unit_id = item.unit_id
            INNER JOIN dic_material mat ON mat.mat_id = item.mat_id
            INNER JOIN wms_user u ON u.user_id = head.create_user
            INNER JOIN batch_material bm ON bm.mat_id = item.mat_id
            AND pack.batch = bm.batch
            AND item.fty_id = bm.fty_id
            WHERE
            item.is_delete = 0
            AND head.receipt_type = 13
            <if test="whInputId!=null and whInputId!=''">
                and loc.wh_id=#{whInputId}
            </if>
            <if test="matDocCode !=null and matDocCode !=''">
                AND item.mat_doc_code=#{matDocCode}
            </if>
            <if test="createTimeBegin != null">
                AND DATE(item.create_time) <![CDATA[>=]]>
                DATE(#{createTimeBegin,jdbcType=TIMESTAMP})
            </if>
            <if test="createTimeEnd != null">
                AND DATE(item.create_time) <![CDATA[<=]]>
                DATE(#{createTimeEnd,jdbcType=TIMESTAMP})
            </if>
            <if test="ftyInputId != null and ftyInputId !=''">
                AND item.fty_id= #{ftyInputId,jdbcType=VARCHAR}
            </if>
            <if test="locationInputId != null and locationInputId !=''">
                AND item.location_id = #{locationInputId,jdbcType=VARCHAR}
            </if>

            <if test="referReceiptCode != null and referReceiptCode !=''">
                AND head.stock_input_code = #{referReceiptCode,jdbcType=VARCHAR}
            </if>
            <if test="erpBatch !=null and erpBatch!=''">
                AND pack.erp_batch=#{erpBatch,jdbcType=VARCHAR}
            </if>
            <if test="moveTypeCode != null and moveTypeCode !=''">
                AND move.move_type_code = #{moveTypeCode,jdbcType=VARCHAR}
            </if>
            <if test="matCode != null and matCode !=''">
                AND (
                <foreach collection="utilMatCodes" item="item" index="index" separator="or">
                    (mat.mat_code BETWEEN #{item.begin} AND #{item.end}
                    AND CHAR_LENGTH(mat.mat_code) IN (CHAR_LENGTH(#{item.begin}),CHAR_LENGTH(#{item.end})) )
                </foreach>
                <!--  OR	mat.mat_code IN
             <foreach collection="utilMatCodes.get(0).strings" item="string" index="index" open="(" close=")" separator=",">
                  #{string}
            </foreach>  -->
                or mat.mat_code like concat('%',#{matCode},'%')
                )
            </if>
            <if test="matName != null and matName !=''">
                AND mat.mat_name LIKE CONCAT('%',#{matName,jdbcType=VARCHAR},'%')
            </if>
            <if test="userName != null and userName !=''">
                AND u.user_name LIKE CONCAT('%',#{userName,jdbcType=VARCHAR},'%')
            </if>
            <if test="productBatch !=null and productBatch!=''">
                AND bm.product_batch=#{productBatch}
            </if>
        </if>
        <if test="input !=null  and input!=''  ">
            <if test=" trans !=null  and itrans !=''   or  output !=null  and input!='' ">
                UNION ALL
            </if>
        </if>
        <if test=" trans !=null  and itrans !=''">
            SELECT DISTINCT
            '转储' biz_type,
            IFNULL(move.move_type_code, '') move_type_code,
            IFNULL(mat.mat_id, '') mat_id,
            IFNULL(mat.mat_code, '') mat_code,
            IFNULL(mat.mat_name, '') mat_name,
            IFNULL(ftyin.fty_name, '') fty_input_name,
            IFNULL(ftyin.fty_code, '') fty_input_code,
            IFNULL(locin.location_name, '') location_input_name,
            IFNULL(locin.location_code, '') location_input_code,
            IFNULL(ftyout.fty_name, '') fty_output_name,
            IFNULL(ftyout.fty_code, '') fty_output_code,
            IFNULL(locout.location_name, '') location_output_name,
            IFNULL(locout.location_code, '') location_output_code,
            IFNULL(item.batch, '') batch,
            IFNULL(item.mat_doc_rid, '') mat_doc_rid,
            IFNULL(item.mat_doc_code, '') mat_doc_code,
            IFNULL(item.stock_transport_id, '') refer_receipt_id,
            IFNULL(
            item.stock_transport_rid,
            ''
            ) refer_receipt_rid,
            IFNULL(
            head.stock_transport_code,
            ''
            ) refer_receipt_code,
            IFNULL(unit.name_zh, '') name_zh,
            IFNULL(item.transport_qty, '') qty,
            IFNULL(item.transport_qty, 0) * (CASE WHEN unit.unit_code = 'KG' THEN 1 ELSE 1000 END) kg_qty,
            DATE_FORMAT(
            item.create_time,
            '%Y-%m-%d'
            ) create_time,
            IFNULL(item.production_batch, '') product_batch,
            IFNULL(item.erp_batch, '') erp_batch,
            IFNULL(head.doc_time, '') doc_time,
            IFNULL(head.posting_date, '') posting_date,
            IFNULL(head.receipt_type, '') receipt_type,
            IFNULL(b.delivery_driver,'') driver,
            IFNULL(b.delivery_vehicle,'') vehicle,
            head.remark AS headremark,
            item.remark AS itemremark,
            IFNULL(u.user_name, '') user_name,
            CASE
            WHEN head.`status` = '0' THEN
            '未完成'
            WHEN head.`status` = '10' THEN
            '已完成'
            WHEN head.`status` = '2' THEN
            '已提交'
            WHEN head.`status` = '3' THEN
            '已作业'
            WHEN head.`status` = '4' THEN
            '已关联'
            WHEN head.`status` = '5' THEN
            '已转储'
            WHEN head.`status` = '6' THEN
            '已拣货'
            WHEN head.`status` = '7' THEN
            '待出库'
            WHEN head.`status` = '8' THEN
            '已开票'
            WHEN head.`status` = '20' THEN
            '已冲销'
            END status_name,
            item.mes_doc_code,
            item.mat_off_code,
            item.mes_fail_code mes_off_code
            FROM
            biz_stock_input_transport_item item
            INNER JOIN biz_stock_input_transport_head head ON head.stock_transport_id = item.stock_transport_id
            LEFT JOIN dic_move_type move ON move.move_type_id = head.move_type_id
            INNER JOIN dic_factory ftyout ON ftyout.fty_id = item.fty_output_id
            INNER JOIN dic_factory ftyin ON ftyin.fty_id = item.fty_input
            INNER JOIN dic_stock_location locout ON locout.location_id = item.location_output_id
            INNER JOIN dic_stock_location locin ON locin.location_id = item.location_input
            INNER JOIN dic_material mat ON mat.mat_id = item.mat_id
            LEFT JOIN dic_unit unit ON unit.unit_id = mat.unit_id
            INNER JOIN wms_user u ON u.user_id = head.create_user
            INNER JOIN biz_stock_task_head_cw hc ON hc.stock_task_id = item.refer_receipt_id
            INNER JOIN biz_stock_task_req_head b ON hc.stock_task_req_id = b.stock_task_req_id
            WHERE
            item.is_delete = 0
            <if test="whOutputId!=null and whOutputId!=''">
                and locout.wh_id=#{whOutputId}
            </if>
            <if test="whInputId!=null and whInputId!=''">
                and locin.wh_id=#{whInputId}
            </if>
            <if test="ftyOutputId != null and ftyOutputId !=''">
                AND item.fty_output_id= #{ftyOutputId,jdbcType=VARCHAR}
            </if>
            <if test="locationOutputId != null and locationOutputId !=''">
                AND item.location_output_id = #{locationOutputId,jdbcType=VARCHAR}
            </if>
            <if test="ftyInputId != null and ftyInputId !=''">
                AND item.fty_input= #{ftyInputId,jdbcType=VARCHAR}
            </if>
            <if test="locationInputId != null and locationInputId !=''">
                AND item.location_input = #{locationInputId,jdbcType=VARCHAR}
            </if>
            <if test="createTimeBegin != null">
                AND DATE(item.create_time) <![CDATA[>=]]>
                DATE(#{createTimeBegin,jdbcType=TIMESTAMP})
            </if>
            <if test="createTimeEnd != null">
                AND DATE(item.create_time) <![CDATA[<=]]>
                DATE(#{createTimeEnd,jdbcType=TIMESTAMP})
            </if>
            <if test="referReceiptCode != null and referReceiptCode !=''">
                AND head.stock_transport_code =
                #{referReceiptCode,jdbcType=VARCHAR}
            </if>
            <if test="moveTypeCode != null and moveTypeCode !=''">
                AND move.move_type_code = #{moveTypeCode,jdbcType=VARCHAR}
            </if>
            <if test="matCode != null and matCode !=''">
                AND (
                <foreach collection="utilMatCodes" item="item" index="index"
                         separator="or">
                    (mat.mat_code BETWEEN #{item.begin} AND #{item.end}
                    AND CHAR_LENGTH(mat.mat_code) IN
                    (CHAR_LENGTH(#{item.begin}),CHAR_LENGTH(#{item.end})) )
                </foreach>
                OR mat.mat_code IN
                <foreach collection="utilMatCodes.get(0).strings" item="string"
                         index="index" open="(" close=")" separator=",">
                    #{string}
                </foreach>
                )
            </if>
            <if test="matName != null and matName !=''">
                AND mat.mat_name LIKE
                CONCAT('%',#{matName,jdbcType=VARCHAR},'%')
            </if>
            <if test="userName != null and userName !=''">
                AND u.user_name LIKE
                CONCAT('%',#{userName,jdbcType=VARCHAR},'%')
            </if>
            <if test="productBatch !=null and productBatch!='' ">
                AND item.production_batch = #{productBatch}
            </if>
            <if test="matDocCode !=null and matDocCode !=''">
                AND item.mat_doc_code=#{matDocCode}
            </if>
            <if test="erpBatch !=null and erpBatch !=''">
                AND item.erp_batch=#{erpBatch}
            </if>
        </if>
        <if test="  trans !=null  and itrans !='' and output !=null  and output!=''  ">
            UNION ALL
        </if>
        <if test="output !=null  and output!=''">
            SELECT DISTINCT
            '出库' biz_type,
            IFNULL(move.move_type_code, '') move_type_code,
            IFNULL(mat.mat_id, '') mat_id,
            IFNULL(mat.mat_code, '') mat_code,
            IFNULL(mat.mat_name, '') mat_name,
            '' fty_input_name,
            '' fty_input_code,
            '' location_input_name,
            '' location_input_code,
            IFNULL(ftyout.fty_name, '') fty_output_name,
            IFNULL(ftyout.fty_code, '') fty_output_code,
            IFNULL(locout.location_name, '') location_output_name,
            IFNULL(locout.location_code, '') location_output_code,
            IFNULL(position.batch, '') batch,
            IFNULL(item.mat_doc_rid, '') mat_doc_rid,
            IFNULL(item.mat_doc_code, '') mat_doc_code,
            IFNULL(
            position.stock_output_id,
            ''
            ) refer_receipt_id,
            IFNULL(item.stock_output_rid, '') refer_receipt_rid,
            IFNULL(head.stock_output_code, '') refer_receipt_code,
            IFNULL(unit.name_zh, '') name_zh,
            IFNULL(position.stock_qty, '') qty,
            IFNULL(position.stock_qty, 0) * (CASE WHEN unit.unit_code = 'KG' THEN 1 ELSE 1000 END) kg_qty,
            DATE_FORMAT(
            position.create_time,
            '%Y-%m-%d'
            ) create_time,
            IFNULL(position.product_batch, '') product_batch,
            IFNULL(position.erp_batch, '') erp_batch,
            IFNULL(head.doc_time, '') doc_time,
            IFNULL(head.posting_date, '') posting_date,
            IFNULL(head.receipt_type, '') receipt_type,
            '' driver,
            '' vehicle,
            head.remark AS headremark,
            item.remark AS itemremark,
            IFNULL(u.user_name, '') user_name,
            CASE
            WHEN head.`status` = '0' THEN
            '未完成'
            WHEN head.`status` = '10' THEN
            '已完成'
            WHEN head.`status` = '2' THEN
            '已提交'
            WHEN head.`status` = '3' THEN
            '已作业'
            WHEN head.`status` = '4' THEN
            '已关联'
            WHEN head.`status` = '5' THEN
            '已转储'
            WHEN head.`status` = '6' THEN
            '已拣货'
            WHEN head.`status` = '7' THEN
            '待出库'
            WHEN head.`status` = '8' THEN
            '已开票'
            WHEN head.`status` = '20' THEN
            '已冲销'
            END status_name,
            item.mes_doc_code,
            item.mat_write_off_code mat_off_code,
            item.mes_write_off_code mes_off_code
            FROM
            biz_stock_output_position position
            INNER JOIN biz_stock_output_head head ON head.stock_output_id = position.stock_output_id
            INNER JOIN biz_stock_output_item item ON item.stock_output_id = position.stock_output_id
            AND item.stock_output_rid = position.stock_output_rid
            LEFT JOIN dic_move_type move ON move.move_type_id = item.move_type_id
            INNER JOIN dic_factory ftyout ON ftyout.fty_id = item.fty_id
            INNER JOIN dic_stock_location locout ON locout.location_id = item.location_id
            LEFT JOIN dic_unit unit ON unit.unit_id = item.unit_id
            INNER JOIN dic_material mat ON mat.mat_id = item.mat_id
            INNER JOIN wms_user u ON u.user_id = head.create_user
            WHERE
            item.is_delete = 0
            <if test="whOutputId!=null and whOutputId!=''">
                and locout.wh_id=#{whOutputId}
            </if>
            <if test="ftyOutputId != null and ftyOutputId !=''">
                AND item.fty_id= #{ftyOutputId,jdbcType=VARCHAR}
            </if>
            <if test="locationOutputId != null and locationOutputId !=''">
                AND item.location_id = #{locationOutputId,jdbcType=VARCHAR}
            </if>
            <if test="createTimeBegin != null">
                AND DATE(head.posting_date) <![CDATA[>=]]>
                DATE(#{createTimeBegin,jdbcType=TIMESTAMP})
            </if>
            <if test="createTimeEnd != null">
                AND DATE(head.posting_date) <![CDATA[<=]]>
                DATE(#{createTimeEnd,jdbcType=TIMESTAMP})
            </if>
            <if test="referReceiptCode != null and referReceiptCode !=''">
                AND head.stock_output_code = #{referReceiptCode,jdbcType=VARCHAR}
            </if>

            <if test="moveTypeCode != null and moveTypeCode !=''">
                AND move.move_type_code = #{moveTypeCode,jdbcType=VARCHAR}
            </if>
            <if test="matCode != null and matCode !=''">
                AND (
                <foreach collection="utilMatCodes" item="item" index="index" separator="or">
                    (mat.mat_code BETWEEN #{item.begin} AND #{item.end}
                    AND CHAR_LENGTH(mat.mat_code) IN (CHAR_LENGTH(#{item.begin}),CHAR_LENGTH(#{item.end})))
                </foreach>
                OR mat.mat_code IN
                <foreach collection="utilMatCodes.get(0).strings" item="string" index="index" open="(" close=")"
                         separator=",">
                    #{string}
                </foreach>
                )
            </if>
            <if test="matName != null and matName !=''">
                AND mat.mat_name LIKE CONCAT('%',#{matName,jdbcType=VARCHAR},'%')
            </if>
            <if test="userName != null and userName !=''">
                AND u.user_name LIKE CONCAT('%',#{userName,jdbcType=VARCHAR},'%')
            </if>

            <if test="productBatch !=null and productBatch!=''">
                AND position.product_batch=#{productBatch}
            </if>

            <if test="matDocCode !=null and matDocCode !=''">
                AND item.mat_doc_code=#{matDocCode}
            </if>
            <if test="erpBatch !=null and erpBatch !=''">
                AND item.erp_batch=#{erpBatch}
            </if>
        </if>
    </select>
    <select id="queryBaseInfo" parameterType="string" resultType="map">
    SELECT
        c.corp_id,
        c.corp_name,
        b.board_id,
        b.board_name
    FROM
        wms_user u
    INNER JOIN dic_corp c ON c.corp_id = u.corp_id
    INNER JOIN dic_board b ON b.board_id = c.board_id
    WHERE u.user_id=#{userId}


    </select>

</mapper>