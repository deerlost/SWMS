<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.inossem.wms.dao.dic.DicWarehouseAreaMapper">
  <resultMap id="BaseResultMap" type="com.inossem.wms.model.dic.DicWarehouseArea">
    <id column="area_id" jdbcType="INTEGER" property="areaId" />
    <result column="wh_id" jdbcType="INTEGER" property="whId" />
    <result column="area_code" jdbcType="VARCHAR" property="areaCode" />
    <result column="area_name" jdbcType="VARCHAR" property="areaName" />
    <result column="check_method" jdbcType="TINYINT" property="checkMethod" />
    <result column="mix" jdbcType="TINYINT" property="mix" />
    <result column="type_input" jdbcType="TINYINT" property="typeInput" />
    <result column="type_output" jdbcType="TINYINT" property="typeOutput" />
    <result column="template" jdbcType="TINYINT" property="template" />
    <result column="is_delete" jdbcType="TINYINT" property="isDelete" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
  </resultMap>
  <sql id="Base_Column_List">
    area_id, wh_id, area_code, area_name, check_method, mix, type_input, type_output, 
    template, is_delete, create_time, modify_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from dic_warehouse_area
    where area_id = #{areaId,jdbcType=INTEGER}
  </select>
  
  <select id="selectByKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from dic_warehouse_area
    where wh_id = #{areaId,jdbcType=INTEGER}
  </select>
  
  
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from dic_warehouse_area
    where area_id = #{areaId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.inossem.wms.model.dic.DicWarehouseArea">
    insert into dic_warehouse_area (area_id, wh_id, area_code, 
      area_name, check_method, mix, 
      type_input, type_output, template, 
      is_delete, create_time, modify_time
      )
    values (#{areaId,jdbcType=INTEGER}, #{whId,jdbcType=INTEGER}, #{areaCode,jdbcType=VARCHAR}, 
      #{areaName,jdbcType=VARCHAR}, #{checkMethod,jdbcType=TINYINT}, #{mix,jdbcType=TINYINT}, 
      #{typeInput,jdbcType=TINYINT}, #{typeOutput,jdbcType=TINYINT}, #{template,jdbcType=TINYINT}, 
      #{isDelete,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, #{modifyTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.inossem.wms.model.dic.DicWarehouseArea">
    insert into dic_warehouse_area
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="areaId != null">
        area_id,
      </if>
      <if test="whId != null">
        wh_id,
      </if>
      <if test="areaCode != null">
        area_code,
      </if>
      <if test="areaName != null">
        area_name,
      </if>
      <if test="checkMethod != null">
        check_method,
      </if>
      <if test="mix != null">
        mix,
      </if>
      <if test="typeInput != null">
        type_input,
      </if>
      <if test="typeOutput != null">
        type_output,
      </if>
      <if test="template != null">
        template,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="modifyTime != null">
        modify_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="areaId != null">
        #{areaId,jdbcType=INTEGER},
      </if>
      <if test="whId != null">
        #{whId,jdbcType=INTEGER},
      </if>
      <if test="areaCode != null">
        #{areaCode,jdbcType=VARCHAR},
      </if>
      <if test="areaName != null">
        #{areaName,jdbcType=VARCHAR},
      </if>
      <if test="checkMethod != null">
        #{checkMethod,jdbcType=TINYINT},
      </if>
      <if test="mix != null">
        #{mix,jdbcType=TINYINT},
      </if>
      <if test="typeInput != null">
        #{typeInput,jdbcType=TINYINT},
      </if>
      <if test="typeOutput != null">
        #{typeOutput,jdbcType=TINYINT},
      </if>
      <if test="template != null">
        #{template,jdbcType=TINYINT},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.inossem.wms.model.dic.DicWarehouseArea">
    update dic_warehouse_area
    <set>
      <if test="whId != null">
        wh_id = #{whId,jdbcType=INTEGER},
      </if>
      <if test="areaCode != null">
        area_code = #{areaCode,jdbcType=VARCHAR},
      </if>
      <if test="areaName != null">
        area_name = #{areaName,jdbcType=VARCHAR},
      </if>
      <if test="checkMethod != null">
        check_method = #{checkMethod,jdbcType=TINYINT},
      </if>
      <if test="mix != null">
        mix = #{mix,jdbcType=TINYINT},
      </if>
      <if test="typeInput != null">
        type_input = #{typeInput,jdbcType=TINYINT},
      </if>
      <if test="typeOutput != null">
        type_output = #{typeOutput,jdbcType=TINYINT},
      </if>
      <if test="template != null">
        template = #{template,jdbcType=TINYINT},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where area_id = #{areaId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.inossem.wms.model.dic.DicWarehouseArea">
    update dic_warehouse_area
    set wh_id = #{whId,jdbcType=INTEGER},
      area_code = #{areaCode,jdbcType=VARCHAR},
      area_name = #{areaName,jdbcType=VARCHAR},
      check_method = #{checkMethod,jdbcType=TINYINT},
      mix = #{mix,jdbcType=TINYINT},
      type_input = #{typeInput,jdbcType=TINYINT},
      type_output = #{typeOutput,jdbcType=TINYINT},
      template = #{template,jdbcType=TINYINT},
      is_delete = #{isDelete,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP}
    where area_id = #{areaId,jdbcType=INTEGER}
  </update>
  
  <select id="selectAll" resultType="com.inossem.wms.model.dic.DicWarehouseArea">
    SELECT 
	    a.area_id areaId, 
	    a.wh_id whId, 
	    b.wh_code whCode,  
	    a.area_code areaCode, 
	    a.area_name areaName, 
	    a.check_method checkMethod, 
	    a.mix, 
	    a.type_input typeInput, 
	    a.type_output typeOutput, 
	    a.template, 
	    a.is_delete isDelete, 
	    a.create_time createTime, 
	    a.modify_time modifyTime
    FROM dic_warehouse_area a
    INNER JOIN dic_warehouse b ON a.wh_id = b.wh_id AND a.is_delete = 0 AND b.is_delete = 0
  </select>
  
  <select id="selectAllAreaIdAndAreaCodeAndAreaName" resultMap="BaseResultMap">
    SELECT 
	 area_id, area_code, area_name,wh_id
    FROM dic_warehouse_area 
    where is_delete = 0
  </select>
  
     <select id="listAreaOnPaging" parameterType="java.util.HashMap" resultType="java.util.HashMap">
			SELECT
			da.area_id areaId,
		  da.area_code areaCode,
			da.area_name areaName,
		dw.wh_code whCode,
		dw.wh_name whName,
		da.type_input typeInput,
		da.type_output typeOutput,
		da.mix mix,
		da.check_method checkMethod,
		da.create_time createTime
		FROM
			dic_warehouse_area da,dic_warehouse dw
		where 1=1 and da.is_delete='0' and dw.is_delete='0' and da.wh_id = dw.wh_id
	<if test="condition != null and condition!='' " >
		  AND ( dw.wh_code LIKE CONCAT('%',#{condition},'%' ) 
		     OR dw.wh_name LIKE CONCAT('%',#{condition},'%' )
		    
		   )
	</if>	
	order by createTime DESC
  </select>
  
   <select id="selectByPrimaryCode" parameterType="java.util.HashMap" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from dic_warehouse_area
    where is_delete = '0' and area_code = #{areaCode,jdbcType=VARCHAR} and wh_id = #{whId,jdbcType=INTEGER}
  </select>
  
  <select id="selectWareHouseWarring" parameterType="map" resultType="map">
			 
		select
		   t.area_id ,
			any_value(t.area_code) area_code,
			any_value(t.area_name) area_name,
			any_value(t.reminding_qty_one) reminding_qty_one,
			any_value(t.reminding_qty_two) reminding_qty_two,
			any_value(t.volume_min) volume_min,
			any_value(t.volume_max) volume_max,
			any_value(t.wh_id) wh_id,
			any_value(t.wh_code) wh_code,
			any_value(t.wh_name)  wh_name,			
			sum(t.qty) qty,
	        FORMAT(sum(t.qty) / IFNULL(any_value(t.volume_max), 0),2) persont
		
		from (
		
		select   wa.area_id,wa.area_code,wa.area_name ,sum(p.qty*(case when u.unit_code = 'KG' then 1 else 1000 end)) qty,
			IFNULL(wa.reminding_qty_one,"") reminding_qty_one,
			IFNULL(wa.reminding_qty_two,"") reminding_qty_two,
			IFNULL(wa.volume_min,"") volume_min,
			IFNULL(wa.volume_max,"") volume_max ,
			any_value(w.wh_id) wh_id,any_value(w.wh_code) wh_code,any_value(w.wh_name) wh_name
		
			  from dic_warehouse_area wa 
			  inner join dic_warehouse w on wa.wh_id=w.wh_id 
			  inner join stock_position p on p.area_id=wa.area_id 
			  inner join dic_factory f on f.fty_id=p.fty_id	
		    inner join dic_warehouse_position wp on wp.position_id=p.position_id
		    inner join dic_unit u on p.unit_id=u.unit_id
		    where 1=1    and (( f.fty_type= 2	and wp.is_default <![CDATA[<> ]]> 1) or f.fty_type <![CDATA[<> ]]> 2)
		    and p.`status` !=5 and p.stock_type_id=1
		  <if test="ftyId!=null and ftyId!=null">
			    and p.fty_id =#{ftyId}
			 </if>
			  <if test="locationId!=null and locationId!=null">
			   and  p.location_id=#{locationId}  
			  </if>	  
			  <if test="whId!=null and whId!=null">
			   and  wa.wh_id=#{whId}  
			  </if>
		  GROUP BY wa.area_id   
		 
		) t
		  GROUP BY t.area_id
	  </select>
	  
	  <select id="selectWareHouseWarringForPortal" parameterType="map" resultType="map">
	 
	select
   	t.area_id ,
	any_value(t.area_code) area_code,
	any_value(t.area_name) area_name,
	any_value(t.reminding_qty_one) reminding_qty_one,
	any_value(t.reminding_qty_two) reminding_qty_two,
	any_value(t.volume_min) volume_min,
	any_value(t.volume_max) volume_max,
	any_value(t.wh_id) wh_id,
	any_value(t.wh_code) wh_code,
	any_value(t.wh_name)  wh_name,
<!-- 	sum(any_value(t.qty)) qty, -->
<!-- 	FORMAT(sum(any_value(t.qty)) / IFNULL(any_value(t.volume_max), 0),2) persont -->
	sum(t.qty) qty,
	FORMAT(FORMAT(sum(t.qty) / IFNULL(any_value(t.volume_max), 0),2)*100,0) persont

from (

select   wa.area_id,wa.area_code,wa.area_name ,sum(p.qty * (case when u.unit_code = 'KG' then 1 else 1000 end) ) qty,
	IFNULL(wa.reminding_qty_one,"") reminding_qty_one,
	IFNULL(wa.reminding_qty_two,"") reminding_qty_two,
	IFNULL(wa.volume_min,"") volume_min,
	IFNULL(wa.volume_max,"") volume_max ,
	any_value(w.wh_id) wh_id,any_value(w.wh_code) wh_code,any_value(w.wh_name) wh_name

	  from dic_warehouse_area wa 
	  inner join dic_warehouse w on wa.wh_id=w.wh_id 
	  inner join stock_position p on p.area_id=wa.area_id 
	  inner join dic_factory f on f.fty_id=p.fty_id	
    inner join dic_warehouse_position wp on wp.position_id=p.position_id
    inner join dic_unit u on p.unit_id = u.unit_id
    where 1=1 and p.`status`=1   and (( f.fty_type= 2	and wp.is_default <![CDATA[<> ]]> 1) or f.fty_type <![CDATA[<> ]]> 2)
    and p.`status` !=5 and p.stock_type_id=1
    and  wp.is_default!=1
	and year(p.input_date)=year(now())
	<if test="ftyId !=null">
		and p.fty_id = #{ftyId}
	</if>
	<if test="whId !=null">
		and p.wh_id = #{whId}
	</if>
  GROUP BY wa.area_id  
) t
  GROUP BY t.area_id
	  </select>
	  
	  <select id="selectWareHouseWarringByAreaId" parameterType="int" resultType="map">
	   	SELECT
		sum(stock_position.qty * (case when u.unit_code = 'KG' then 1 else 1000 end) ) qty,
		dic_material.mat_name
		FROM
			stock_position
		LEFT JOIN dic_material ON stock_position.mat_id = dic_material.mat_id
		inner join dic_unit u on stock_position.unit_id = u.unit_id
		WHERE
		area_id=#{area_id}
		and stock_position.`status` !=5 and stock_position.stock_type_id=1
		GROUP BY
			stock_position.mat_id,
			stock_position.area_id
		ORDER BY
			qty DESC	  
	  </select>
  
</mapper>