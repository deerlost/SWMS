<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.inossem.wms.dao.serial.SerialPackageMapper">
  <resultMap id="BaseResultMap" type="com.inossem.wms.model.serial.SerialPackage">
    <id column="package_id" jdbcType="INTEGER" property="packageId" />
    <result column="package_code" jdbcType="VARCHAR" property="packageCode" />
    <result column="mat_id" jdbcType="INTEGER" property="matId" />
    <result column="package_type_id" jdbcType="INTEGER" property="packageTypeId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
    <result column="is_delete" jdbcType="TINYINT" property="isDelete"/>
    <result column="status" jdbcType="TINYINT" property="status"/>
    <result column="supplier_id" jdbcType="INTEGER" property="supplierId"/>
    <result column="create_user" jdbcType="VARCHAR" property="createUser"/>
    <result column="modify_user" jdbcType="VARCHAR" property="modifyUser"/>
  </resultMap>
  <sql id="Base_Column_List">
    package_id, package_code, mat_id, package_type_id, create_time, modify_time,is_delete,status,supplier_id,create_user,modify_user
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from serial_package
    where package_id = #{packageId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from serial_package
    where package_id = #{packageId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.inossem.wms.model.serial.SerialPackage" useGeneratedKeys="true" keyProperty="packageId">
    insert into serial_package (package_id, package_code, mat_id, 
      package_type_id, create_time, modify_time,create_user,modify_user
      )
    values (#{packageId,jdbcType=INTEGER}, #{packageCode,jdbcType=VARCHAR}, #{matId,jdbcType=INTEGER}, 
      #{packageTypeId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{modifyTime,jdbcType=TIMESTAMP}
       #{createUser,jdbcType=VARCHAR}, #{modifyUser,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.inossem.wms.model.serial.SerialPackage" useGeneratedKeys="true" keyProperty="packageId">
    insert into serial_package
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="packageId != null">
        package_id,
      </if>
      <if test="packageCode != null">
        package_code,
      </if>
      <if test="matId != null">
        mat_id,
      </if>
      <if test="packageTypeId != null">
        package_type_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="modifyTime != null">
        modify_time,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="supplierId != null">
        supplier_id,
      </if>
      <if test="createUser !=null">
      	create_user,
      </if>
      <if test="modifyUser !=null">
      	modify_user,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="packageId != null">
        #{packageId,jdbcType=INTEGER},
      </if>
      <if test="packageCode != null">
        #{packageCode,jdbcType=VARCHAR},
      </if>
      <if test="matId != null">
        #{matId,jdbcType=INTEGER},
      </if>
      <if test="packageTypeId != null">
        #{packageTypeId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null">
         #{isDelete,jdbcType=TINYINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="supplierId != null">
        #{supplierId,jdbcType=INTEGER},
      </if>
      <if test="createUser !=null">
      	 #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="modifyUser !=null">
      	 #{modifyUser,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.inossem.wms.model.serial.SerialPackage">
    update serial_package
    <set>
      <if test="packageCode != null">
        package_code = #{packageCode,jdbcType=VARCHAR},
      </if>
      <if test="matId != null">
        mat_id = #{matId,jdbcType=INTEGER},
      </if>
      <if test="packageTypeId != null">
        package_type_id = #{packageTypeId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=TINYINT},
      </if>
      <if test="status != null">
         status = #{status,jdbcType=TINYINT},
      </if>
      <if test="supplierId != null">
       	 supplier_id= #{supplierId,jdbcType=INTEGER},
      </if>
      <if test="createUser !=null">
      	create_user= #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="modifyUser !=null">
      	modify_user= #{modifyUser,jdbcType=VARCHAR},
      </if>
    </set>
    where package_id = #{packageId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.inossem.wms.model.serial.SerialPackage">
    update serial_package
    set package_code = #{packageCode,jdbcType=VARCHAR},
      mat_id = #{matId,jdbcType=INTEGER},
      package_type_id = #{packageTypeId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP}
    where package_id = #{packageId,jdbcType=INTEGER}
  </update>
  
  <select id="selectByCode" resultMap="BaseResultMap">
  	 select 
    <include refid="Base_Column_List" />
    from serial_package
    where package_code = #{packageCode,jdbcType=INTEGER}
  </select>
  
  <resultMap type="com.inossem.wms.model.vo.SerialPackageVo" id="BaseResultMapVo" extends="BaseResultMap">
  	<result column="status_name" jdbcType="VARCHAR" property="statusName" />
    <result column="supplier_code" jdbcType="VARCHAR" property="supplierCode" />
    <result column="supplier_name" jdbcType="VARCHAR" property="supplierName" />
    <result column="classificat_name" jdbcType="VARCHAR" property="classificatName"/>
    <result column="package_type_code" jdbcType="VARCHAR" property="packageTypeCode" />
    <result column="package_type_name" jdbcType="VARCHAR" property="packageTypeName" />
    <result column="package_standard" jdbcType="DECIMAL" property="packageStandard" />
    <result column="package_standard_ch" jdbcType="VARCHAR" property="packageStandardCh" />
  </resultMap>
  
  <select id="selectListOnPaging" parameterType="map" resultMap="BaseResultMapVo">
  	SELECT 
  		spack.package_id,
  		spack.package_code,	 
  		spack.mat_id,
  		spack.package_type_id,
  		spack.create_time,
  		spack.modify_time,
  		spack.is_delete,
  		spack.status,
  		spack.create_user,
  		spack.modify_user,
  		case when spack.status=1 then 'Y-激活' 
  			 else 'N-未使用' end as status_name, 
  		spack.supplier_id,
  		sup.supplier_code,	
  		sup.supplier_name,
  		pack.package_type_code,
  		pack.package_type_name,
  		pack.package_standard  / (case when u.unit_code = 'KG' then 1 else 1000 end) package_standard ,
  		pack.package_standard_ch,
  		class.classificat_name
  			FROM serial_package spack
		INNER JOIN dic_package_type pack ON spack.package_type_id=pack.package_type_id AND pack.is_delete=0
		INNER JOIN dic_pack_classification class ON class.classificat_id=pack.classificat_id AND class.is_delete=0
		INNER JOIN dic_supplier sup ON sup.supplier_id=spack.supplier_id 
		inner join dic_material m on spack.mat_id = m.mat_id
    	inner join dic_unit u on u.unit_id = m.unit_id
			WHERE spack.is_delete=0
		<if test="startCreateTime !=null and endCreateTime !=null">
			and DATE(spack.create_time) between #{startCreateTime} and #{endCreateTime}
		</if>
		<if test="packageCode !=null">
			and spack.package_code like concat("%",#{packageCode},"%") 
		</if>
		<if test="classificatId !=null">
			and pack.classificat_id=#{classificatId}
		</if>
	ORDER BY create_time DESC
  </select>
</mapper>